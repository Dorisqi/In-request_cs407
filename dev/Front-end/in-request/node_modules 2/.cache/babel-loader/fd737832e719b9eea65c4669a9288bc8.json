{"ast":null,"code":"import { css } from 'styled-components';\nimport { normalizeColor } from './colors';\nimport { breakpointStyle } from './mixins';\nexport var borderStyle = function borderStyle(data, responsive, theme) {\n  var styles = [];\n  var color = normalizeColor(data.color || 'border', theme);\n  var borderSize = data.size || 'xsmall';\n  var style = data.style || 'solid';\n  var side = typeof data === 'string' ? data : data.side || 'all';\n  var value = style + \" \" + (theme.global.borderSize[borderSize] || borderSize) + \" \" + color;\n  var breakpoint = theme.box.responsiveBreakpoint && theme.global.breakpoints[theme.box.responsiveBreakpoint];\n  var responsiveValue = responsive && breakpoint && (breakpoint.borderSize[borderSize] || borderSize) && style + \" \" + (breakpoint.borderSize[borderSize] || borderSize) + \" \" + color;\n\n  if (side === 'top' || side === 'bottom' || side === 'left' || side === 'right') {\n    styles.push(\"border-\" + side + \": \" + value + \";\");\n\n    if (responsiveValue) {\n      styles.push(breakpointStyle(breakpoint, \"\\n        border-\" + side + \": \" + responsiveValue + \";\\n      \"));\n    }\n  } else if (side === 'end' || side === 'start') {\n    styles.push(css([\"border-inline-\", \":\", \";\"], side, value));\n\n    if (responsiveValue) {\n      styles.push(breakpointStyle(breakpoint, \"\\n        border-inline-\" + side + \": \" + responsiveValue + \";\\n      \"));\n    }\n  } else if (side === 'vertical') {\n    styles.push(css([\"border-left:\", \";border-right:\", \";\"], value, value));\n\n    if (responsiveValue) {\n      styles.push(breakpointStyle(breakpoint, \"\\n        border-left: \" + responsiveValue + \";\\n        border-right: \" + responsiveValue + \";\\n      \"));\n    }\n  } else if (side === 'horizontal') {\n    styles.push(css([\"border-top:\", \";border-bottom:\", \";\"], value, value));\n\n    if (responsiveValue) {\n      styles.push(breakpointStyle(breakpoint, \"\\n        border-top: \" + responsiveValue + \";\\n        border-bottom: \" + responsiveValue + \";\\n      \"));\n    }\n  } else if (side === 'between') {// no-op\n  } else {\n    styles.push(css([\"border:\", \";\"], value));\n\n    if (responsiveValue) {\n      styles.push(breakpointStyle(breakpoint, \"border: \" + responsiveValue + \";\"));\n    }\n  }\n\n  return styles;\n};","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/grommet/es6/utils/border.js"],"names":["css","normalizeColor","breakpointStyle","borderStyle","data","responsive","theme","styles","color","borderSize","size","style","side","value","global","breakpoint","box","responsiveBreakpoint","breakpoints","responsiveValue","push"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,OAAO,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,UAA3B,EAAuCC,KAAvC,EAA8C;AACrE,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,KAAK,GAAGP,cAAc,CAACG,IAAI,CAACI,KAAL,IAAc,QAAf,EAAyBF,KAAzB,CAA1B;AACA,MAAIG,UAAU,GAAGL,IAAI,CAACM,IAAL,IAAa,QAA9B;AACA,MAAIC,KAAK,GAAGP,IAAI,CAACO,KAAL,IAAc,OAA1B;AACA,MAAIC,IAAI,GAAG,OAAOR,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACQ,IAAL,IAAa,KAA1D;AACA,MAAIC,KAAK,GAAGF,KAAK,GAAG,GAAR,IAAeL,KAAK,CAACQ,MAAN,CAAaL,UAAb,CAAwBA,UAAxB,KAAuCA,UAAtD,IAAoE,GAApE,GAA0ED,KAAtF;AACA,MAAIO,UAAU,GAAGT,KAAK,CAACU,GAAN,CAAUC,oBAAV,IAAkCX,KAAK,CAACQ,MAAN,CAAaI,WAAb,CAAyBZ,KAAK,CAACU,GAAN,CAAUC,oBAAnC,CAAnD;AACA,MAAIE,eAAe,GAAGd,UAAU,IAAIU,UAAd,KAA6BA,UAAU,CAACN,UAAX,CAAsBA,UAAtB,KAAqCA,UAAlE,KAAiFE,KAAK,GAAG,GAAR,IAAeI,UAAU,CAACN,UAAX,CAAsBA,UAAtB,KAAqCA,UAApD,IAAkE,GAAlE,GAAwED,KAA/K;;AAEA,MAAII,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,QAA3B,IAAuCA,IAAI,KAAK,MAAhD,IAA0DA,IAAI,KAAK,OAAvE,EAAgF;AAC9EL,IAAAA,MAAM,CAACa,IAAP,CAAY,YAAYR,IAAZ,GAAmB,IAAnB,GAA0BC,KAA1B,GAAkC,GAA9C;;AAEA,QAAIM,eAAJ,EAAqB;AACnBZ,MAAAA,MAAM,CAACa,IAAP,CAAYlB,eAAe,CAACa,UAAD,EAAa,sBAAsBH,IAAtB,GAA6B,IAA7B,GAAoCO,eAApC,GAAsD,WAAnE,CAA3B;AACD;AACF,GAND,MAMO,IAAIP,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,OAA/B,EAAwC;AAC7CL,IAAAA,MAAM,CAACa,IAAP,CAAYpB,GAAG,CAAC,CAAC,gBAAD,EAAmB,GAAnB,EAAwB,GAAxB,CAAD,EAA+BY,IAA/B,EAAqCC,KAArC,CAAf;;AAEA,QAAIM,eAAJ,EAAqB;AACnBZ,MAAAA,MAAM,CAACa,IAAP,CAAYlB,eAAe,CAACa,UAAD,EAAa,6BAA6BH,IAA7B,GAAoC,IAApC,GAA2CO,eAA3C,GAA6D,WAA1E,CAA3B;AACD;AACF,GANM,MAMA,IAAIP,IAAI,KAAK,UAAb,EAAyB;AAC9BL,IAAAA,MAAM,CAACa,IAAP,CAAYpB,GAAG,CAAC,CAAC,cAAD,EAAiB,gBAAjB,EAAmC,GAAnC,CAAD,EAA0Ca,KAA1C,EAAiDA,KAAjD,CAAf;;AAEA,QAAIM,eAAJ,EAAqB;AACnBZ,MAAAA,MAAM,CAACa,IAAP,CAAYlB,eAAe,CAACa,UAAD,EAAa,4BAA4BI,eAA5B,GAA8C,2BAA9C,GAA4EA,eAA5E,GAA8F,WAA3G,CAA3B;AACD;AACF,GANM,MAMA,IAAIP,IAAI,KAAK,YAAb,EAA2B;AAChCL,IAAAA,MAAM,CAACa,IAAP,CAAYpB,GAAG,CAAC,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,GAAnC,CAAD,EAA0Ca,KAA1C,EAAiDA,KAAjD,CAAf;;AAEA,QAAIM,eAAJ,EAAqB;AACnBZ,MAAAA,MAAM,CAACa,IAAP,CAAYlB,eAAe,CAACa,UAAD,EAAa,2BAA2BI,eAA3B,GAA6C,4BAA7C,GAA4EA,eAA5E,GAA8F,WAA3G,CAA3B;AACD;AACF,GANM,MAMA,IAAIP,IAAI,KAAK,SAAb,EAAwB,CAAC;AAC/B,GADM,MACA;AACLL,IAAAA,MAAM,CAACa,IAAP,CAAYpB,GAAG,CAAC,CAAC,SAAD,EAAY,GAAZ,CAAD,EAAmBa,KAAnB,CAAf;;AAEA,QAAIM,eAAJ,EAAqB;AACnBZ,MAAAA,MAAM,CAACa,IAAP,CAAYlB,eAAe,CAACa,UAAD,EAAa,aAAaI,eAAb,GAA+B,GAA5C,CAA3B;AACD;AACF;;AAED,SAAOZ,MAAP;AACD,CA5CM","sourcesContent":["import { css } from 'styled-components';\nimport { normalizeColor } from './colors';\nimport { breakpointStyle } from './mixins';\nexport var borderStyle = function borderStyle(data, responsive, theme) {\n  var styles = [];\n  var color = normalizeColor(data.color || 'border', theme);\n  var borderSize = data.size || 'xsmall';\n  var style = data.style || 'solid';\n  var side = typeof data === 'string' ? data : data.side || 'all';\n  var value = style + \" \" + (theme.global.borderSize[borderSize] || borderSize) + \" \" + color;\n  var breakpoint = theme.box.responsiveBreakpoint && theme.global.breakpoints[theme.box.responsiveBreakpoint];\n  var responsiveValue = responsive && breakpoint && (breakpoint.borderSize[borderSize] || borderSize) && style + \" \" + (breakpoint.borderSize[borderSize] || borderSize) + \" \" + color;\n\n  if (side === 'top' || side === 'bottom' || side === 'left' || side === 'right') {\n    styles.push(\"border-\" + side + \": \" + value + \";\");\n\n    if (responsiveValue) {\n      styles.push(breakpointStyle(breakpoint, \"\\n        border-\" + side + \": \" + responsiveValue + \";\\n      \"));\n    }\n  } else if (side === 'end' || side === 'start') {\n    styles.push(css([\"border-inline-\", \":\", \";\"], side, value));\n\n    if (responsiveValue) {\n      styles.push(breakpointStyle(breakpoint, \"\\n        border-inline-\" + side + \": \" + responsiveValue + \";\\n      \"));\n    }\n  } else if (side === 'vertical') {\n    styles.push(css([\"border-left:\", \";border-right:\", \";\"], value, value));\n\n    if (responsiveValue) {\n      styles.push(breakpointStyle(breakpoint, \"\\n        border-left: \" + responsiveValue + \";\\n        border-right: \" + responsiveValue + \";\\n      \"));\n    }\n  } else if (side === 'horizontal') {\n    styles.push(css([\"border-top:\", \";border-bottom:\", \";\"], value, value));\n\n    if (responsiveValue) {\n      styles.push(breakpointStyle(breakpoint, \"\\n        border-top: \" + responsiveValue + \";\\n        border-bottom: \" + responsiveValue + \";\\n      \"));\n    }\n  } else if (side === 'between') {// no-op\n  } else {\n    styles.push(css([\"border:\", \";\"], value));\n\n    if (responsiveValue) {\n      styles.push(breakpointStyle(breakpoint, \"border: \" + responsiveValue + \";\"));\n    }\n  }\n\n  return styles;\n};"]},"metadata":{},"sourceType":"module"}