{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, isValidElement, useContext, useEffect, useRef, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Drop } from '../Drop';\nimport { InfiniteScroll } from '../InfiniteScroll';\nimport { Keyboard } from '../Keyboard';\nimport { FormContext } from '../Form/FormContext';\nimport { AnnounceContext } from '../../contexts';\nimport { isNodeAfterScroll, isNodeBeforeScroll, sizeStyle } from '../../utils';\nimport { StyledTextInput, StyledTextInputContainer, StyledPlaceholder, StyledSuggestions } from './StyledTextInput';\n\nvar renderLabel = function renderLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    return suggestion.label || suggestion.value;\n  }\n\n  return suggestion;\n};\n\nvar stringLabel = function stringLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    if (suggestion.label && typeof suggestion.label === 'string') {\n      return suggestion.label;\n    }\n\n    return suggestion.value;\n  }\n\n  return suggestion;\n};\n\nvar ContainerBox = styled(Box).withConfig({\n  displayName: \"TextInput__ContainerBox\",\n  componentId: \"sc-1ai0c08-0\"\n})([\"\", \";@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}\"], function (props) {\n  return props.dropHeight ? sizeStyle('max-height', props.dropHeight, props.theme) : 'max-height: inherit;';\n});\nvar TextInput = forwardRef(function (_ref, ref) {\n  var defaultValue = _ref.defaultValue,\n      _ref$dropAlign = _ref.dropAlign,\n      dropAlign = _ref$dropAlign === void 0 ? {\n    top: 'bottom',\n    left: 'left'\n  } : _ref$dropAlign,\n      dropHeight = _ref.dropHeight,\n      dropTarget = _ref.dropTarget,\n      dropProps = _ref.dropProps,\n      id = _ref.id,\n      _ref$messages = _ref.messages,\n      messages = _ref$messages === void 0 ? {\n    enterSelect: '(Press Enter to Select)',\n    suggestionsCount: 'suggestions available',\n    suggestionsExist: 'This input has suggestions use arrow keys to navigate',\n    suggestionIsOpen: 'Suggestions drop is open, continue to use arrow keys to navigate'\n  } : _ref$messages,\n      name = _ref.name,\n      _onBlur = _ref.onBlur,\n      _onChange = _ref.onChange,\n      _onFocus = _ref.onFocus,\n      onKeyDown = _ref.onKeyDown,\n      onSelect = _ref.onSelect,\n      onSuggestionsClose = _ref.onSuggestionsClose,\n      onSuggestionsOpen = _ref.onSuggestionsOpen,\n      placeholder = _ref.placeholder,\n      plain = _ref.plain,\n      suggestions = _ref.suggestions,\n      valueProp = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"defaultValue\", \"dropAlign\", \"dropHeight\", \"dropTarget\", \"dropProps\", \"id\", \"messages\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onKeyDown\", \"onSelect\", \"onSuggestionsClose\", \"onSuggestionsOpen\", \"placeholder\", \"plain\", \"suggestions\", \"value\"]);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var announce = useContext(AnnounceContext);\n  var formContext = useContext(FormContext);\n  var inputRef = useRef();\n  var dropRef = useRef();\n  var suggestionsRef = useRef();\n  var suggestionRefs = {};\n\n  var _formContext$useFormC = formContext.useFormContext(name, valueProp),\n      value = _formContext$useFormC[0],\n      setValue = _formContext$useFormC[1];\n\n  var _useState = useState(),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  var _useState2 = useState(),\n      showDrop = _useState2[0],\n      setShowDrop = _useState2[1]; // if we have no suggestions, close drop if it's open\n\n\n  useEffect(function () {\n    if (showDrop && (!suggestions || !suggestions.length)) {\n      setShowDrop(false);\n      if (onSuggestionsClose) onSuggestionsClose();\n    }\n  }, [onSuggestionsClose, showDrop, suggestions]);\n\n  var _useState3 = useState(-1),\n      activeSuggestionIndex = _useState3[0],\n      setActiveSuggestionIndex = _useState3[1]; // reset activeSuggestionIndex when the drop is closed\n\n\n  useEffect(function () {\n    if (activeSuggestionIndex !== -1 && !showDrop) {\n      setActiveSuggestionIndex(-1);\n    }\n  }, [activeSuggestionIndex, showDrop]); // announce active suggestion\n\n  useEffect(function () {\n    if (activeSuggestionIndex >= 0) {\n      var label = stringLabel(suggestions[activeSuggestionIndex]);\n      announce(label + \" \" + messages.enterSelect);\n    }\n  }, [activeSuggestionIndex, announce, messages, suggestions]);\n\n  var _useState4 = useState(-1),\n      selectedSuggestionIndex = _useState4[0],\n      setSelectedSuggestionIndex = _useState4[1]; // set selectedSuggestionIndex based on value and current suggestions\n\n\n  useEffect(function () {\n    if (suggestions) {\n      var suggestionValues = suggestions.map(function (suggestion) {\n        return typeof suggestion === 'object' ? suggestion.value : suggestion;\n      });\n      setSelectedSuggestionIndex(suggestionValues.indexOf(value));\n    } else setSelectedSuggestionIndex(-1);\n  }, [suggestions, value]); // make sure activeSuggestion remains visible in scroll\n\n  useEffect(function () {\n    var buttonNode = suggestionRefs[activeSuggestionIndex];\n    var optionsNode = suggestionsRef.current;\n\n    if (buttonNode && isNodeAfterScroll(buttonNode, optionsNode) && optionsNode.scrollTo) {\n      optionsNode.scrollTo(0, buttonNode.offsetTop - (optionsNode.getBoundingClientRect().height - buttonNode.getBoundingClientRect().height));\n    }\n\n    if (buttonNode && isNodeBeforeScroll(buttonNode, optionsNode) && optionsNode.scrollTo) {\n      optionsNode.scrollTo(0, buttonNode.offsetTop);\n    }\n  }, [activeSuggestionIndex, suggestionRefs]);\n\n  var openDrop = function openDrop() {\n    setShowDrop(true);\n    announce(messages.suggestionIsOpen);\n    announce(suggestions.length + \" \" + messages.suggestionsCount);\n    if (onSuggestionsOpen) onSuggestionsOpen();\n  };\n\n  var closeDrop = function closeDrop() {\n    setShowDrop(false);\n    if (messages.onSuggestionsClose) onSuggestionsClose();\n  };\n\n  var onNextSuggestion = function onNextSuggestion(event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.min(activeSuggestionIndex + 1, suggestions.length - 1);\n    setActiveSuggestionIndex(nextActiveIndex);\n  };\n\n  var onPreviousSuggestion = function onPreviousSuggestion(event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.max(activeSuggestionIndex - 1, 0);\n    setActiveSuggestionIndex(nextActiveIndex);\n  };\n\n  var showStyledPlaceholder = placeholder && typeof placeholder !== 'string' && !value;\n  var drop;\n\n  if (showDrop) {\n    drop = // keyboard access needed here in case user clicks\n    // and drags on scroll bar and focus shifts to drop\n    React.createElement(Keyboard, {\n      onDown: function onDown(event) {\n        return onNextSuggestion(event);\n      },\n      onUp: function onUp(event) {\n        return onPreviousSuggestion(event);\n      },\n      onEnter: function onEnter(event) {\n        // we stole the focus, give it back\n        (ref || inputRef).current.focus();\n        closeDrop();\n\n        if (onSelect) {\n          var adjustedEvent = event;\n          adjustedEvent.suggestion = suggestions[activeSuggestionIndex];\n          onSelect(adjustedEvent);\n        }\n\n        setValue(suggestions[activeSuggestionIndex]);\n      }\n    }, React.createElement(Drop, _extends({\n      ref: dropRef,\n      id: id ? \"text-input-drop__\" + id : undefined,\n      align: dropAlign,\n      responsive: false,\n      target: dropTarget || (ref || inputRef).current,\n      onClickOutside: closeDrop,\n      onEsc: closeDrop\n    }, dropProps), React.createElement(ContainerBox, {\n      ref: suggestionsRef,\n      overflow: \"auto\",\n      dropHeight: dropHeight\n    }, React.createElement(StyledSuggestions, null, React.createElement(InfiniteScroll, {\n      items: suggestions,\n      step: theme.select.step\n    }, function (suggestion, index) {\n      var plainLabel = typeof suggestion === 'object' && typeof isValidElement(suggestion.label);\n      return React.createElement(\"li\", {\n        key: stringLabel(suggestion) + \"-\" + index\n      }, React.createElement(Button, {\n        active: activeSuggestionIndex === index || selectedSuggestionIndex === index,\n        ref: function ref(r) {\n          suggestionRefs[index] = r;\n        },\n        fill: true,\n        hoverIndicator: \"background\",\n        onClick: function onClick(event) {\n          // we stole the focus, give it back\n          (ref || inputRef).current.focus();\n          closeDrop();\n\n          if (onSelect) {\n            event.persist();\n            var adjustedEvent = event;\n            adjustedEvent.suggestion = suggestion;\n            adjustedEvent.target = (ref || inputRef).current;\n            onSelect(adjustedEvent);\n          }\n\n          setValue(suggestion);\n        },\n        onMouseOver: function onMouseOver() {\n          return setActiveSuggestionIndex(index);\n        },\n        onFocus: function onFocus() {\n          return setActiveSuggestionIndex(index);\n        }\n      }, plainLabel ? renderLabel(suggestion) : React.createElement(Box, {\n        align: \"start\",\n        pad: \"small\"\n      }, renderLabel(suggestion))));\n    })))));\n  }\n\n  return React.createElement(StyledTextInputContainer, {\n    plain: plain\n  }, showStyledPlaceholder && React.createElement(StyledPlaceholder, null, placeholder), React.createElement(Keyboard, {\n    onEnter: function onEnter(event) {\n      closeDrop();\n\n      if (activeSuggestionIndex >= 0 && onSelect) {\n        // prevent submitting forms when choosing a suggestion\n        event.preventDefault();\n        event.persist();\n        var adjustedEvent = event;\n        adjustedEvent.suggestion = suggestions[activeSuggestionIndex];\n        adjustedEvent.target = (ref || inputRef).current;\n        onSelect(adjustedEvent);\n      }\n    },\n    onEsc: showDrop ? function (event) {\n      closeDrop(); // we have to stop both synthetic events and native events\n      // drop and layer should not close by pressing esc on this\n      // input\n\n      event.stopPropagation();\n      event.nativeEvent.stopImmediatePropagation();\n    } : undefined,\n    onTab: showDrop ? closeDrop : undefined,\n    onUp: showDrop && suggestions && suggestions.length > 0 && activeSuggestionIndex ? function (event) {\n      onPreviousSuggestion(event);\n    } : undefined,\n    onDown: suggestions && suggestions.length > 0 ? function (event) {\n      if (!showDrop) {\n        openDrop();\n      } else {\n        onNextSuggestion(event);\n      }\n    } : undefined,\n    onKeyDown: onKeyDown\n  }, React.createElement(StyledTextInput, _extends({\n    ref: ref || inputRef,\n    id: id,\n    name: name,\n    autoComplete: \"off\",\n    plain: plain,\n    placeholder: typeof placeholder === 'string' ? placeholder : undefined,\n    focus: focus\n  }, rest, {\n    defaultValue: renderLabel(defaultValue),\n    value: renderLabel(value) || '',\n    onFocus: function onFocus(event) {\n      setFocus(true);\n\n      if (suggestions && suggestions.length > 0) {\n        announce(messages.suggestionsExist);\n      }\n\n      setShowDrop(true);\n\n      if (_onFocus) {\n        _onFocus(event);\n      }\n    },\n    onBlur: function onBlur(event) {\n      setFocus(false); // This will be called when the user clicks on a suggestion,\n      // check for that and don't remove the drop in that case.\n      // Drop will already have removed itself if the user has focused\n      // outside of the Drop.\n\n      if (!dropRef.current) {\n        closeDrop();\n\n        if (_onBlur) {\n          _onBlur(event);\n        }\n      }\n    },\n    onChange: function onChange(event) {\n      setValue(event.target.value);\n      if (_onChange) _onChange(event);\n    }\n  }))), drop);\n});\nTextInput.displayName = 'TextInput';\nvar TextInputDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  TextInputDoc = require('./doc').doc(TextInput);\n}\n\nvar TextInputWrapper = TextInputDoc || TextInput;\nexport { TextInputWrapper as TextInput };","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/grommet/es6/components/TextInput/TextInput.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","forwardRef","isValidElement","useContext","useEffect","useRef","useState","styled","ThemeContext","defaultProps","Box","Button","Drop","InfiniteScroll","Keyboard","FormContext","AnnounceContext","isNodeAfterScroll","isNodeBeforeScroll","sizeStyle","StyledTextInput","StyledTextInputContainer","StyledPlaceholder","StyledSuggestions","renderLabel","suggestion","label","value","stringLabel","ContainerBox","withConfig","displayName","componentId","props","dropHeight","theme","TextInput","_ref","ref","defaultValue","_ref$dropAlign","dropAlign","top","left","dropTarget","dropProps","id","_ref$messages","messages","enterSelect","suggestionsCount","suggestionsExist","suggestionIsOpen","name","_onBlur","onBlur","_onChange","onChange","_onFocus","onFocus","onKeyDown","onSelect","onSuggestionsClose","onSuggestionsOpen","placeholder","plain","suggestions","valueProp","rest","announce","formContext","inputRef","dropRef","suggestionsRef","suggestionRefs","_formContext$useFormC","useFormContext","setValue","_useState","focus","setFocus","_useState2","showDrop","setShowDrop","_useState3","activeSuggestionIndex","setActiveSuggestionIndex","_useState4","selectedSuggestionIndex","setSelectedSuggestionIndex","suggestionValues","map","buttonNode","optionsNode","current","scrollTo","offsetTop","getBoundingClientRect","height","openDrop","closeDrop","onNextSuggestion","event","preventDefault","nextActiveIndex","Math","min","onPreviousSuggestion","max","showStyledPlaceholder","drop","createElement","onDown","onUp","onEnter","adjustedEvent","undefined","align","responsive","onClickOutside","onEsc","overflow","items","step","select","index","plainLabel","active","r","fill","hoverIndicator","onClick","persist","onMouseOver","pad","stopPropagation","nativeEvent","stopImmediatePropagation","onTab","autoComplete","TextInputDoc","process","env","NODE_ENV","require","doc","TextInputWrapper"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef, isValidElement, useContext, useEffect, useRef, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Drop } from '../Drop';\nimport { InfiniteScroll } from '../InfiniteScroll';\nimport { Keyboard } from '../Keyboard';\nimport { FormContext } from '../Form/FormContext';\nimport { AnnounceContext } from '../../contexts';\nimport { isNodeAfterScroll, isNodeBeforeScroll, sizeStyle } from '../../utils';\nimport { StyledTextInput, StyledTextInputContainer, StyledPlaceholder, StyledSuggestions } from './StyledTextInput';\n\nvar renderLabel = function renderLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    return suggestion.label || suggestion.value;\n  }\n\n  return suggestion;\n};\n\nvar stringLabel = function stringLabel(suggestion) {\n  if (suggestion && typeof suggestion === 'object') {\n    if (suggestion.label && typeof suggestion.label === 'string') {\n      return suggestion.label;\n    }\n\n    return suggestion.value;\n  }\n\n  return suggestion;\n};\n\nvar ContainerBox = styled(Box).withConfig({\n  displayName: \"TextInput__ContainerBox\",\n  componentId: \"sc-1ai0c08-0\"\n})([\"\", \";@media screen and (-ms-high-contrast:active),(-ms-high-contrast:none){width:100%;}\"], function (props) {\n  return props.dropHeight ? sizeStyle('max-height', props.dropHeight, props.theme) : 'max-height: inherit;';\n});\nvar TextInput = forwardRef(function (_ref, ref) {\n  var defaultValue = _ref.defaultValue,\n      _ref$dropAlign = _ref.dropAlign,\n      dropAlign = _ref$dropAlign === void 0 ? {\n    top: 'bottom',\n    left: 'left'\n  } : _ref$dropAlign,\n      dropHeight = _ref.dropHeight,\n      dropTarget = _ref.dropTarget,\n      dropProps = _ref.dropProps,\n      id = _ref.id,\n      _ref$messages = _ref.messages,\n      messages = _ref$messages === void 0 ? {\n    enterSelect: '(Press Enter to Select)',\n    suggestionsCount: 'suggestions available',\n    suggestionsExist: 'This input has suggestions use arrow keys to navigate',\n    suggestionIsOpen: 'Suggestions drop is open, continue to use arrow keys to navigate'\n  } : _ref$messages,\n      name = _ref.name,\n      _onBlur = _ref.onBlur,\n      _onChange = _ref.onChange,\n      _onFocus = _ref.onFocus,\n      onKeyDown = _ref.onKeyDown,\n      onSelect = _ref.onSelect,\n      onSuggestionsClose = _ref.onSuggestionsClose,\n      onSuggestionsOpen = _ref.onSuggestionsOpen,\n      placeholder = _ref.placeholder,\n      plain = _ref.plain,\n      suggestions = _ref.suggestions,\n      valueProp = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"defaultValue\", \"dropAlign\", \"dropHeight\", \"dropTarget\", \"dropProps\", \"id\", \"messages\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"onKeyDown\", \"onSelect\", \"onSuggestionsClose\", \"onSuggestionsOpen\", \"placeholder\", \"plain\", \"suggestions\", \"value\"]);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var announce = useContext(AnnounceContext);\n  var formContext = useContext(FormContext);\n  var inputRef = useRef();\n  var dropRef = useRef();\n  var suggestionsRef = useRef();\n  var suggestionRefs = {};\n\n  var _formContext$useFormC = formContext.useFormContext(name, valueProp),\n      value = _formContext$useFormC[0],\n      setValue = _formContext$useFormC[1];\n\n  var _useState = useState(),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  var _useState2 = useState(),\n      showDrop = _useState2[0],\n      setShowDrop = _useState2[1]; // if we have no suggestions, close drop if it's open\n\n\n  useEffect(function () {\n    if (showDrop && (!suggestions || !suggestions.length)) {\n      setShowDrop(false);\n      if (onSuggestionsClose) onSuggestionsClose();\n    }\n  }, [onSuggestionsClose, showDrop, suggestions]);\n\n  var _useState3 = useState(-1),\n      activeSuggestionIndex = _useState3[0],\n      setActiveSuggestionIndex = _useState3[1]; // reset activeSuggestionIndex when the drop is closed\n\n\n  useEffect(function () {\n    if (activeSuggestionIndex !== -1 && !showDrop) {\n      setActiveSuggestionIndex(-1);\n    }\n  }, [activeSuggestionIndex, showDrop]); // announce active suggestion\n\n  useEffect(function () {\n    if (activeSuggestionIndex >= 0) {\n      var label = stringLabel(suggestions[activeSuggestionIndex]);\n      announce(label + \" \" + messages.enterSelect);\n    }\n  }, [activeSuggestionIndex, announce, messages, suggestions]);\n\n  var _useState4 = useState(-1),\n      selectedSuggestionIndex = _useState4[0],\n      setSelectedSuggestionIndex = _useState4[1]; // set selectedSuggestionIndex based on value and current suggestions\n\n\n  useEffect(function () {\n    if (suggestions) {\n      var suggestionValues = suggestions.map(function (suggestion) {\n        return typeof suggestion === 'object' ? suggestion.value : suggestion;\n      });\n      setSelectedSuggestionIndex(suggestionValues.indexOf(value));\n    } else setSelectedSuggestionIndex(-1);\n  }, [suggestions, value]); // make sure activeSuggestion remains visible in scroll\n\n  useEffect(function () {\n    var buttonNode = suggestionRefs[activeSuggestionIndex];\n    var optionsNode = suggestionsRef.current;\n\n    if (buttonNode && isNodeAfterScroll(buttonNode, optionsNode) && optionsNode.scrollTo) {\n      optionsNode.scrollTo(0, buttonNode.offsetTop - (optionsNode.getBoundingClientRect().height - buttonNode.getBoundingClientRect().height));\n    }\n\n    if (buttonNode && isNodeBeforeScroll(buttonNode, optionsNode) && optionsNode.scrollTo) {\n      optionsNode.scrollTo(0, buttonNode.offsetTop);\n    }\n  }, [activeSuggestionIndex, suggestionRefs]);\n\n  var openDrop = function openDrop() {\n    setShowDrop(true);\n    announce(messages.suggestionIsOpen);\n    announce(suggestions.length + \" \" + messages.suggestionsCount);\n    if (onSuggestionsOpen) onSuggestionsOpen();\n  };\n\n  var closeDrop = function closeDrop() {\n    setShowDrop(false);\n    if (messages.onSuggestionsClose) onSuggestionsClose();\n  };\n\n  var onNextSuggestion = function onNextSuggestion(event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.min(activeSuggestionIndex + 1, suggestions.length - 1);\n    setActiveSuggestionIndex(nextActiveIndex);\n  };\n\n  var onPreviousSuggestion = function onPreviousSuggestion(event) {\n    event.preventDefault();\n    var nextActiveIndex = Math.max(activeSuggestionIndex - 1, 0);\n    setActiveSuggestionIndex(nextActiveIndex);\n  };\n\n  var showStyledPlaceholder = placeholder && typeof placeholder !== 'string' && !value;\n  var drop;\n\n  if (showDrop) {\n    drop = // keyboard access needed here in case user clicks\n    // and drags on scroll bar and focus shifts to drop\n    React.createElement(Keyboard, {\n      onDown: function onDown(event) {\n        return onNextSuggestion(event);\n      },\n      onUp: function onUp(event) {\n        return onPreviousSuggestion(event);\n      },\n      onEnter: function onEnter(event) {\n        // we stole the focus, give it back\n        (ref || inputRef).current.focus();\n        closeDrop();\n\n        if (onSelect) {\n          var adjustedEvent = event;\n          adjustedEvent.suggestion = suggestions[activeSuggestionIndex];\n          onSelect(adjustedEvent);\n        }\n\n        setValue(suggestions[activeSuggestionIndex]);\n      }\n    }, React.createElement(Drop, _extends({\n      ref: dropRef,\n      id: id ? \"text-input-drop__\" + id : undefined,\n      align: dropAlign,\n      responsive: false,\n      target: dropTarget || (ref || inputRef).current,\n      onClickOutside: closeDrop,\n      onEsc: closeDrop\n    }, dropProps), React.createElement(ContainerBox, {\n      ref: suggestionsRef,\n      overflow: \"auto\",\n      dropHeight: dropHeight\n    }, React.createElement(StyledSuggestions, null, React.createElement(InfiniteScroll, {\n      items: suggestions,\n      step: theme.select.step\n    }, function (suggestion, index) {\n      var plainLabel = typeof suggestion === 'object' && typeof isValidElement(suggestion.label);\n      return React.createElement(\"li\", {\n        key: stringLabel(suggestion) + \"-\" + index\n      }, React.createElement(Button, {\n        active: activeSuggestionIndex === index || selectedSuggestionIndex === index,\n        ref: function ref(r) {\n          suggestionRefs[index] = r;\n        },\n        fill: true,\n        hoverIndicator: \"background\",\n        onClick: function onClick(event) {\n          // we stole the focus, give it back\n          (ref || inputRef).current.focus();\n          closeDrop();\n\n          if (onSelect) {\n            event.persist();\n            var adjustedEvent = event;\n            adjustedEvent.suggestion = suggestion;\n            adjustedEvent.target = (ref || inputRef).current;\n            onSelect(adjustedEvent);\n          }\n\n          setValue(suggestion);\n        },\n        onMouseOver: function onMouseOver() {\n          return setActiveSuggestionIndex(index);\n        },\n        onFocus: function onFocus() {\n          return setActiveSuggestionIndex(index);\n        }\n      }, plainLabel ? renderLabel(suggestion) : React.createElement(Box, {\n        align: \"start\",\n        pad: \"small\"\n      }, renderLabel(suggestion))));\n    })))));\n  }\n\n  return React.createElement(StyledTextInputContainer, {\n    plain: plain\n  }, showStyledPlaceholder && React.createElement(StyledPlaceholder, null, placeholder), React.createElement(Keyboard, {\n    onEnter: function onEnter(event) {\n      closeDrop();\n\n      if (activeSuggestionIndex >= 0 && onSelect) {\n        // prevent submitting forms when choosing a suggestion\n        event.preventDefault();\n        event.persist();\n        var adjustedEvent = event;\n        adjustedEvent.suggestion = suggestions[activeSuggestionIndex];\n        adjustedEvent.target = (ref || inputRef).current;\n        onSelect(adjustedEvent);\n      }\n    },\n    onEsc: showDrop ? function (event) {\n      closeDrop(); // we have to stop both synthetic events and native events\n      // drop and layer should not close by pressing esc on this\n      // input\n\n      event.stopPropagation();\n      event.nativeEvent.stopImmediatePropagation();\n    } : undefined,\n    onTab: showDrop ? closeDrop : undefined,\n    onUp: showDrop && suggestions && suggestions.length > 0 && activeSuggestionIndex ? function (event) {\n      onPreviousSuggestion(event);\n    } : undefined,\n    onDown: suggestions && suggestions.length > 0 ? function (event) {\n      if (!showDrop) {\n        openDrop();\n      } else {\n        onNextSuggestion(event);\n      }\n    } : undefined,\n    onKeyDown: onKeyDown\n  }, React.createElement(StyledTextInput, _extends({\n    ref: ref || inputRef,\n    id: id,\n    name: name,\n    autoComplete: \"off\",\n    plain: plain,\n    placeholder: typeof placeholder === 'string' ? placeholder : undefined,\n    focus: focus\n  }, rest, {\n    defaultValue: renderLabel(defaultValue),\n    value: renderLabel(value) || '',\n    onFocus: function onFocus(event) {\n      setFocus(true);\n\n      if (suggestions && suggestions.length > 0) {\n        announce(messages.suggestionsExist);\n      }\n\n      setShowDrop(true);\n\n      if (_onFocus) {\n        _onFocus(event);\n      }\n    },\n    onBlur: function onBlur(event) {\n      setFocus(false); // This will be called when the user clicks on a suggestion,\n      // check for that and don't remove the drop in that case.\n      // Drop will already have removed itself if the user has focused\n      // outside of the Drop.\n\n      if (!dropRef.current) {\n        closeDrop();\n\n        if (_onBlur) {\n          _onBlur(event);\n        }\n      }\n    },\n    onChange: function onChange(event) {\n      setValue(event.target.value);\n      if (_onChange) _onChange(event);\n    }\n  }))), drop);\n});\nTextInput.displayName = 'TextInput';\nvar TextInputDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  TextInputDoc = require('./doc').doc(TextInput);\n}\n\nvar TextInputWrapper = TextInputDoc || TextInput;\nexport { TextInputWrapper as TextInput };"]},"metadata":{},"sourceType":"module"}