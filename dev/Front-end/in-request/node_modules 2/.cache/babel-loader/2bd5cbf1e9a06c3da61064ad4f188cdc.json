{"ast":null,"code":"export var findScrollParents = function findScrollParents(element, horizontal) {\n  var result = [];\n\n  if (element) {\n    var parent = element.parentNode;\n\n    while (parent && parent.getBoundingClientRect) {\n      var rect = parent.getBoundingClientRect(); // 10px is to account for borders and scrollbars in a lazy way\n\n      if (horizontal) {\n        if (rect.width && parent.scrollWidth > rect.width + 10) {\n          result.push(parent);\n        }\n      } else if (rect.height && parent.scrollHeight > rect.height + 10) {\n        result.push(parent);\n      }\n\n      parent = parent.parentNode;\n    } // last scrollable element will be the document\n    // if nothing else is scrollable in the page\n\n\n    if (result.length === 0) {\n      result.push(document);\n    } else if (result[0].tagName.toLowerCase() === 'body') {\n      result.length = 0;\n      result.push(document);\n    }\n  }\n\n  return result;\n};\nexport var getFirstFocusableDescendant = function getFirstFocusableDescendant(element) {\n  var children = element.getElementsByTagName('*');\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var tagName = child.tagName.toLowerCase();\n\n    if (tagName === 'input' || tagName === 'select') {\n      return child;\n    }\n  }\n\n  return undefined;\n};\nexport var getBodyChildElements = function getBodyChildElements() {\n  var excludeMatch = /^(script|link)$/i;\n  var children = [];\n  [].forEach.call(document.body.children, function (node) {\n    if (!excludeMatch.test(node.tagName)) {\n      children.push(node);\n    }\n  });\n  return children;\n};\nexport var getNewContainer = function getNewContainer() {\n  // setup DOM\n  var container = document.createElement('div');\n  document.body.appendChild(container);\n  return container;\n};\nexport var setFocusWithoutScroll = function setFocusWithoutScroll(element) {\n  var x = window.scrollX;\n  var y = window.scrollY;\n  element.focus();\n  window.scrollTo(x, y);\n};\nvar TABINDEX = 'tabindex';\nvar TABINDEX_STATE = 'data-g-tabindex';\nexport var makeNodeFocusable = function makeNodeFocusable(node) {\n  // do not touch aria live containers so that announcements work\n  if (!node.hasAttribute('aria-live')) {\n    node.setAttribute('aria-hidden', false); // allow children to receive focus again\n\n    var elements = node.getElementsByTagName('*'); // only reset elements we've changed in makeNodeUnfocusable()\n\n    Array.prototype.filter.call(elements || [], function (element) {\n      return element.hasAttribute(TABINDEX_STATE);\n    }).forEach(function (element) {\n      var prior = element.getAttribute(TABINDEX_STATE);\n\n      if (prior >= 0) {\n        element.setAttribute(TABINDEX, element.getAttribute(TABINDEX_STATE));\n      } else if (prior === 'none') {\n        element.removeAttribute(TABINDEX);\n      }\n\n      element.removeAttribute(TABINDEX_STATE);\n    });\n  }\n};\nvar autoFocusingTags = /(a|area|input|select|textarea|button|iframe)$/;\nexport var makeNodeUnfocusable = function makeNodeUnfocusable(node) {\n  // do not touch aria live containers so that announcements work\n  if (!node.hasAttribute('aria-live')) {\n    node.setAttribute('aria-hidden', true); // prevent children to receive focus\n\n    var elements = node.getElementsByTagName('*'); // first, save off the tabindex of any element with one\n\n    Array.prototype.filter.call(elements || [], function (element) {\n      return element.getAttribute(TABINDEX) !== null;\n    }).forEach(function (element) {\n      element.setAttribute(TABINDEX_STATE, element.getAttribute(TABINDEX));\n      element.setAttribute(TABINDEX, -1);\n    }); // then, if any element is inherently focusable and not handled above,\n    // give it a tabindex of -1 so it can't receive focus\n\n    Array.prototype.filter.call(elements || [], function (element) {\n      var currentTag = element.tagName.toLowerCase();\n      return currentTag.match(autoFocusingTags) && element.focus && element.getAttribute(TABINDEX_STATE) === null;\n    }).forEach(function (element) {\n      element.setAttribute(TABINDEX_STATE, 'none');\n      element.setAttribute(TABINDEX, -1);\n    });\n  }\n};\nexport var findVisibleParent = function findVisibleParent(element) {\n  if (element) {\n    return element.offsetParent ? element : findVisibleParent(element.parentElement) || element;\n  }\n\n  return undefined;\n};\nexport var isNodeAfterScroll = function isNodeAfterScroll(node, target) {\n  if (target === void 0) {\n    target = window;\n  }\n\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n      bottom = _node$getBoundingClie.bottom;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      height = _target$getBoundingCl.height,\n      top = _target$getBoundingCl.top;\n\n  return bottom >= top + height;\n};\nexport var isNodeBeforeScroll = function isNodeBeforeScroll(node, target) {\n  if (target === void 0) {\n    target = window;\n  }\n\n  var _node$getBoundingClie2 = node.getBoundingClientRect(),\n      top = _node$getBoundingClie2.top;\n\n  var _target$getBoundingCl2 = target.getBoundingClientRect(),\n      targetTop = _target$getBoundingCl2.top;\n\n  return top <= targetTop;\n};","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/grommet/es6/utils/DOM.js"],"names":["findScrollParents","element","horizontal","result","parent","parentNode","getBoundingClientRect","rect","width","scrollWidth","push","height","scrollHeight","length","document","tagName","toLowerCase","getFirstFocusableDescendant","children","getElementsByTagName","i","child","undefined","getBodyChildElements","excludeMatch","forEach","call","body","node","test","getNewContainer","container","createElement","appendChild","setFocusWithoutScroll","x","window","scrollX","y","scrollY","focus","scrollTo","TABINDEX","TABINDEX_STATE","makeNodeFocusable","hasAttribute","setAttribute","elements","Array","prototype","filter","prior","getAttribute","removeAttribute","autoFocusingTags","makeNodeUnfocusable","currentTag","match","findVisibleParent","offsetParent","parentElement","isNodeAfterScroll","target","_node$getBoundingClie","bottom","_target$getBoundingCl","top","isNodeBeforeScroll","_node$getBoundingClie2","_target$getBoundingCl2","targetTop"],"mappings":"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","sourcesContent":["export var findScrollParents = function findScrollParents(element, horizontal) {\n  var result = [];\n\n  if (element) {\n    var parent = element.parentNode;\n\n    while (parent && parent.getBoundingClientRect) {\n      var rect = parent.getBoundingClientRect(); // 10px is to account for borders and scrollbars in a lazy way\n\n      if (horizontal) {\n        if (rect.width && parent.scrollWidth > rect.width + 10) {\n          result.push(parent);\n        }\n      } else if (rect.height && parent.scrollHeight > rect.height + 10) {\n        result.push(parent);\n      }\n\n      parent = parent.parentNode;\n    } // last scrollable element will be the document\n    // if nothing else is scrollable in the page\n\n\n    if (result.length === 0) {\n      result.push(document);\n    } else if (result[0].tagName.toLowerCase() === 'body') {\n      result.length = 0;\n      result.push(document);\n    }\n  }\n\n  return result;\n};\nexport var getFirstFocusableDescendant = function getFirstFocusableDescendant(element) {\n  var children = element.getElementsByTagName('*');\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var tagName = child.tagName.toLowerCase();\n\n    if (tagName === 'input' || tagName === 'select') {\n      return child;\n    }\n  }\n\n  return undefined;\n};\nexport var getBodyChildElements = function getBodyChildElements() {\n  var excludeMatch = /^(script|link)$/i;\n  var children = [];\n  [].forEach.call(document.body.children, function (node) {\n    if (!excludeMatch.test(node.tagName)) {\n      children.push(node);\n    }\n  });\n  return children;\n};\nexport var getNewContainer = function getNewContainer() {\n  // setup DOM\n  var container = document.createElement('div');\n  document.body.appendChild(container);\n  return container;\n};\nexport var setFocusWithoutScroll = function setFocusWithoutScroll(element) {\n  var x = window.scrollX;\n  var y = window.scrollY;\n  element.focus();\n  window.scrollTo(x, y);\n};\nvar TABINDEX = 'tabindex';\nvar TABINDEX_STATE = 'data-g-tabindex';\nexport var makeNodeFocusable = function makeNodeFocusable(node) {\n  // do not touch aria live containers so that announcements work\n  if (!node.hasAttribute('aria-live')) {\n    node.setAttribute('aria-hidden', false); // allow children to receive focus again\n\n    var elements = node.getElementsByTagName('*'); // only reset elements we've changed in makeNodeUnfocusable()\n\n    Array.prototype.filter.call(elements || [], function (element) {\n      return element.hasAttribute(TABINDEX_STATE);\n    }).forEach(function (element) {\n      var prior = element.getAttribute(TABINDEX_STATE);\n\n      if (prior >= 0) {\n        element.setAttribute(TABINDEX, element.getAttribute(TABINDEX_STATE));\n      } else if (prior === 'none') {\n        element.removeAttribute(TABINDEX);\n      }\n\n      element.removeAttribute(TABINDEX_STATE);\n    });\n  }\n};\nvar autoFocusingTags = /(a|area|input|select|textarea|button|iframe)$/;\nexport var makeNodeUnfocusable = function makeNodeUnfocusable(node) {\n  // do not touch aria live containers so that announcements work\n  if (!node.hasAttribute('aria-live')) {\n    node.setAttribute('aria-hidden', true); // prevent children to receive focus\n\n    var elements = node.getElementsByTagName('*'); // first, save off the tabindex of any element with one\n\n    Array.prototype.filter.call(elements || [], function (element) {\n      return element.getAttribute(TABINDEX) !== null;\n    }).forEach(function (element) {\n      element.setAttribute(TABINDEX_STATE, element.getAttribute(TABINDEX));\n      element.setAttribute(TABINDEX, -1);\n    }); // then, if any element is inherently focusable and not handled above,\n    // give it a tabindex of -1 so it can't receive focus\n\n    Array.prototype.filter.call(elements || [], function (element) {\n      var currentTag = element.tagName.toLowerCase();\n      return currentTag.match(autoFocusingTags) && element.focus && element.getAttribute(TABINDEX_STATE) === null;\n    }).forEach(function (element) {\n      element.setAttribute(TABINDEX_STATE, 'none');\n      element.setAttribute(TABINDEX, -1);\n    });\n  }\n};\nexport var findVisibleParent = function findVisibleParent(element) {\n  if (element) {\n    return element.offsetParent ? element : findVisibleParent(element.parentElement) || element;\n  }\n\n  return undefined;\n};\nexport var isNodeAfterScroll = function isNodeAfterScroll(node, target) {\n  if (target === void 0) {\n    target = window;\n  }\n\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n      bottom = _node$getBoundingClie.bottom;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      height = _target$getBoundingCl.height,\n      top = _target$getBoundingCl.top;\n\n  return bottom >= top + height;\n};\nexport var isNodeBeforeScroll = function isNodeBeforeScroll(node, target) {\n  if (target === void 0) {\n    target = window;\n  }\n\n  var _node$getBoundingClie2 = node.getBoundingClientRect(),\n      top = _node$getBoundingClie2.top;\n\n  var _target$getBoundingCl2 = target.getBoundingClientRect(),\n      targetTop = _target$getBoundingCl2.top;\n\n  return top <= targetTop;\n};"]},"metadata":{},"sourceType":"module"}