{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { describe, PropTypes } from 'react-desc';\nimport { genericProps, getAvailableAtBadge } from '../../utils';\nimport { themeDocUtils } from '../../utils/themeDocUtils';\nexport var doc = function doc(Video) {\n  var DocumentedVideo = describe(Video).availableAt(getAvailableAtBadge('Video')).description('A video player.').usage(\"import { Video } from 'grommet';\\n<Video />\").intrinsicElement('video');\n  DocumentedVideo.propTypes = _extends({}, genericProps, {\n    autoPlay: PropTypes.bool.description('Enables automatic playback of the video as soon as it is loaded.'),\n    controls: PropTypes.oneOf([false, 'over', 'below']).description('Whether to show playback controls and where to place them.').defaultValue('over'),\n    fit: PropTypes.oneOf(['cover', 'contain']).description('How the image fills its container.'),\n    loop: PropTypes.bool.description('Enables continuous video looping.'),\n    mute: PropTypes.bool.description('Enables video muting. This option is best used with the autoPlay flag.')\n  });\n  return DocumentedVideo;\n};\nexport var themeDoc = _extends({}, themeDocUtils.responsiveBreakpoint('The actual breakpoint to trigger changes in the video component layout.'), {\n  'global.edgeSize.xsmall': {\n    description: 'The width of the video scrubber.',\n    type: 'object',\n    defaultValue: '6px'\n  },\n  'video.captions.background': {\n    description: 'The caption background color of the video ',\n    type: 'string',\n    defaultValue: 'rgba(0, 0, 0, 0.7)'\n  },\n  'video.scrubber.color': {\n    description: 'The background color of the video scrubber.',\n    type: 'string',\n    defaultValue: 'light-4'\n  },\n  'video.extend': {\n    description: 'Any additional style for Video.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  }\n});","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/grommet/es6/components/Video/doc.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","describe","PropTypes","genericProps","getAvailableAtBadge","themeDocUtils","doc","Video","DocumentedVideo","availableAt","description","usage","intrinsicElement","propTypes","autoPlay","bool","controls","oneOf","defaultValue","fit","loop","mute","themeDoc","responsiveBreakpoint","type","undefined"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,QAAT,EAAmBC,SAAnB,QAAoC,YAApC;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,aAAlD;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAO,IAAIC,GAAG,GAAG,SAASA,GAAT,CAAaC,KAAb,EAAoB;AACnC,MAAIC,eAAe,GAAGP,QAAQ,CAACM,KAAD,CAAR,CAAgBE,WAAhB,CAA4BL,mBAAmB,CAAC,OAAD,CAA/C,EAA0DM,WAA1D,CAAsE,iBAAtE,EAAyFC,KAAzF,CAA+F,6CAA/F,EAA8IC,gBAA9I,CAA+J,OAA/J,CAAtB;AACAJ,EAAAA,eAAe,CAACK,SAAhB,GAA4BzB,QAAQ,CAAC,EAAD,EAAKe,YAAL,EAAmB;AACrDW,IAAAA,QAAQ,EAAEZ,SAAS,CAACa,IAAV,CAAeL,WAAf,CAA2B,kEAA3B,CAD2C;AAErDM,IAAAA,QAAQ,EAAEd,SAAS,CAACe,KAAV,CAAgB,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,CAAhB,EAA0CP,WAA1C,CAAsD,4DAAtD,EAAoHQ,YAApH,CAAiI,MAAjI,CAF2C;AAGrDC,IAAAA,GAAG,EAAEjB,SAAS,CAACe,KAAV,CAAgB,CAAC,OAAD,EAAU,SAAV,CAAhB,EAAsCP,WAAtC,CAAkD,oCAAlD,CAHgD;AAIrDU,IAAAA,IAAI,EAAElB,SAAS,CAACa,IAAV,CAAeL,WAAf,CAA2B,mCAA3B,CAJ+C;AAKrDW,IAAAA,IAAI,EAAEnB,SAAS,CAACa,IAAV,CAAeL,WAAf,CAA2B,wEAA3B;AAL+C,GAAnB,CAApC;AAOA,SAAOF,eAAP;AACD,CAVM;AAWP,OAAO,IAAIc,QAAQ,GAAGlC,QAAQ,CAAC,EAAD,EAAKiB,aAAa,CAACkB,oBAAd,CAAmC,yEAAnC,CAAL,EAAoH;AAChJ,4BAA0B;AACxBb,IAAAA,WAAW,EAAE,kCADW;AAExBc,IAAAA,IAAI,EAAE,QAFkB;AAGxBN,IAAAA,YAAY,EAAE;AAHU,GADsH;AAMhJ,+BAA6B;AAC3BR,IAAAA,WAAW,EAAE,4CADc;AAE3Bc,IAAAA,IAAI,EAAE,QAFqB;AAG3BN,IAAAA,YAAY,EAAE;AAHa,GANmH;AAWhJ,0BAAwB;AACtBR,IAAAA,WAAW,EAAE,6CADS;AAEtBc,IAAAA,IAAI,EAAE,QAFgB;AAGtBN,IAAAA,YAAY,EAAE;AAHQ,GAXwH;AAgBhJ,kBAAgB;AACdR,IAAAA,WAAW,EAAE,iCADC;AAEdc,IAAAA,IAAI,EAAE,wBAFQ;AAGdN,IAAAA,YAAY,EAAEO;AAHA;AAhBgI,CAApH,CAAvB","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { describe, PropTypes } from 'react-desc';\nimport { genericProps, getAvailableAtBadge } from '../../utils';\nimport { themeDocUtils } from '../../utils/themeDocUtils';\nexport var doc = function doc(Video) {\n  var DocumentedVideo = describe(Video).availableAt(getAvailableAtBadge('Video')).description('A video player.').usage(\"import { Video } from 'grommet';\\n<Video />\").intrinsicElement('video');\n  DocumentedVideo.propTypes = _extends({}, genericProps, {\n    autoPlay: PropTypes.bool.description('Enables automatic playback of the video as soon as it is loaded.'),\n    controls: PropTypes.oneOf([false, 'over', 'below']).description('Whether to show playback controls and where to place them.').defaultValue('over'),\n    fit: PropTypes.oneOf(['cover', 'contain']).description('How the image fills its container.'),\n    loop: PropTypes.bool.description('Enables continuous video looping.'),\n    mute: PropTypes.bool.description('Enables video muting. This option is best used with the autoPlay flag.')\n  });\n  return DocumentedVideo;\n};\nexport var themeDoc = _extends({}, themeDocUtils.responsiveBreakpoint('The actual breakpoint to trigger changes in the video component layout.'), {\n  'global.edgeSize.xsmall': {\n    description: 'The width of the video scrubber.',\n    type: 'object',\n    defaultValue: '6px'\n  },\n  'video.captions.background': {\n    description: 'The caption background color of the video ',\n    type: 'string',\n    defaultValue: 'rgba(0, 0, 0, 0.7)'\n  },\n  'video.scrubber.color': {\n    description: 'The background color of the video scrubber.',\n    type: 'string',\n    defaultValue: 'light-4'\n  },\n  'video.extend': {\n    description: 'Any additional style for Video.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  }\n});"]},"metadata":{},"sourceType":"module"}