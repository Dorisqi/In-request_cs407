{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSupportedType = isSupportedType;\nexports.types = void 0;\nvar types;\nexports.types = types;\n\n(function (types) {\n  types[\"TAB\"] = \"tab\";\n  types[\"PANEL\"] = \"panel\";\n  types[\"TOOL\"] = \"tool\";\n  types[\"PREVIEW\"] = \"preview\";\n  types[\"NOTES_ELEMENT\"] = \"notes-element\";\n})(types || (exports.types = types = {}));\n\nfunction isSupportedType(type) {\n  return !!Object.values(types).find(function (typeVal) {\n    return typeVal === type;\n  });\n}","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/@storybook/addons/dist/types.js"],"names":["Object","defineProperty","exports","value","isSupportedType","types","type","values","find","typeVal"],"mappings":"AAAA;;AAMAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0BA,eAA1B;AACAF,OAAO,CAACG,KAAR,GAAgB,KAAK,CAArB;AACA,IAAIA,KAAJ;AACAH,OAAO,CAACG,KAAR,GAAgBA,KAAhB;;AAEA,CAAC,UAAUA,KAAV,EAAiB;AAChBA,EAAAA,KAAK,CAAC,KAAD,CAAL,GAAe,KAAf;AACAA,EAAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,OAAjB;AACAA,EAAAA,KAAK,CAAC,MAAD,CAAL,GAAgB,MAAhB;AACAA,EAAAA,KAAK,CAAC,SAAD,CAAL,GAAmB,SAAnB;AACAA,EAAAA,KAAK,CAAC,eAAD,CAAL,GAAyB,eAAzB;AACD,CAND,EAMGA,KAAK,KAAKH,OAAO,CAACG,KAAR,GAAgBA,KAAK,GAAG,EAA7B,CANR;;AAQA,SAASD,eAAT,CAAyBE,IAAzB,EAA+B;AAC7B,SAAO,CAAC,CAACN,MAAM,CAACO,MAAP,CAAcF,KAAd,EAAqBG,IAArB,CAA0B,UAAUC,OAAV,EAAmB;AACpD,WAAOA,OAAO,KAAKH,IAAnB;AACD,GAFQ,CAAT;AAGD","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.array.find\");\n\nrequire(\"core-js/modules/es.object.values\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSupportedType = isSupportedType;\nexports.types = void 0;\nvar types;\nexports.types = types;\n\n(function (types) {\n  types[\"TAB\"] = \"tab\";\n  types[\"PANEL\"] = \"panel\";\n  types[\"TOOL\"] = \"tool\";\n  types[\"PREVIEW\"] = \"preview\";\n  types[\"NOTES_ELEMENT\"] = \"notes-element\";\n})(types || (exports.types = types = {}));\n\nfunction isSupportedType(type) {\n  return !!Object.values(types).find(function (typeVal) {\n    return typeVal === type;\n  });\n}"]},"metadata":{},"sourceType":"script"}