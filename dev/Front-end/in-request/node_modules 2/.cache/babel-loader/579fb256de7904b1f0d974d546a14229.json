{"ast":null,"code":"\"use strict\";\n\nmodule.exports = OneOf; // extends ReflectionObject\n\nvar ReflectionObject = require(\"./object\");\n\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util = require(\"./util\");\n/**\r\n * Constructs a new oneof instance.\r\n * @classdesc Reflected oneof.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Oneof name\r\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\n\n\nfunction OneOf(name, fieldNames, options, comment) {\n  if (!Array.isArray(fieldNames)) {\n    options = fieldNames;\n    fieldNames = undefined;\n  }\n\n  ReflectionObject.call(this, name, options);\n  /* istanbul ignore if */\n\n  if (!(fieldNames === undefined || Array.isArray(fieldNames))) throw TypeError(\"fieldNames must be an Array\");\n  /**\r\n   * Field names that belong to this oneof.\r\n   * @type {string[]}\r\n   */\n\n  this.oneof = fieldNames || []; // toJSON, marker\n\n  /**\r\n   * Fields that belong to this oneof as an array for iteration.\r\n   * @type {Field[]}\r\n   * @readonly\r\n   */\n\n  this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n  /**\r\n   * Comment for this field.\r\n   * @type {string|null}\r\n   */\n\n  this.comment = comment;\n}\n/**\r\n * Oneof descriptor.\r\n * @interface IOneOf\r\n * @property {Array.<string>} oneof Oneof field names\r\n * @property {Object.<string,*>} [options] Oneof options\r\n */\n\n/**\r\n * Constructs a oneof from a oneof descriptor.\r\n * @param {string} name Oneof name\r\n * @param {IOneOf} json Oneof descriptor\r\n * @returns {OneOf} Created oneof\r\n * @throws {TypeError} If arguments are invalid\r\n */\n\n\nOneOf.fromJSON = function fromJSON(name, json) {\n  return new OneOf(name, json.oneof, json.options, json.comment);\n};\n/**\r\n * Converts this oneof to a oneof descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IOneOf} Oneof descriptor\r\n */\n\n\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n  var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n  return util.toObject([\"options\", this.options, \"oneof\", this.oneof, \"comment\", keepComments ? this.comment : undefined]);\n};\n/**\r\n * Adds the fields of the specified oneof to the parent if not already done so.\r\n * @param {OneOf} oneof The oneof\r\n * @returns {undefined}\r\n * @inner\r\n * @ignore\r\n */\n\n\nfunction addFieldsToParent(oneof) {\n  if (oneof.parent) for (var i = 0; i < oneof.fieldsArray.length; ++i) if (!oneof.fieldsArray[i].parent) oneof.parent.add(oneof.fieldsArray[i]);\n}\n/**\r\n * Adds a field to this oneof and removes it from its current parent, if any.\r\n * @param {Field} field Field to add\r\n * @returns {OneOf} `this`\r\n */\n\n\nOneOf.prototype.add = function add(field) {\n  /* istanbul ignore if */\n  if (!(field instanceof Field)) throw TypeError(\"field must be a Field\");\n  if (field.parent && field.parent !== this.parent) field.parent.remove(field);\n  this.oneof.push(field.name);\n  this.fieldsArray.push(field);\n  field.partOf = this; // field.parent remains null\n\n  addFieldsToParent(this);\n  return this;\n};\n/**\r\n * Removes a field from this oneof and puts it back to the oneof's parent.\r\n * @param {Field} field Field to remove\r\n * @returns {OneOf} `this`\r\n */\n\n\nOneOf.prototype.remove = function remove(field) {\n  /* istanbul ignore if */\n  if (!(field instanceof Field)) throw TypeError(\"field must be a Field\");\n  var index = this.fieldsArray.indexOf(field);\n  /* istanbul ignore if */\n\n  if (index < 0) throw Error(field + \" is not a member of \" + this);\n  this.fieldsArray.splice(index, 1);\n  index = this.oneof.indexOf(field.name);\n  /* istanbul ignore else */\n\n  if (index > -1) // theoretical\n    this.oneof.splice(index, 1);\n  field.partOf = null;\n  return this;\n};\n/**\r\n * @override\r\n */\n\n\nOneOf.prototype.onAdd = function onAdd(parent) {\n  ReflectionObject.prototype.onAdd.call(this, parent);\n  var self = this; // Collect present fields\n\n  for (var i = 0; i < this.oneof.length; ++i) {\n    var field = parent.get(this.oneof[i]);\n\n    if (field && !field.partOf) {\n      field.partOf = self;\n      self.fieldsArray.push(field);\n    }\n  } // Add not yet present fields\n\n\n  addFieldsToParent(this);\n};\n/**\r\n * @override\r\n */\n\n\nOneOf.prototype.onRemove = function onRemove(parent) {\n  for (var i = 0, field; i < this.fieldsArray.length; ++i) if ((field = this.fieldsArray[i]).parent) field.parent.remove(field);\n\n  ReflectionObject.prototype.onRemove.call(this, parent);\n};\n/**\r\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n * @typedef OneOfDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} oneofName OneOf name\r\n * @returns {undefined}\r\n */\n\n/**\r\n * OneOf decorator (TypeScript).\r\n * @function\r\n * @param {...string} fieldNames Field names\r\n * @returns {OneOfDecorator} Decorator function\r\n * @template T extends string\r\n */\n\n\nOneOf.d = function decorateOneOf() {\n  var fieldNames = new Array(arguments.length),\n      index = 0;\n\n  while (index < arguments.length) fieldNames[index] = arguments[index++];\n\n  return function oneOfDecorator(prototype, oneofName) {\n    util.decorateType(prototype.constructor).add(new OneOf(oneofName, fieldNames));\n    Object.defineProperty(prototype, oneofName, {\n      get: util.oneOfGetter(fieldNames),\n      set: util.oneOfSetter(fieldNames)\n    });\n  };\n};","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/protobufjs/src/oneof.js"],"names":["module","exports","OneOf","ReflectionObject","require","prototype","Object","create","constructor","className","Field","util","name","fieldNames","options","comment","Array","isArray","undefined","call","TypeError","oneof","fieldsArray","fromJSON","json","toJSON","toJSONOptions","keepComments","Boolean","toObject","addFieldsToParent","parent","i","length","add","field","remove","push","partOf","index","indexOf","Error","splice","onAdd","self","get","onRemove","d","decorateOneOf","arguments","oneOfDecorator","oneofName","decorateType","defineProperty","oneOfGetter","set","oneOfSetter"],"mappings":"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","sourcesContent":["\"use strict\";\r\nmodule.exports = OneOf;\r\n\r\n// extends ReflectionObject\r\nvar ReflectionObject = require(\"./object\");\r\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\r\n\r\nvar Field = require(\"./field\"),\r\n    util  = require(\"./util\");\r\n\r\n/**\r\n * Constructs a new oneof instance.\r\n * @classdesc Reflected oneof.\r\n * @extends ReflectionObject\r\n * @constructor\r\n * @param {string} name Oneof name\r\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\r\n * @param {Object.<string,*>} [options] Declared options\r\n * @param {string} [comment] Comment associated with this field\r\n */\r\nfunction OneOf(name, fieldNames, options, comment) {\r\n    if (!Array.isArray(fieldNames)) {\r\n        options = fieldNames;\r\n        fieldNames = undefined;\r\n    }\r\n    ReflectionObject.call(this, name, options);\r\n\r\n    /* istanbul ignore if */\r\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\r\n        throw TypeError(\"fieldNames must be an Array\");\r\n\r\n    /**\r\n     * Field names that belong to this oneof.\r\n     * @type {string[]}\r\n     */\r\n    this.oneof = fieldNames || []; // toJSON, marker\r\n\r\n    /**\r\n     * Fields that belong to this oneof as an array for iteration.\r\n     * @type {Field[]}\r\n     * @readonly\r\n     */\r\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\r\n\r\n    /**\r\n     * Comment for this field.\r\n     * @type {string|null}\r\n     */\r\n    this.comment = comment;\r\n}\r\n\r\n/**\r\n * Oneof descriptor.\r\n * @interface IOneOf\r\n * @property {Array.<string>} oneof Oneof field names\r\n * @property {Object.<string,*>} [options] Oneof options\r\n */\r\n\r\n/**\r\n * Constructs a oneof from a oneof descriptor.\r\n * @param {string} name Oneof name\r\n * @param {IOneOf} json Oneof descriptor\r\n * @returns {OneOf} Created oneof\r\n * @throws {TypeError} If arguments are invalid\r\n */\r\nOneOf.fromJSON = function fromJSON(name, json) {\r\n    return new OneOf(name, json.oneof, json.options, json.comment);\r\n};\r\n\r\n/**\r\n * Converts this oneof to a oneof descriptor.\r\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\r\n * @returns {IOneOf} Oneof descriptor\r\n */\r\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\r\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\r\n    return util.toObject([\r\n        \"options\" , this.options,\r\n        \"oneof\"   , this.oneof,\r\n        \"comment\" , keepComments ? this.comment : undefined\r\n    ]);\r\n};\r\n\r\n/**\r\n * Adds the fields of the specified oneof to the parent if not already done so.\r\n * @param {OneOf} oneof The oneof\r\n * @returns {undefined}\r\n * @inner\r\n * @ignore\r\n */\r\nfunction addFieldsToParent(oneof) {\r\n    if (oneof.parent)\r\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\r\n            if (!oneof.fieldsArray[i].parent)\r\n                oneof.parent.add(oneof.fieldsArray[i]);\r\n}\r\n\r\n/**\r\n * Adds a field to this oneof and removes it from its current parent, if any.\r\n * @param {Field} field Field to add\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.add = function add(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    if (field.parent && field.parent !== this.parent)\r\n        field.parent.remove(field);\r\n    this.oneof.push(field.name);\r\n    this.fieldsArray.push(field);\r\n    field.partOf = this; // field.parent remains null\r\n    addFieldsToParent(this);\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a field from this oneof and puts it back to the oneof's parent.\r\n * @param {Field} field Field to remove\r\n * @returns {OneOf} `this`\r\n */\r\nOneOf.prototype.remove = function remove(field) {\r\n\r\n    /* istanbul ignore if */\r\n    if (!(field instanceof Field))\r\n        throw TypeError(\"field must be a Field\");\r\n\r\n    var index = this.fieldsArray.indexOf(field);\r\n\r\n    /* istanbul ignore if */\r\n    if (index < 0)\r\n        throw Error(field + \" is not a member of \" + this);\r\n\r\n    this.fieldsArray.splice(index, 1);\r\n    index = this.oneof.indexOf(field.name);\r\n\r\n    /* istanbul ignore else */\r\n    if (index > -1) // theoretical\r\n        this.oneof.splice(index, 1);\r\n\r\n    field.partOf = null;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onAdd = function onAdd(parent) {\r\n    ReflectionObject.prototype.onAdd.call(this, parent);\r\n    var self = this;\r\n    // Collect present fields\r\n    for (var i = 0; i < this.oneof.length; ++i) {\r\n        var field = parent.get(this.oneof[i]);\r\n        if (field && !field.partOf) {\r\n            field.partOf = self;\r\n            self.fieldsArray.push(field);\r\n        }\r\n    }\r\n    // Add not yet present fields\r\n    addFieldsToParent(this);\r\n};\r\n\r\n/**\r\n * @override\r\n */\r\nOneOf.prototype.onRemove = function onRemove(parent) {\r\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\r\n        if ((field = this.fieldsArray[i]).parent)\r\n            field.parent.remove(field);\r\n    ReflectionObject.prototype.onRemove.call(this, parent);\r\n};\r\n\r\n/**\r\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\r\n * @typedef OneOfDecorator\r\n * @type {function}\r\n * @param {Object} prototype Target prototype\r\n * @param {string} oneofName OneOf name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * OneOf decorator (TypeScript).\r\n * @function\r\n * @param {...string} fieldNames Field names\r\n * @returns {OneOfDecorator} Decorator function\r\n * @template T extends string\r\n */\r\nOneOf.d = function decorateOneOf() {\r\n    var fieldNames = new Array(arguments.length),\r\n        index = 0;\r\n    while (index < arguments.length)\r\n        fieldNames[index] = arguments[index++];\r\n    return function oneOfDecorator(prototype, oneofName) {\r\n        util.decorateType(prototype.constructor)\r\n            .add(new OneOf(oneofName, fieldNames));\r\n        Object.defineProperty(prototype, oneofName, {\r\n            get: util.oneOfGetter(fieldNames),\r\n            set: util.oneOfSetter(fieldNames)\r\n        });\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"script"}