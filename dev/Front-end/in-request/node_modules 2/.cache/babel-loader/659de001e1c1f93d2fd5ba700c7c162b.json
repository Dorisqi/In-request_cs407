{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isExportStory = isExportStory;\nexports.parseKind = exports.storyNameFromExport = exports.toId = exports.sanitize = void 0;\n\nvar _startCase = _interopRequireDefault(require(\"lodash/startCase\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/**\n * Remove punctuation and illegal characters from a story ID.\n *\n * See https://gist.github.com/davidjrice/9d2af51100e41c6c4b4a\n */\n\n\nvar sanitize = function sanitize(string) {\n  return string.toLowerCase() // eslint-disable-next-line no-useless-escape\n  .replace(/[ ’–—―′¿'`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '-').replace(/-+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n};\n\nexports.sanitize = sanitize;\n\nvar sanitizeSafe = function sanitizeSafe(string, part) {\n  var sanitized = sanitize(string);\n\n  if (sanitized === '') {\n    throw new Error(\"Invalid \".concat(part, \" '\").concat(string, \"', must include alphanumeric characters\"));\n  }\n\n  return sanitized;\n};\n/**\n * Generate a storybook ID from a component/kind and story name.\n */\n\n\nvar toId = function toId(kind, name) {\n  return \"\".concat(sanitizeSafe(kind, 'kind'), \"--\").concat(sanitizeSafe(name, 'name'));\n};\n/**\n * Transform a CSF named export into a readable story name\n */\n\n\nexports.toId = toId;\n\nvar storyNameFromExport = function storyNameFromExport(key) {\n  return (0, _startCase[\"default\"])(key);\n};\n\nexports.storyNameFromExport = storyNameFromExport;\n\nfunction matches(storyKey, arrayOrRegex) {\n  if (Array.isArray(arrayOrRegex)) {\n    return arrayOrRegex.includes(storyKey);\n  }\n\n  return storyKey.match(arrayOrRegex);\n}\n/**\n * Does a named export match CSF inclusion/exclusion options?\n */\n\n\nfunction isExportStory(key, _ref) {\n  var includeStories = _ref.includeStories,\n      excludeStories = _ref.excludeStories;\n  return (// https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs\n    key !== '__esModule' && (!includeStories || matches(key, includeStories)) && (!excludeStories || !matches(key, excludeStories))\n  );\n}\n/**\n * Parse out the component/kind name from a path, using the given separator config.\n */\n\n\nvar parseKind = function parseKind(kind, _ref2) {\n  var rootSeparator = _ref2.rootSeparator,\n      groupSeparator = _ref2.groupSeparator;\n\n  var _kind$split = kind.split(rootSeparator, 2),\n      _kind$split2 = _slicedToArray(_kind$split, 2),\n      root = _kind$split2[0],\n      remainder = _kind$split2[1];\n\n  var groups = (remainder || kind).split(groupSeparator).filter(function (i) {\n    return !!i;\n  }); // when there's no remainder, it means the root wasn't found/split\n\n  return {\n    root: remainder ? root : null,\n    groups: groups\n  };\n};\n\nexports.parseKind = parseKind;","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/@storybook/csf/dist/index.js"],"names":["Object","defineProperty","exports","value","isExportStory","parseKind","storyNameFromExport","toId","sanitize","_startCase","_interopRequireDefault","require","obj","__esModule","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","length","err","Array","isArray","string","toLowerCase","replace","sanitizeSafe","part","sanitized","Error","concat","kind","name","key","matches","storyKey","arrayOrRegex","includes","match","_ref","includeStories","excludeStories","_ref2","rootSeparator","groupSeparator","_kind$split","split","_kind$split2","root","remainder","groups","filter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isExportStory = isExportStory;\nexports.parseKind = exports.storyNameFromExport = exports.toId = exports.sanitize = void 0;\n\nvar _startCase = _interopRequireDefault(require(\"lodash/startCase\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * Remove punctuation and illegal characters from a story ID.\n *\n * See https://gist.github.com/davidjrice/9d2af51100e41c6c4b4a\n */\nvar sanitize = function sanitize(string) {\n  return string.toLowerCase() // eslint-disable-next-line no-useless-escape\n  .replace(/[ ’–—―′¿'`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '-').replace(/-+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n};\n\nexports.sanitize = sanitize;\n\nvar sanitizeSafe = function sanitizeSafe(string, part) {\n  var sanitized = sanitize(string);\n\n  if (sanitized === '') {\n    throw new Error(\"Invalid \".concat(part, \" '\").concat(string, \"', must include alphanumeric characters\"));\n  }\n\n  return sanitized;\n};\n/**\n * Generate a storybook ID from a component/kind and story name.\n */\n\n\nvar toId = function toId(kind, name) {\n  return \"\".concat(sanitizeSafe(kind, 'kind'), \"--\").concat(sanitizeSafe(name, 'name'));\n};\n/**\n * Transform a CSF named export into a readable story name\n */\n\n\nexports.toId = toId;\n\nvar storyNameFromExport = function storyNameFromExport(key) {\n  return (0, _startCase[\"default\"])(key);\n};\n\nexports.storyNameFromExport = storyNameFromExport;\n\nfunction matches(storyKey, arrayOrRegex) {\n  if (Array.isArray(arrayOrRegex)) {\n    return arrayOrRegex.includes(storyKey);\n  }\n\n  return storyKey.match(arrayOrRegex);\n}\n/**\n * Does a named export match CSF inclusion/exclusion options?\n */\n\n\nfunction isExportStory(key, _ref) {\n  var includeStories = _ref.includeStories,\n      excludeStories = _ref.excludeStories;\n  return (// https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs\n    key !== '__esModule' && (!includeStories || matches(key, includeStories)) && (!excludeStories || !matches(key, excludeStories))\n  );\n}\n\n/**\n * Parse out the component/kind name from a path, using the given separator config.\n */\nvar parseKind = function parseKind(kind, _ref2) {\n  var rootSeparator = _ref2.rootSeparator,\n      groupSeparator = _ref2.groupSeparator;\n\n  var _kind$split = kind.split(rootSeparator, 2),\n      _kind$split2 = _slicedToArray(_kind$split, 2),\n      root = _kind$split2[0],\n      remainder = _kind$split2[1];\n\n  var groups = (remainder || kind).split(groupSeparator).filter(function (i) {\n    return !!i;\n  }); // when there's no remainder, it means the root wasn't found/split\n\n  return {\n    root: remainder ? root : null,\n    groups: groups\n  };\n};\n\nexports.parseKind = parseKind;"]},"metadata":{},"sourceType":"script"}