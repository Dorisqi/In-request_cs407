{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tls_helpers_1 = require(\"./tls-helpers\");\n\nclass ServerCredentials {\n  static createInsecure() {\n    return new InsecureServerCredentials();\n  }\n\n  static createSsl(rootCerts, keyCertPairs, checkClientCertificate = false) {\n    if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n      throw new TypeError('rootCerts must be null or a Buffer');\n    }\n\n    if (!Array.isArray(keyCertPairs)) {\n      throw new TypeError('keyCertPairs must be an array');\n    }\n\n    if (typeof checkClientCertificate !== 'boolean') {\n      throw new TypeError('checkClientCertificate must be a boolean');\n    }\n\n    const cert = [];\n    const key = [];\n\n    for (let i = 0; i < keyCertPairs.length; i++) {\n      const pair = keyCertPairs[i];\n\n      if (pair === null || typeof pair !== 'object') {\n        throw new TypeError(`keyCertPair[${i}] must be an object`);\n      }\n\n      if (!Buffer.isBuffer(pair.private_key)) {\n        throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n      }\n\n      if (!Buffer.isBuffer(pair.cert_chain)) {\n        throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n      }\n\n      cert.push(pair.cert_chain);\n      key.push(pair.private_key);\n    }\n\n    return new SecureServerCredentials({\n      ca: rootCerts || tls_helpers_1.getDefaultRootsData() || undefined,\n      cert,\n      key,\n      requestCert: checkClientCertificate,\n      ciphers: tls_helpers_1.CIPHER_SUITES\n    });\n  }\n\n}\n\nexports.ServerCredentials = ServerCredentials;\n\nclass InsecureServerCredentials extends ServerCredentials {\n  _isSecure() {\n    return false;\n  }\n\n  _getSettings() {\n    return null;\n  }\n\n}\n\nclass SecureServerCredentials extends ServerCredentials {\n  constructor(options) {\n    super();\n    this.options = options;\n  }\n\n  _isSecure() {\n    return true;\n  }\n\n  _getSettings() {\n    return this.options;\n  }\n\n}","map":{"version":3,"sources":["../../src/server-credentials.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;AAkBA,MAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAOA,MAAsB,iBAAtB,CAAuC;AAIrC,SAAO,cAAP,GAAqB;AACnB,WAAO,IAAI,yBAAJ,EAAP;AACD;;AAED,SAAO,SAAP,CACE,SADF,EAEE,YAFF,EAGE,sBAAsB,GAAG,KAH3B,EAGgC;AAE9B,QAAI,SAAS,KAAK,IAAd,IAAsB,CAAC,MAAM,CAAC,QAAP,CAAgB,SAAhB,CAA3B,EAAuD;AACrD,YAAM,IAAI,SAAJ,CAAc,oCAAd,CAAN;AACD;;AAED,QAAI,CAAC,KAAK,CAAC,OAAN,CAAc,YAAd,CAAL,EAAkC;AAChC,YAAM,IAAI,SAAJ,CAAc,+BAAd,CAAN;AACD;;AAED,QAAI,OAAO,sBAAP,KAAkC,SAAtC,EAAiD;AAC/C,YAAM,IAAI,SAAJ,CAAc,0CAAd,CAAN;AACD;;AAED,UAAM,IAAI,GAAG,EAAb;AACA,UAAM,GAAG,GAAG,EAAZ;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,YAAY,CAAC,MAAjC,EAAyC,CAAC,EAA1C,EAA8C;AAC5C,YAAM,IAAI,GAAG,YAAY,CAAC,CAAD,CAAzB;;AAEA,UAAI,IAAI,KAAK,IAAT,IAAiB,OAAO,IAAP,KAAgB,QAArC,EAA+C;AAC7C,cAAM,IAAI,SAAJ,CAAc,eAAe,CAAC,qBAA9B,CAAN;AACD;;AAED,UAAI,CAAC,MAAM,CAAC,QAAP,CAAgB,IAAI,CAAC,WAArB,CAAL,EAAwC;AACtC,cAAM,IAAI,SAAJ,CAAc,eAAe,CAAC,gCAA9B,CAAN;AACD;;AAED,UAAI,CAAC,MAAM,CAAC,QAAP,CAAgB,IAAI,CAAC,UAArB,CAAL,EAAuC;AACrC,cAAM,IAAI,SAAJ,CAAc,eAAe,CAAC,+BAA9B,CAAN;AACD;;AAED,MAAA,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,UAAf;AACA,MAAA,GAAG,CAAC,IAAJ,CAAS,IAAI,CAAC,WAAd;AACD;;AAED,WAAO,IAAI,uBAAJ,CAA4B;AACjC,MAAA,EAAE,EAAE,SAAS,IAAI,aAAA,CAAA,mBAAA,EAAb,IAAsC,SADT;AAEjC,MAAA,IAFiC;AAGjC,MAAA,GAHiC;AAIjC,MAAA,WAAW,EAAE,sBAJoB;AAKjC,MAAA,OAAO,EAAE,aAAA,CAAA;AALwB,KAA5B,CAAP;AAOD;;AAtDoC;;AAAvC,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAyDA,MAAM,yBAAN,SAAwC,iBAAxC,CAAyD;AACvD,EAAA,SAAS,GAAA;AACP,WAAO,KAAP;AACD;;AAED,EAAA,YAAY,GAAA;AACV,WAAO,IAAP;AACD;;AAPsD;;AAUzD,MAAM,uBAAN,SAAsC,iBAAtC,CAAuD;AAGrD,EAAA,WAAA,CAAY,OAAZ,EAAwC;AACtC;AACA,SAAK,OAAL,GAAe,OAAf;AACD;;AAED,EAAA,SAAS,GAAA;AACP,WAAO,IAAP;AACD;;AAED,EAAA,YAAY,GAAA;AACV,WAAO,KAAK,OAAZ;AACD;;AAdoD","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tls_helpers_1 = require(\"./tls-helpers\");\nclass ServerCredentials {\n    static createInsecure() {\n        return new InsecureServerCredentials();\n    }\n    static createSsl(rootCerts, keyCertPairs, checkClientCertificate = false) {\n        if (rootCerts !== null && !Buffer.isBuffer(rootCerts)) {\n            throw new TypeError('rootCerts must be null or a Buffer');\n        }\n        if (!Array.isArray(keyCertPairs)) {\n            throw new TypeError('keyCertPairs must be an array');\n        }\n        if (typeof checkClientCertificate !== 'boolean') {\n            throw new TypeError('checkClientCertificate must be a boolean');\n        }\n        const cert = [];\n        const key = [];\n        for (let i = 0; i < keyCertPairs.length; i++) {\n            const pair = keyCertPairs[i];\n            if (pair === null || typeof pair !== 'object') {\n                throw new TypeError(`keyCertPair[${i}] must be an object`);\n            }\n            if (!Buffer.isBuffer(pair.private_key)) {\n                throw new TypeError(`keyCertPair[${i}].private_key must be a Buffer`);\n            }\n            if (!Buffer.isBuffer(pair.cert_chain)) {\n                throw new TypeError(`keyCertPair[${i}].cert_chain must be a Buffer`);\n            }\n            cert.push(pair.cert_chain);\n            key.push(pair.private_key);\n        }\n        return new SecureServerCredentials({\n            ca: rootCerts || tls_helpers_1.getDefaultRootsData() || undefined,\n            cert,\n            key,\n            requestCert: checkClientCertificate,\n            ciphers: tls_helpers_1.CIPHER_SUITES,\n        });\n    }\n}\nexports.ServerCredentials = ServerCredentials;\nclass InsecureServerCredentials extends ServerCredentials {\n    _isSecure() {\n        return false;\n    }\n    _getSettings() {\n        return null;\n    }\n}\nclass SecureServerCredentials extends ServerCredentials {\n    constructor(options) {\n        super();\n        this.options = options;\n    }\n    _isSecure() {\n        return true;\n    }\n    _getSettings() {\n        return this.options;\n    }\n}\n//# sourceMappingURL=server-credentials.js.map"]},"metadata":{},"sourceType":"script"}