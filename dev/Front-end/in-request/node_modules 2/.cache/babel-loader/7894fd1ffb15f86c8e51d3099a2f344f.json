{"ast":null,"code":"\"use strict\";\n/*!\n * Copyright 2019 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst stream_1 = require(\"stream\");\n\nclass ResourceStream extends stream_1.Transform {\n  constructor(args, requestFn) {\n    const options = Object.assign({\n      objectMode: true\n    }, args.streamOptions);\n    super(options);\n    this._ended = false;\n    this._maxApiCalls = args.maxApiCalls === -1 ? Infinity : args.maxApiCalls;\n    this._nextQuery = args.query;\n    this._reading = false;\n    this._requestFn = requestFn;\n    this._requestsMade = 0;\n    this._resultsToSend = args.maxResults === -1 ? Infinity : args.maxResults;\n  } // tslint:disable-next-line:no-any\n\n\n  end(...args) {\n    this._ended = true;\n    return super.end(...args);\n  }\n\n  _read() {\n    if (this._reading) {\n      return;\n    }\n\n    this._reading = true;\n\n    this._requestFn(this._nextQuery, (err, results, nextQuery) => {\n      if (err) {\n        this.destroy(err);\n        return;\n      }\n\n      this._nextQuery = nextQuery;\n\n      if (this._resultsToSend !== Infinity) {\n        results = results.splice(0, this._resultsToSend);\n        this._resultsToSend -= results.length;\n      }\n\n      let more = true;\n\n      for (const result of results) {\n        if (this._ended) {\n          break;\n        }\n\n        more = this.push(result);\n      }\n\n      const isFinished = !this._nextQuery || this._resultsToSend < 1;\n      const madeMaxCalls = ++this._requestsMade >= this._maxApiCalls;\n\n      if (isFinished || madeMaxCalls) {\n        this.end();\n      }\n\n      if (more && !this._ended) {\n        setImmediate(() => this._read());\n      }\n\n      this._reading = false;\n    });\n  }\n\n}\n\nexports.ResourceStream = ResourceStream;","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/@google-cloud/paginator/build/src/resource-stream.js"],"names":["Object","defineProperty","exports","value","stream_1","require","ResourceStream","Transform","constructor","args","requestFn","options","assign","objectMode","streamOptions","_ended","_maxApiCalls","maxApiCalls","Infinity","_nextQuery","query","_reading","_requestFn","_requestsMade","_resultsToSend","maxResults","end","_read","err","results","nextQuery","destroy","splice","length","more","result","push","isFinished","madeMaxCalls","setImmediate"],"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;AAeAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,cAAN,SAA6BF,QAAQ,CAACG,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,CAACC,IAAD,EAAOC,SAAP,EAAkB;AACzB,UAAMC,OAAO,GAAGX,MAAM,CAACY,MAAP,CAAc;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAd,EAAoCJ,IAAI,CAACK,aAAzC,CAAhB;AACA,UAAMH,OAAN;AACA,SAAKI,MAAL,GAAc,KAAd;AACA,SAAKC,YAAL,GAAoBP,IAAI,CAACQ,WAAL,KAAqB,CAAC,CAAtB,GAA0BC,QAA1B,GAAqCT,IAAI,CAACQ,WAA9D;AACA,SAAKE,UAAL,GAAkBV,IAAI,CAACW,KAAvB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,UAAL,GAAkBZ,SAAlB;AACA,SAAKa,aAAL,GAAqB,CAArB;AACA,SAAKC,cAAL,GAAsBf,IAAI,CAACgB,UAAL,KAAoB,CAAC,CAArB,GAAyBP,QAAzB,GAAoCT,IAAI,CAACgB,UAA/D;AACH,GAX2C,CAY5C;;;AACAC,EAAAA,GAAG,CAAC,GAAGjB,IAAJ,EAAU;AACT,SAAKM,MAAL,GAAc,IAAd;AACA,WAAO,MAAMW,GAAN,CAAU,GAAGjB,IAAb,CAAP;AACH;;AACDkB,EAAAA,KAAK,GAAG;AACJ,QAAI,KAAKN,QAAT,EAAmB;AACf;AACH;;AACD,SAAKA,QAAL,GAAgB,IAAhB;;AACA,SAAKC,UAAL,CAAgB,KAAKH,UAArB,EAAiC,CAACS,GAAD,EAAMC,OAAN,EAAeC,SAAf,KAA6B;AAC1D,UAAIF,GAAJ,EAAS;AACL,aAAKG,OAAL,CAAaH,GAAb;AACA;AACH;;AACD,WAAKT,UAAL,GAAkBW,SAAlB;;AACA,UAAI,KAAKN,cAAL,KAAwBN,QAA5B,EAAsC;AAClCW,QAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAe,CAAf,EAAkB,KAAKR,cAAvB,CAAV;AACA,aAAKA,cAAL,IAAuBK,OAAO,CAACI,MAA/B;AACH;;AACD,UAAIC,IAAI,GAAG,IAAX;;AACA,WAAK,MAAMC,MAAX,IAAqBN,OAArB,EAA8B;AAC1B,YAAI,KAAKd,MAAT,EAAiB;AACb;AACH;;AACDmB,QAAAA,IAAI,GAAG,KAAKE,IAAL,CAAUD,MAAV,CAAP;AACH;;AACD,YAAME,UAAU,GAAG,CAAC,KAAKlB,UAAN,IAAoB,KAAKK,cAAL,GAAsB,CAA7D;AACA,YAAMc,YAAY,GAAG,EAAE,KAAKf,aAAP,IAAwB,KAAKP,YAAlD;;AACA,UAAIqB,UAAU,IAAIC,YAAlB,EAAgC;AAC5B,aAAKZ,GAAL;AACH;;AACD,UAAIQ,IAAI,IAAI,CAAC,KAAKnB,MAAlB,EAA0B;AACtBwB,QAAAA,YAAY,CAAC,MAAM,KAAKZ,KAAL,EAAP,CAAZ;AACH;;AACD,WAAKN,QAAL,GAAgB,KAAhB;AACH,KA1BD;AA2BH;;AAjD2C;;AAmDhDnB,OAAO,CAACI,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2019 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\nclass ResourceStream extends stream_1.Transform {\n    constructor(args, requestFn) {\n        const options = Object.assign({ objectMode: true }, args.streamOptions);\n        super(options);\n        this._ended = false;\n        this._maxApiCalls = args.maxApiCalls === -1 ? Infinity : args.maxApiCalls;\n        this._nextQuery = args.query;\n        this._reading = false;\n        this._requestFn = requestFn;\n        this._requestsMade = 0;\n        this._resultsToSend = args.maxResults === -1 ? Infinity : args.maxResults;\n    }\n    // tslint:disable-next-line:no-any\n    end(...args) {\n        this._ended = true;\n        return super.end(...args);\n    }\n    _read() {\n        if (this._reading) {\n            return;\n        }\n        this._reading = true;\n        this._requestFn(this._nextQuery, (err, results, nextQuery) => {\n            if (err) {\n                this.destroy(err);\n                return;\n            }\n            this._nextQuery = nextQuery;\n            if (this._resultsToSend !== Infinity) {\n                results = results.splice(0, this._resultsToSend);\n                this._resultsToSend -= results.length;\n            }\n            let more = true;\n            for (const result of results) {\n                if (this._ended) {\n                    break;\n                }\n                more = this.push(result);\n            }\n            const isFinished = !this._nextQuery || this._resultsToSend < 1;\n            const madeMaxCalls = ++this._requestsMade >= this._maxApiCalls;\n            if (isFinished || madeMaxCalls) {\n                this.end();\n            }\n            if (more && !this._ended) {\n                setImmediate(() => this._read());\n            }\n            this._reading = false;\n        });\n    }\n}\nexports.ResourceStream = ResourceStream;\n//# sourceMappingURL=resource-stream.js.map"]},"metadata":{},"sourceType":"script"}