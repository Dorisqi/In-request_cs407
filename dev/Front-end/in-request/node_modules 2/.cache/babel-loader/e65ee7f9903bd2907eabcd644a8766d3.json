{"ast":null,"code":"import { normalizeValues } from './utils';\nexport var calcs = function calcs(values, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var coarseness = options.coarseness || 5;\n  var steps = options.steps || [1, 1];\n  var calcValues = normalizeValues(values || []);\n  var min;\n  var max;\n\n  if (options.min !== undefined && options.max !== undefined) {\n    var _options = options;\n    min = _options.min;\n    max = _options.max;\n  } else if (calcValues.length) {\n    // Calculate the max and min y values.\n    min = calcValues[0].value[1] || 0;\n    max = min;\n    calcValues.forEach(function (value) {\n      var y = value.value[1];\n      min = Math.min(min, y);\n      max = Math.max(max, y); // handle ranges of values\n\n      if (value.value[2] !== undefined) {\n        var y2 = value.value[2];\n        min = Math.min(min, y2);\n        max = Math.max(max, y2);\n      }\n    });\n    min = options.min !== undefined ? options.min : min;\n    max = options.max !== undefined ? options.max : max; // Calculate some reasonable y bounds based on the max and min y values.\n    // This is so values like 87342.12 don't end up being displayed as the\n    // graph axis edge label.\n\n    var delta = max - min;\n    var interval = Number.parseFloat((delta / coarseness).toPrecision(1));\n    max = max - max % interval + interval;\n    min -= min % interval;\n  }\n\n  var bounds = calcValues.length ? [[calcValues[0].value[0], calcValues[calcValues.length - 1].value[0]], [min, max]] : [[], []];\n  var dimensions = [bounds[0][1] - bounds[0][0], bounds[1][1] - bounds[1][0]]; // Calculate x and y axis values across the specfied number of steps.\n\n  var yAxis = [];\n  var y = bounds[1][1];\n  var yStepInterval = dimensions[1] / steps[1];\n\n  while (y >= bounds[1][0]) {\n    yAxis.push(y);\n    y -= yStepInterval;\n  }\n\n  var xAxis = [];\n  var x = bounds[0][0];\n  var xStepInterval = dimensions[0] / steps[0];\n\n  while (xStepInterval > 0 && x <= bounds[0][1] || xStepInterval < 0 && x >= bounds[0][1]) {\n    xAxis.push(x);\n    x += xStepInterval;\n  } // Set bar thickness based on number of values being rendered.\n  // Someday, it would be better to include the actual rendered size.\n  // These values were emirically determined, trying to balance visibility\n  // and overlap across resolutions.\n\n\n  var thickness;\n  var pad;\n\n  if (calcValues.length < 5) {\n    thickness = 'xlarge';\n    pad = 'large';\n  } else if (calcValues.length < 11) {\n    thickness = 'large';\n    pad = 'medium';\n  } else if (calcValues.length < 21) {\n    thickness = 'medium';\n    pad = 'small';\n  } else if (calcValues.length < 61) {\n    thickness = 'small';\n    pad = 'xsmall';\n  } else if (calcValues.length < 121) {\n    thickness = 'xsmall';\n    pad = 'xxsmall';\n  } else {\n    thickness = 'hair';\n  }\n\n  return {\n    axis: [xAxis, yAxis],\n    bounds: bounds,\n    dimensions: dimensions,\n    pad: pad,\n    thickness: thickness\n  };\n};","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/grommet/es6/components/Chart/calcs.js"],"names":["normalizeValues","calcs","values","options","coarseness","steps","calcValues","min","max","undefined","_options","length","value","forEach","y","Math","y2","delta","interval","Number","parseFloat","toPrecision","bounds","dimensions","yAxis","yStepInterval","push","xAxis","x","xStepInterval","thickness","pad","axis"],"mappings":"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","sourcesContent":["import { normalizeValues } from './utils';\nexport var calcs = function calcs(values, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var coarseness = options.coarseness || 5;\n  var steps = options.steps || [1, 1];\n  var calcValues = normalizeValues(values || []);\n  var min;\n  var max;\n\n  if (options.min !== undefined && options.max !== undefined) {\n    var _options = options;\n    min = _options.min;\n    max = _options.max;\n  } else if (calcValues.length) {\n    // Calculate the max and min y values.\n    min = calcValues[0].value[1] || 0;\n    max = min;\n    calcValues.forEach(function (value) {\n      var y = value.value[1];\n      min = Math.min(min, y);\n      max = Math.max(max, y); // handle ranges of values\n\n      if (value.value[2] !== undefined) {\n        var y2 = value.value[2];\n        min = Math.min(min, y2);\n        max = Math.max(max, y2);\n      }\n    });\n    min = options.min !== undefined ? options.min : min;\n    max = options.max !== undefined ? options.max : max; // Calculate some reasonable y bounds based on the max and min y values.\n    // This is so values like 87342.12 don't end up being displayed as the\n    // graph axis edge label.\n\n    var delta = max - min;\n    var interval = Number.parseFloat((delta / coarseness).toPrecision(1));\n    max = max - max % interval + interval;\n    min -= min % interval;\n  }\n\n  var bounds = calcValues.length ? [[calcValues[0].value[0], calcValues[calcValues.length - 1].value[0]], [min, max]] : [[], []];\n  var dimensions = [bounds[0][1] - bounds[0][0], bounds[1][1] - bounds[1][0]]; // Calculate x and y axis values across the specfied number of steps.\n\n  var yAxis = [];\n  var y = bounds[1][1];\n  var yStepInterval = dimensions[1] / steps[1];\n\n  while (y >= bounds[1][0]) {\n    yAxis.push(y);\n    y -= yStepInterval;\n  }\n\n  var xAxis = [];\n  var x = bounds[0][0];\n  var xStepInterval = dimensions[0] / steps[0];\n\n  while (xStepInterval > 0 && x <= bounds[0][1] || xStepInterval < 0 && x >= bounds[0][1]) {\n    xAxis.push(x);\n    x += xStepInterval;\n  } // Set bar thickness based on number of values being rendered.\n  // Someday, it would be better to include the actual rendered size.\n  // These values were emirically determined, trying to balance visibility\n  // and overlap across resolutions.\n\n\n  var thickness;\n  var pad;\n\n  if (calcValues.length < 5) {\n    thickness = 'xlarge';\n    pad = 'large';\n  } else if (calcValues.length < 11) {\n    thickness = 'large';\n    pad = 'medium';\n  } else if (calcValues.length < 21) {\n    thickness = 'medium';\n    pad = 'small';\n  } else if (calcValues.length < 61) {\n    thickness = 'small';\n    pad = 'xsmall';\n  } else if (calcValues.length < 121) {\n    thickness = 'xsmall';\n    pad = 'xxsmall';\n  } else {\n    thickness = 'hair';\n  }\n\n  return {\n    axis: [xAxis, yAxis],\n    bounds: bounds,\n    dimensions: dimensions,\n    pad: pad,\n    thickness: thickness\n  };\n};"]},"metadata":{},"sourceType":"module"}