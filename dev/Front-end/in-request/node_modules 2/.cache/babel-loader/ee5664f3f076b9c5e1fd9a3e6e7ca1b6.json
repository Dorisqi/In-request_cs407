{"ast":null,"code":"var _jsxFileName = \"/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/src/Components/App/index.js\";\nimport React, { Component } from 'react';\nimport './style.css'; // import Home from './../Home';\n\nimport Log_Page from './../Login_Related/Log_Page.js';\nimport SideBar from '../Shared/SideBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport firebase from \"firebase/app\"; // import admin from \"firebase-admin\"\n\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport admin from \"firebase-admin\"; //const firebase = require(\"firebase/app\");\n// Add the Firebase products that you want to use\n// require(\"firebase/auth\");\n// require(\"firebase/firestore\");\n//\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyB8fmbeFCz6MflVeRF-pU7N5WyPCDbQDQw\",\n//   authDomain: \"in-request.firebaseapp.com\",\n//   databaseURL: \"https://in-request.firebaseio.com\",\n//   projectId: \"in-request\",\n//   storageBucket: \"in-request.appspot.com\",\n//   messagingSenderId: \"566878675007\",\n//   appId: \"1:566878675007:web:234477171d4f9c7311d88a\",\n//   measurementId: \"G-5PRZRKXFQ2\"\n// };\n// // Initialize Firebase\n// firebase.initializeApp(firebaseConfig);\n//\n// // This part is for firebase-cloud firestore setup\n// const admin = require('firebase-admin');\n//\n// const serviceAccount = require('./in-request-firebase-adminsdk-2upr0-a94880f19f.json');\n//\n// admin.initializeApp({\n//   credential: admin.credential.cert(serviceAccount),\n// });\n//\n// const db = admin.firestore();\n\nclass App extends Component {\n  // constructor(props){\n  //   this.state:{\n  //     admin:require('firebase-admin');\n  //     serviceAccount:require('./in-request-firebase-adminsdk-2upr0-a94880f19f.json');\n  //     db:admin.firestore();\n  //   }\n  // }\n  // admin.initializeApp({\n  //   credential: admin.credential.cert(serviceAccount),\n  // });\n  // firebase.initializeApp(firebaseConfig);\n  render() {\n    // Initialize Firebase\n    // require(\"firebase/auth\");\n    // require(\"firebase/firestore\");\n    const firebaseConfig = {\n      apiKey: \"AIzaSyB8fmbeFCz6MflVeRF-pU7N5WyPCDbQDQw\",\n      authDomain: \"in-request.firebaseapp.com\",\n      databaseURL: \"https://in-request.firebaseio.com\",\n      projectId: \"in-request\",\n      storageBucket: \"in-request.appspot.com\",\n      messagingSenderId: \"566878675007\",\n      appId: \"1:566878675007:web:234477171d4f9c7311d88a\",\n      measurementId: \"G-5PRZRKXFQ2\"\n    }; //const firebase = require(\"firebase/app\");\n\n    firebase.initializeApp(firebaseConfig); // This part is for firebase-cloud firestore setup\n    //const admin = require('firebase-admin');\n\n    const serviceAccount = require('./in-request-firebase-adminsdk-2upr0-a94880f19f.json');\n\n    admin.initializeApp({\n      credential: admin.credential.cert(serviceAccount)\n    });\n    const database = firebase.database();\n    const db = admin.firestore();\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Home\"))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Log_Page, {\n      db: this.db,\n      firebase: this.firebase,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/src/Components/App/index.js"],"names":["React","Component","Log_Page","SideBar","makeStyles","BrowserRouter","Router","Switch","Route","Link","firebase","admin","App","render","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","serviceAccount","require","credential","cert","database","db","firestore"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;AAMA,OAAOC,QAAP,MAAqB,cAArB,C,CACA;;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAY,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AAEA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,yCADa;AAErBC,MAAAA,UAAU,EAAE,4BAFS;AAGrBC,MAAAA,WAAW,EAAE,mCAHQ;AAIrBC,MAAAA,SAAS,EAAE,YAJU;AAKrBC,MAAAA,aAAa,EAAE,wBALM;AAMrBC,MAAAA,iBAAiB,EAAE,cANE;AAOrBC,MAAAA,KAAK,EAAE,2CAPc;AAQrBC,MAAAA,aAAa,EAAE;AARM,KAAvB,CALO,CAeP;;AACAZ,IAAAA,QAAQ,CAACa,aAAT,CAAuBT,cAAvB,EAhBO,CAkBP;AACA;;AAEA,UAAMU,cAAc,GAAGC,OAAO,CAAC,sDAAD,CAA9B;;AAEAd,IAAAA,KAAK,CAACY,aAAN,CAAoB;AAClBG,MAAAA,UAAU,EAAEf,KAAK,CAACe,UAAN,CAAiBC,IAAjB,CAAsBH,cAAtB;AADM,KAApB;AAGA,UAAMI,QAAQ,GAAElB,QAAQ,CAACkB,QAAT,EAAhB;AACA,UAAMC,EAAE,GAAGlB,KAAK,CAACmB,SAAN,EAAX;AACA,WAEF,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CADF,EAeE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,KAAKD,EAAnB;AAAuB,MAAA,QAAQ,EAAE,KAAKnB,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAfF,CADF,CAFE;AA2BD;;AApEyB;;AAsE5B,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\n// import Home from './../Home';\nimport Log_Page from './../Login_Related/Log_Page.js';\nimport SideBar from '../Shared/SideBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport firebase from \"firebase/app\"\n// import admin from \"firebase-admin\"\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\nimport admin from \"firebase-admin\"\n//const firebase = require(\"firebase/app\");\n\n// Add the Firebase products that you want to use\n// require(\"firebase/auth\");\n// require(\"firebase/firestore\");\n//\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyB8fmbeFCz6MflVeRF-pU7N5WyPCDbQDQw\",\n//   authDomain: \"in-request.firebaseapp.com\",\n//   databaseURL: \"https://in-request.firebaseio.com\",\n//   projectId: \"in-request\",\n//   storageBucket: \"in-request.appspot.com\",\n//   messagingSenderId: \"566878675007\",\n//   appId: \"1:566878675007:web:234477171d4f9c7311d88a\",\n//   measurementId: \"G-5PRZRKXFQ2\"\n// };\n\n// // Initialize Firebase\n// firebase.initializeApp(firebaseConfig);\n//\n// // This part is for firebase-cloud firestore setup\n// const admin = require('firebase-admin');\n//\n// const serviceAccount = require('./in-request-firebase-adminsdk-2upr0-a94880f19f.json');\n//\n// admin.initializeApp({\n//   credential: admin.credential.cert(serviceAccount),\n// });\n//\n// const db = admin.firestore();\n\nclass App extends Component {\n  // constructor(props){\n  //   this.state:{\n  //     admin:require('firebase-admin');\n  //     serviceAccount:require('./in-request-firebase-adminsdk-2upr0-a94880f19f.json');\n  //     db:admin.firestore();\n  //   }\n  // }\n  // admin.initializeApp({\n  //   credential: admin.credential.cert(serviceAccount),\n  // });\n  // firebase.initializeApp(firebaseConfig);\n\n  render() {\n    // Initialize Firebase\n    // require(\"firebase/auth\");\n    // require(\"firebase/firestore\");\n\n    const firebaseConfig = {\n      apiKey: \"AIzaSyB8fmbeFCz6MflVeRF-pU7N5WyPCDbQDQw\",\n      authDomain: \"in-request.firebaseapp.com\",\n      databaseURL: \"https://in-request.firebaseio.com\",\n      projectId: \"in-request\",\n      storageBucket: \"in-request.appspot.com\",\n      messagingSenderId: \"566878675007\",\n      appId: \"1:566878675007:web:234477171d4f9c7311d88a\",\n      measurementId: \"G-5PRZRKXFQ2\"\n    };\n    //const firebase = require(\"firebase/app\");\n    firebase.initializeApp(firebaseConfig);\n\n    // This part is for firebase-cloud firestore setup\n    //const admin = require('firebase-admin');\n\n    const serviceAccount = require('./in-request-firebase-adminsdk-2upr0-a94880f19f.json');\n\n    admin.initializeApp({\n      credential: admin.credential.cert(serviceAccount),\n    });\n    const database= firebase.database();\n    const db = admin.firestore();\n    return (\n\n  <Router>\n    <div>\n      <ul>\n        <li>\n          <Link to=\"/posts\">Home</Link>\n\n        </li>\n      </ul>\n\n      {/*\n        A <Switch> looks through all its children <Route>\n        elements and renders the first one whose path\n        matches the current URL. Use a <Switch> any time\n        you have multiple routes, but you want only one\n        of them to render at a time\n      */}\n      <Switch>\n\n        <Route path=\"/posts\">\n          <Log_Page db={this.db} firebase={this.firebase}/>\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}