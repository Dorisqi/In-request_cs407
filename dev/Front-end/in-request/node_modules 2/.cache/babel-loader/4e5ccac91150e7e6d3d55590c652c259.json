{"ast":null,"code":"/*! firebase-admin v8.9.2 */\n\"use strict\";\n/*!\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar deep_copy_1 = require(\"../utils/deep-copy\");\n/**\n * Firebase error code structure. This extends Error.\n *\n * @param {ErrorInfo} errorInfo The error information (code and message).\n * @constructor\n */\n\n\nvar FirebaseError =\n/** @class */\nfunction (_super) {\n  __extends(FirebaseError, _super);\n\n  function FirebaseError(errorInfo) {\n    var _this = _super.call(this, errorInfo.message) || this;\n\n    _this.errorInfo = errorInfo;\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n    /* tslint:enable:max-line-length */\n\n    _this.__proto__ = FirebaseError.prototype;\n    return _this;\n  }\n\n  Object.defineProperty(FirebaseError.prototype, \"code\", {\n    /** @return {string} The error code. */\n    get: function () {\n      return this.errorInfo.code;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseError.prototype, \"message\", {\n    /** @return {string} The error message. */\n    get: function () {\n      return this.errorInfo.message;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** @return {object} The object representation of the error. */\n\n  FirebaseError.prototype.toJSON = function () {\n    return {\n      code: this.code,\n      message: this.message\n    };\n  };\n\n  return FirebaseError;\n}(Error);\n\nexports.FirebaseError = FirebaseError;\n/**\n * A FirebaseError with a prefix in front of the error code.\n *\n * @param {string} codePrefix The prefix to apply to the error code.\n * @param {string} code The error code.\n * @param {string} message The error message.\n * @constructor\n */\n\nvar PrefixedFirebaseError =\n/** @class */\nfunction (_super) {\n  __extends(PrefixedFirebaseError, _super);\n\n  function PrefixedFirebaseError(codePrefix, code, message) {\n    var _this = _super.call(this, {\n      code: codePrefix + \"/\" + code,\n      message: message\n    }) || this;\n\n    _this.codePrefix = codePrefix;\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n    /* tslint:enable:max-line-length */\n\n    _this.__proto__ = PrefixedFirebaseError.prototype;\n    return _this;\n  }\n  /**\n   * Allows the error type to be checked without needing to know implementation details\n   * of the code prefixing.\n   *\n   * @param {string} code The non-prefixed error code to test against.\n   * @return {boolean} True if the code matches, false otherwise.\n   */\n\n\n  PrefixedFirebaseError.prototype.hasCode = function (code) {\n    return this.codePrefix + \"/\" + code === this.code;\n  };\n\n  return PrefixedFirebaseError;\n}(FirebaseError);\n\nexports.PrefixedFirebaseError = PrefixedFirebaseError;\n/**\n * Firebase App error code structure. This extends PrefixedFirebaseError.\n *\n * @param {string} code The error code.\n * @param {string} message The error message.\n * @constructor\n */\n\nvar FirebaseAppError =\n/** @class */\nfunction (_super) {\n  __extends(FirebaseAppError, _super);\n\n  function FirebaseAppError(code, message) {\n    var _this = _super.call(this, 'app', code, message) || this;\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n    /* tslint:enable:max-line-length */\n\n\n    _this.__proto__ = FirebaseAppError.prototype;\n    return _this;\n  }\n\n  return FirebaseAppError;\n}(PrefixedFirebaseError);\n\nexports.FirebaseAppError = FirebaseAppError;\n/**\n * Firebase Auth error code structure. This extends PrefixedFirebaseError.\n *\n * @param {ErrorInfo} info The error code info.\n * @param {string} [message] The error message. This will override the default\n *     message if provided.\n * @constructor\n */\n\nvar FirebaseAuthError =\n/** @class */\nfunction (_super) {\n  __extends(FirebaseAuthError, _super);\n\n  function FirebaseAuthError(info, message) {\n    var _this = // Override default message if custom message provided.\n    _super.call(this, 'auth', info.code, message || info.message) || this;\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n    /* tslint:enable:max-line-length */\n\n\n    _this.__proto__ = FirebaseAuthError.prototype;\n    return _this;\n  }\n  /**\n   * Creates the developer-facing error corresponding to the backend error code.\n   *\n   * @param {string} serverErrorCode The server error code.\n   * @param {string} [message] The error message. The default message is used\n   *     if not provided.\n   * @param {object} [rawServerResponse] The error's raw server response.\n   * @return {FirebaseAuthError} The corresponding developer-facing error.\n   */\n\n\n  FirebaseAuthError.fromServerError = function (serverErrorCode, message, rawServerResponse) {\n    // serverErrorCode could contain additional details:\n    // ERROR_CODE : Detailed message which can also contain colons\n    var colonSeparator = (serverErrorCode || '').indexOf(':');\n    var customMessage = null;\n\n    if (colonSeparator !== -1) {\n      customMessage = serverErrorCode.substring(colonSeparator + 1).trim();\n      serverErrorCode = serverErrorCode.substring(0, colonSeparator).trim();\n    } // If not found, default to internal error.\n\n\n    var clientCodeKey = AUTH_SERVER_TO_CLIENT_CODE[serverErrorCode] || 'INTERNAL_ERROR';\n    var error = deep_copy_1.deepCopy(AuthClientErrorCode[clientCodeKey]); // Server detailed message should have highest priority.\n\n    error.message = customMessage || message || error.message;\n\n    if (clientCodeKey === 'INTERNAL_ERROR' && typeof rawServerResponse !== 'undefined') {\n      try {\n        error.message += \" Raw server response: \\\"\" + JSON.stringify(rawServerResponse) + \"\\\"\";\n      } catch (e) {// Ignore JSON parsing error.\n      }\n    }\n\n    return new FirebaseAuthError(error);\n  };\n\n  return FirebaseAuthError;\n}(PrefixedFirebaseError);\n\nexports.FirebaseAuthError = FirebaseAuthError;\n/**\n * Firebase Database error code structure. This extends FirebaseError.\n *\n * @param {ErrorInfo} info The error code info.\n * @param {string} [message] The error message. This will override the default\n *     message if provided.\n * @constructor\n */\n\nvar FirebaseDatabaseError =\n/** @class */\nfunction (_super) {\n  __extends(FirebaseDatabaseError, _super);\n\n  function FirebaseDatabaseError(info, message) {\n    // Override default message if custom message provided.\n    return _super.call(this, {\n      code: 'database/' + info.code,\n      message: message || info.message\n    }) || this;\n  }\n\n  return FirebaseDatabaseError;\n}(FirebaseError);\n\nexports.FirebaseDatabaseError = FirebaseDatabaseError;\n/**\n * Firebase Firestore error code structure. This extends FirebaseError.\n *\n * @param {ErrorInfo} info The error code info.\n * @param {string} [message] The error message. This will override the default\n *     message if provided.\n * @constructor\n */\n\nvar FirebaseFirestoreError =\n/** @class */\nfunction (_super) {\n  __extends(FirebaseFirestoreError, _super);\n\n  function FirebaseFirestoreError(info, message) {\n    // Override default message if custom message provided.\n    return _super.call(this, {\n      code: 'firestore/' + info.code,\n      message: message || info.message\n    }) || this;\n  }\n\n  return FirebaseFirestoreError;\n}(FirebaseError);\n\nexports.FirebaseFirestoreError = FirebaseFirestoreError;\n/**\n * Firebase instance ID error code structure. This extends FirebaseError.\n *\n * @param {ErrorInfo} info The error code info.\n * @param {string} [message] The error message. This will override the default\n *     message if provided.\n * @constructor\n */\n\nvar FirebaseInstanceIdError =\n/** @class */\nfunction (_super) {\n  __extends(FirebaseInstanceIdError, _super);\n\n  function FirebaseInstanceIdError(info, message) {\n    // Override default message if custom message provided.\n    return _super.call(this, {\n      code: 'instance-id/' + info.code,\n      message: message || info.message\n    }) || this;\n  }\n\n  return FirebaseInstanceIdError;\n}(FirebaseError);\n\nexports.FirebaseInstanceIdError = FirebaseInstanceIdError;\n/**\n * Firebase Messaging error code structure. This extends PrefixedFirebaseError.\n *\n * @param {ErrorInfo} info The error code info.\n * @param {string} [message] The error message. This will override the default message if provided.\n * @constructor\n */\n\nvar FirebaseMessagingError =\n/** @class */\nfunction (_super) {\n  __extends(FirebaseMessagingError, _super);\n\n  function FirebaseMessagingError(info, message) {\n    var _this = // Override default message if custom message provided.\n    _super.call(this, 'messaging', info.code, message || info.message) || this;\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n    /* tslint:enable:max-line-length */\n\n\n    _this.__proto__ = FirebaseMessagingError.prototype;\n    return _this;\n  }\n  /**\n   * Creates the developer-facing error corresponding to the backend error code.\n   *\n   * @param {string} serverErrorCode The server error code.\n   * @param {string} [message] The error message. The default message is used\n   *     if not provided.\n   * @param {object} [rawServerResponse] The error's raw server response.\n   * @return {FirebaseMessagingError} The corresponding developer-facing error.\n   */\n\n\n  FirebaseMessagingError.fromServerError = function (serverErrorCode, message, rawServerResponse) {\n    // If not found, default to unknown error.\n    var clientCodeKey = 'UNKNOWN_ERROR';\n\n    if (serverErrorCode && serverErrorCode in MESSAGING_SERVER_TO_CLIENT_CODE) {\n      clientCodeKey = MESSAGING_SERVER_TO_CLIENT_CODE[serverErrorCode];\n    }\n\n    var error = deep_copy_1.deepCopy(MessagingClientErrorCode[clientCodeKey]);\n    error.message = message || error.message;\n\n    if (clientCodeKey === 'UNKNOWN_ERROR' && typeof rawServerResponse !== 'undefined') {\n      try {\n        error.message += \" Raw server response: \\\"\" + JSON.stringify(rawServerResponse) + \"\\\"\";\n      } catch (e) {// Ignore JSON parsing error.\n      }\n    }\n\n    return new FirebaseMessagingError(error);\n  };\n\n  FirebaseMessagingError.fromTopicManagementServerError = function (serverErrorCode, message, rawServerResponse) {\n    // If not found, default to unknown error.\n    var clientCodeKey = TOPIC_MGT_SERVER_TO_CLIENT_CODE[serverErrorCode] || 'UNKNOWN_ERROR';\n    var error = deep_copy_1.deepCopy(MessagingClientErrorCode[clientCodeKey]);\n    error.message = message || error.message;\n\n    if (clientCodeKey === 'UNKNOWN_ERROR' && typeof rawServerResponse !== 'undefined') {\n      try {\n        error.message += \" Raw server response: \\\"\" + JSON.stringify(rawServerResponse) + \"\\\"\";\n      } catch (e) {// Ignore JSON parsing error.\n      }\n    }\n\n    return new FirebaseMessagingError(error);\n  };\n\n  return FirebaseMessagingError;\n}(PrefixedFirebaseError);\n\nexports.FirebaseMessagingError = FirebaseMessagingError;\n/**\n * Firebase project management error code structure. This extends PrefixedFirebaseError.\n *\n * @param {ProjectManagementErrorCode} code The error code.\n * @param {string} message The error message.\n * @constructor\n */\n\nvar FirebaseProjectManagementError =\n/** @class */\nfunction (_super) {\n  __extends(FirebaseProjectManagementError, _super);\n\n  function FirebaseProjectManagementError(code, message) {\n    var _this = _super.call(this, 'project-management', code, message) || this;\n    /* tslint:disable:max-line-length */\n    // Set the prototype explicitly. See the following link for more details:\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n    /* tslint:enable:max-line-length */\n\n\n    _this.__proto__ = FirebaseProjectManagementError.prototype;\n    return _this;\n  }\n\n  return FirebaseProjectManagementError;\n}(PrefixedFirebaseError);\n\nexports.FirebaseProjectManagementError = FirebaseProjectManagementError;\n/**\n * App client error codes and their default messages.\n */\n\nvar AppErrorCodes =\n/** @class */\nfunction () {\n  function AppErrorCodes() {}\n\n  AppErrorCodes.APP_DELETED = 'app-deleted';\n  AppErrorCodes.DUPLICATE_APP = 'duplicate-app';\n  AppErrorCodes.INVALID_ARGUMENT = 'invalid-argument';\n  AppErrorCodes.INTERNAL_ERROR = 'internal-error';\n  AppErrorCodes.INVALID_APP_NAME = 'invalid-app-name';\n  AppErrorCodes.INVALID_APP_OPTIONS = 'invalid-app-options';\n  AppErrorCodes.INVALID_CREDENTIAL = 'invalid-credential';\n  AppErrorCodes.NETWORK_ERROR = 'network-error';\n  AppErrorCodes.NETWORK_TIMEOUT = 'network-timeout';\n  AppErrorCodes.NO_APP = 'no-app';\n  AppErrorCodes.UNABLE_TO_PARSE_RESPONSE = 'unable-to-parse-response';\n  return AppErrorCodes;\n}();\n\nexports.AppErrorCodes = AppErrorCodes;\n/**\n * Auth client error codes and their default messages.\n */\n\nvar AuthClientErrorCode =\n/** @class */\nfunction () {\n  function AuthClientErrorCode() {}\n\n  AuthClientErrorCode.BILLING_NOT_ENABLED = {\n    code: 'billing-not-enabled',\n    message: 'Feature requires billing to be enabled.'\n  };\n  AuthClientErrorCode.CLAIMS_TOO_LARGE = {\n    code: 'claims-too-large',\n    message: 'Developer claims maximum payload size exceeded.'\n  };\n  AuthClientErrorCode.CONFIGURATION_EXISTS = {\n    code: 'configuration-exists',\n    message: 'A configuration already exists with the provided identifier.'\n  };\n  AuthClientErrorCode.CONFIGURATION_NOT_FOUND = {\n    code: 'configuration-not-found',\n    message: 'There is no configuration corresponding to the provided identifier.'\n  };\n  AuthClientErrorCode.ID_TOKEN_EXPIRED = {\n    code: 'id-token-expired',\n    message: 'The provided Firebase ID token is expired.'\n  };\n  AuthClientErrorCode.INVALID_ARGUMENT = {\n    code: 'argument-error',\n    message: 'Invalid argument provided.'\n  };\n  AuthClientErrorCode.INVALID_CONFIG = {\n    code: 'invalid-config',\n    message: 'The provided configuration is invalid.'\n  };\n  AuthClientErrorCode.EMAIL_ALREADY_EXISTS = {\n    code: 'email-already-exists',\n    message: 'The email address is already in use by another account.'\n  };\n  AuthClientErrorCode.FORBIDDEN_CLAIM = {\n    code: 'reserved-claim',\n    message: 'The specified developer claim is reserved and cannot be specified.'\n  };\n  AuthClientErrorCode.INVALID_ID_TOKEN = {\n    code: 'invalid-id-token',\n    message: 'The provided ID token is not a valid Firebase ID token.'\n  };\n  AuthClientErrorCode.ID_TOKEN_REVOKED = {\n    code: 'id-token-revoked',\n    message: 'The Firebase ID token has been revoked.'\n  };\n  AuthClientErrorCode.INTERNAL_ERROR = {\n    code: 'internal-error',\n    message: 'An internal error has occurred.'\n  };\n  AuthClientErrorCode.INVALID_CLAIMS = {\n    code: 'invalid-claims',\n    message: 'The provided custom claim attributes are invalid.'\n  };\n  AuthClientErrorCode.INVALID_CONTINUE_URI = {\n    code: 'invalid-continue-uri',\n    message: 'The continue URL must be a valid URL string.'\n  };\n  AuthClientErrorCode.INVALID_CREATION_TIME = {\n    code: 'invalid-creation-time',\n    message: 'The creation time must be a valid UTC date string.'\n  };\n  AuthClientErrorCode.INVALID_CREDENTIAL = {\n    code: 'invalid-credential',\n    message: 'Invalid credential object provided.'\n  };\n  AuthClientErrorCode.INVALID_DISABLED_FIELD = {\n    code: 'invalid-disabled-field',\n    message: 'The disabled field must be a boolean.'\n  };\n  AuthClientErrorCode.INVALID_DISPLAY_NAME = {\n    code: 'invalid-display-name',\n    message: 'The displayName field must be a valid string.'\n  };\n  AuthClientErrorCode.INVALID_DYNAMIC_LINK_DOMAIN = {\n    code: 'invalid-dynamic-link-domain',\n    message: 'The provided dynamic link domain is not configured or authorized ' + 'for the current project.'\n  };\n  AuthClientErrorCode.INVALID_EMAIL_VERIFIED = {\n    code: 'invalid-email-verified',\n    message: 'The emailVerified field must be a boolean.'\n  };\n  AuthClientErrorCode.INVALID_EMAIL = {\n    code: 'invalid-email',\n    message: 'The email address is improperly formatted.'\n  };\n  AuthClientErrorCode.INVALID_HASH_ALGORITHM = {\n    code: 'invalid-hash-algorithm',\n    message: 'The hash algorithm must match one of the strings in the list of ' + 'supported algorithms.'\n  };\n  AuthClientErrorCode.INVALID_HASH_BLOCK_SIZE = {\n    code: 'invalid-hash-block-size',\n    message: 'The hash block size must be a valid number.'\n  };\n  AuthClientErrorCode.INVALID_HASH_DERIVED_KEY_LENGTH = {\n    code: 'invalid-hash-derived-key-length',\n    message: 'The hash derived key length must be a valid number.'\n  };\n  AuthClientErrorCode.INVALID_HASH_KEY = {\n    code: 'invalid-hash-key',\n    message: 'The hash key must a valid byte buffer.'\n  };\n  AuthClientErrorCode.INVALID_HASH_MEMORY_COST = {\n    code: 'invalid-hash-memory-cost',\n    message: 'The hash memory cost must be a valid number.'\n  };\n  AuthClientErrorCode.INVALID_HASH_PARALLELIZATION = {\n    code: 'invalid-hash-parallelization',\n    message: 'The hash parallelization must be a valid number.'\n  };\n  AuthClientErrorCode.INVALID_HASH_ROUNDS = {\n    code: 'invalid-hash-rounds',\n    message: 'The hash rounds must be a valid number.'\n  };\n  AuthClientErrorCode.INVALID_HASH_SALT_SEPARATOR = {\n    code: 'invalid-hash-salt-separator',\n    message: 'The hashing algorithm salt separator field must be a valid byte buffer.'\n  };\n  AuthClientErrorCode.INVALID_LAST_SIGN_IN_TIME = {\n    code: 'invalid-last-sign-in-time',\n    message: 'The last sign-in time must be a valid UTC date string.'\n  };\n  AuthClientErrorCode.INVALID_NAME = {\n    code: 'invalid-name',\n    message: 'The resource name provided is invalid.'\n  };\n  AuthClientErrorCode.INVALID_OAUTH_CLIENT_ID = {\n    code: 'invalid-oauth-client-id',\n    message: 'The provided OAuth client ID is invalid.'\n  };\n  AuthClientErrorCode.INVALID_PAGE_TOKEN = {\n    code: 'invalid-page-token',\n    message: 'The page token must be a valid non-empty string.'\n  };\n  AuthClientErrorCode.INVALID_PASSWORD = {\n    code: 'invalid-password',\n    message: 'The password must be a string with at least 6 characters.'\n  };\n  AuthClientErrorCode.INVALID_PASSWORD_HASH = {\n    code: 'invalid-password-hash',\n    message: 'The password hash must be a valid byte buffer.'\n  };\n  AuthClientErrorCode.INVALID_PASSWORD_SALT = {\n    code: 'invalid-password-salt',\n    message: 'The password salt must be a valid byte buffer.'\n  };\n  AuthClientErrorCode.INVALID_PHONE_NUMBER = {\n    code: 'invalid-phone-number',\n    message: 'The phone number must be a non-empty E.164 standard compliant identifier ' + 'string.'\n  };\n  AuthClientErrorCode.INVALID_PHOTO_URL = {\n    code: 'invalid-photo-url',\n    message: 'The photoURL field must be a valid URL.'\n  };\n  AuthClientErrorCode.INVALID_PROJECT_ID = {\n    code: 'invalid-project-id',\n    message: 'Invalid parent project. Either parent project doesn\\'t exist or didn\\'t enable multi-tenancy.'\n  };\n  AuthClientErrorCode.INVALID_PROVIDER_DATA = {\n    code: 'invalid-provider-data',\n    message: 'The providerData must be a valid array of UserInfo objects.'\n  };\n  AuthClientErrorCode.INVALID_PROVIDER_ID = {\n    code: 'invalid-provider-id',\n    message: 'The providerId must be a valid supported provider identifier string.'\n  };\n  AuthClientErrorCode.INVALID_SESSION_COOKIE_DURATION = {\n    code: 'invalid-session-cookie-duration',\n    message: 'The session cookie duration must be a valid number in milliseconds ' + 'between 5 minutes and 2 weeks.'\n  };\n  AuthClientErrorCode.INVALID_TENANT_ID = {\n    code: 'invalid-tenant-id',\n    message: 'The tenant ID must be a valid non-empty string.'\n  };\n  AuthClientErrorCode.INVALID_TENANT_TYPE = {\n    code: 'invalid-tenant-type',\n    message: 'Tenant type must be either \"full_service\" or \"lightweight\".'\n  };\n  AuthClientErrorCode.INVALID_UID = {\n    code: 'invalid-uid',\n    message: 'The uid must be a non-empty string with at most 128 characters.'\n  };\n  AuthClientErrorCode.INVALID_USER_IMPORT = {\n    code: 'invalid-user-import',\n    message: 'The user record to import is invalid.'\n  };\n  AuthClientErrorCode.INVALID_TOKENS_VALID_AFTER_TIME = {\n    code: 'invalid-tokens-valid-after-time',\n    message: 'The tokensValidAfterTime must be a valid UTC number in seconds.'\n  };\n  AuthClientErrorCode.MISMATCHING_TENANT_ID = {\n    code: 'mismatching-tenant-id',\n    message: 'User tenant ID does not match with the current TenantAwareAuth tenant ID.'\n  };\n  AuthClientErrorCode.MISSING_ANDROID_PACKAGE_NAME = {\n    code: 'missing-android-pkg-name',\n    message: 'An Android Package Name must be provided if the Android App is ' + 'required to be installed.'\n  };\n  AuthClientErrorCode.MISSING_CONFIG = {\n    code: 'missing-config',\n    message: 'The provided configuration is missing required attributes.'\n  };\n  AuthClientErrorCode.MISSING_CONTINUE_URI = {\n    code: 'missing-continue-uri',\n    message: 'A valid continue URL must be provided in the request.'\n  };\n  AuthClientErrorCode.MISSING_DISPLAY_NAME = {\n    code: 'missing-display-name',\n    message: 'The resource being created or edited is missing a valid display name.'\n  };\n  AuthClientErrorCode.MISSING_IOS_BUNDLE_ID = {\n    code: 'missing-ios-bundle-id',\n    message: 'The request is missing an iOS Bundle ID.'\n  };\n  AuthClientErrorCode.MISSING_ISSUER = {\n    code: 'missing-issuer',\n    message: 'The OAuth/OIDC configuration issuer must not be empty.'\n  };\n  AuthClientErrorCode.MISSING_HASH_ALGORITHM = {\n    code: 'missing-hash-algorithm',\n    message: 'Importing users with password hashes requires that the hashing ' + 'algorithm and its parameters be provided.'\n  };\n  AuthClientErrorCode.MISSING_OAUTH_CLIENT_ID = {\n    code: 'missing-oauth-client-id',\n    message: 'The OAuth/OIDC configuration client ID must not be empty.'\n  };\n  AuthClientErrorCode.MISSING_PROVIDER_ID = {\n    code: 'missing-provider-id',\n    message: 'A valid provider ID must be provided in the request.'\n  };\n  AuthClientErrorCode.MISSING_SAML_RELYING_PARTY_CONFIG = {\n    code: 'missing-saml-relying-party-config',\n    message: 'The SAML configuration provided is missing a relying party configuration.'\n  };\n  AuthClientErrorCode.MAXIMUM_USER_COUNT_EXCEEDED = {\n    code: 'maximum-user-count-exceeded',\n    message: 'The maximum allowed number of users to import has been exceeded.'\n  };\n  AuthClientErrorCode.MISSING_UID = {\n    code: 'missing-uid',\n    message: 'A uid identifier is required for the current operation.'\n  };\n  AuthClientErrorCode.OPERATION_NOT_ALLOWED = {\n    code: 'operation-not-allowed',\n    message: 'The given sign-in provider is disabled for this Firebase project. ' + 'Enable it in the Firebase console, under the sign-in method tab of the ' + 'Auth section.'\n  };\n  AuthClientErrorCode.PHONE_NUMBER_ALREADY_EXISTS = {\n    code: 'phone-number-already-exists',\n    message: 'The user with the provided phone number already exists.'\n  };\n  AuthClientErrorCode.PROJECT_NOT_FOUND = {\n    code: 'project-not-found',\n    message: 'No Firebase project was found for the provided credential.'\n  };\n  AuthClientErrorCode.INSUFFICIENT_PERMISSION = {\n    code: 'insufficient-permission',\n    message: 'Credential implementation provided to initializeApp() via the \"credential\" property ' + 'has insufficient permission to access the requested resource. See ' + 'https://firebase.google.com/docs/admin/setup for details on how to authenticate this SDK ' + 'with appropriate permissions.'\n  };\n  AuthClientErrorCode.QUOTA_EXCEEDED = {\n    code: 'quota-exceeded',\n    message: 'The project quota for the specified operation has been exceeded.'\n  };\n  AuthClientErrorCode.SESSION_COOKIE_EXPIRED = {\n    code: 'session-cookie-expired',\n    message: 'The Firebase session cookie is expired.'\n  };\n  AuthClientErrorCode.SESSION_COOKIE_REVOKED = {\n    code: 'session-cookie-revoked',\n    message: 'The Firebase session cookie has been revoked.'\n  };\n  AuthClientErrorCode.TENANT_NOT_FOUND = {\n    code: 'tenant-not-found',\n    message: 'There is no tenant corresponding to the provided identifier.'\n  };\n  AuthClientErrorCode.UID_ALREADY_EXISTS = {\n    code: 'uid-already-exists',\n    message: 'The user with the provided uid already exists.'\n  };\n  AuthClientErrorCode.UNAUTHORIZED_DOMAIN = {\n    code: 'unauthorized-continue-uri',\n    message: 'The domain of the continue URL is not whitelisted. Whitelist the domain in the ' + 'Firebase console.'\n  };\n  AuthClientErrorCode.UNSUPPORTED_TENANT_OPERATION = {\n    code: 'unsupported-tenant-operation',\n    message: 'This operation is not supported in a multi-tenant context.'\n  };\n  AuthClientErrorCode.USER_NOT_FOUND = {\n    code: 'user-not-found',\n    message: 'There is no user record corresponding to the provided identifier.'\n  };\n  AuthClientErrorCode.NOT_FOUND = {\n    code: 'not-found',\n    message: 'The requested resource was not found.'\n  };\n  return AuthClientErrorCode;\n}();\n\nexports.AuthClientErrorCode = AuthClientErrorCode;\n/**\n * Messaging client error codes and their default messages.\n */\n\nvar MessagingClientErrorCode =\n/** @class */\nfunction () {\n  function MessagingClientErrorCode() {}\n\n  MessagingClientErrorCode.INVALID_ARGUMENT = {\n    code: 'invalid-argument',\n    message: 'Invalid argument provided.'\n  };\n  MessagingClientErrorCode.INVALID_RECIPIENT = {\n    code: 'invalid-recipient',\n    message: 'Invalid message recipient provided.'\n  };\n  MessagingClientErrorCode.INVALID_PAYLOAD = {\n    code: 'invalid-payload',\n    message: 'Invalid message payload provided.'\n  };\n  MessagingClientErrorCode.INVALID_DATA_PAYLOAD_KEY = {\n    code: 'invalid-data-payload-key',\n    message: 'The data message payload contains an invalid key. See the reference documentation ' + 'for the DataMessagePayload type for restricted keys.'\n  };\n  MessagingClientErrorCode.PAYLOAD_SIZE_LIMIT_EXCEEDED = {\n    code: 'payload-size-limit-exceeded',\n    message: 'The provided message payload exceeds the FCM size limits. See the error documentation ' + 'for more details.'\n  };\n  MessagingClientErrorCode.INVALID_OPTIONS = {\n    code: 'invalid-options',\n    message: 'Invalid message options provided.'\n  };\n  MessagingClientErrorCode.INVALID_REGISTRATION_TOKEN = {\n    code: 'invalid-registration-token',\n    message: 'Invalid registration token provided. Make sure it matches the registration token ' + 'the client app receives from registering with FCM.'\n  };\n  MessagingClientErrorCode.REGISTRATION_TOKEN_NOT_REGISTERED = {\n    code: 'registration-token-not-registered',\n    message: 'The provided registration token is not registered. A previously valid registration ' + 'token can be unregistered for a variety of reasons. See the error documentation for more ' + 'details. Remove this registration token and stop using it to send messages.'\n  };\n  MessagingClientErrorCode.MISMATCHED_CREDENTIAL = {\n    code: 'mismatched-credential',\n    message: 'The credential used to authenticate this SDK does not have permission to send ' + 'messages to the device corresponding to the provided registration token. Make sure the ' + 'credential and registration token both belong to the same Firebase project.'\n  };\n  MessagingClientErrorCode.INVALID_PACKAGE_NAME = {\n    code: 'invalid-package-name',\n    message: 'The message was addressed to a registration token whose package name does not match ' + 'the provided \"restrictedPackageName\" option.'\n  };\n  MessagingClientErrorCode.DEVICE_MESSAGE_RATE_EXCEEDED = {\n    code: 'device-message-rate-exceeded',\n    message: 'The rate of messages to a particular device is too high. Reduce the number of ' + 'messages sent to this device and do not immediately retry sending to this device.'\n  };\n  MessagingClientErrorCode.TOPICS_MESSAGE_RATE_EXCEEDED = {\n    code: 'topics-message-rate-exceeded',\n    message: 'The rate of messages to subscribers to a particular topic is too high. Reduce the ' + 'number of messages sent for this topic, and do not immediately retry sending to this topic.'\n  };\n  MessagingClientErrorCode.MESSAGE_RATE_EXCEEDED = {\n    code: 'message-rate-exceeded',\n    message: 'Sending limit exceeded for the message target.'\n  };\n  MessagingClientErrorCode.THIRD_PARTY_AUTH_ERROR = {\n    code: 'third-party-auth-error',\n    message: 'A message targeted to an iOS device could not be sent because the required APNs ' + 'SSL certificate was not uploaded or has expired. Check the validity of your development ' + 'and production certificates.'\n  };\n  MessagingClientErrorCode.TOO_MANY_TOPICS = {\n    code: 'too-many-topics',\n    message: 'The maximum number of topics the provided registration token can be subscribed to ' + 'has been exceeded.'\n  };\n  MessagingClientErrorCode.AUTHENTICATION_ERROR = {\n    code: 'authentication-error',\n    message: 'An error occurred when trying to authenticate to the FCM servers. Make sure the ' + 'credential used to authenticate this SDK has the proper permissions. See ' + 'https://firebase.google.com/docs/admin/setup for setup instructions.'\n  };\n  MessagingClientErrorCode.SERVER_UNAVAILABLE = {\n    code: 'server-unavailable',\n    message: 'The FCM server could not process the request in time. See the error documentation ' + 'for more details.'\n  };\n  MessagingClientErrorCode.INTERNAL_ERROR = {\n    code: 'internal-error',\n    message: 'An internal error has occurred. Please retry the request.'\n  };\n  MessagingClientErrorCode.UNKNOWN_ERROR = {\n    code: 'unknown-error',\n    message: 'An unknown server error was returned.'\n  };\n  return MessagingClientErrorCode;\n}();\n\nexports.MessagingClientErrorCode = MessagingClientErrorCode;\n\nvar InstanceIdClientErrorCode =\n/** @class */\nfunction () {\n  function InstanceIdClientErrorCode() {}\n\n  InstanceIdClientErrorCode.INVALID_ARGUMENT = {\n    code: 'invalid-argument',\n    message: 'Invalid argument provided.'\n  };\n  InstanceIdClientErrorCode.INVALID_PROJECT_ID = {\n    code: 'invalid-project-id',\n    message: 'Invalid project ID provided.'\n  };\n  InstanceIdClientErrorCode.INVALID_INSTANCE_ID = {\n    code: 'invalid-instance-id',\n    message: 'Invalid instance ID provided.'\n  };\n  InstanceIdClientErrorCode.API_ERROR = {\n    code: 'api-error',\n    message: 'Instance ID API call failed.'\n  };\n  return InstanceIdClientErrorCode;\n}();\n\nexports.InstanceIdClientErrorCode = InstanceIdClientErrorCode;\n/** @const {ServerToClientCode} Auth server to client enum error codes. */\n\nvar AUTH_SERVER_TO_CLIENT_CODE = {\n  // Feature being configured or used requires a billing account.\n  BILLING_NOT_ENABLED: 'BILLING_NOT_ENABLED',\n  // Claims payload is too large.\n  CLAIMS_TOO_LARGE: 'CLAIMS_TOO_LARGE',\n  // Configuration being added already exists.\n  CONFIGURATION_EXISTS: 'CONFIGURATION_EXISTS',\n  // Configuration not found.\n  CONFIGURATION_NOT_FOUND: 'CONFIGURATION_NOT_FOUND',\n  // Provided credential has insufficient permissions.\n  INSUFFICIENT_PERMISSION: 'INSUFFICIENT_PERMISSION',\n  // Provided configuration has invalid fields.\n  INVALID_CONFIG: 'INVALID_CONFIG',\n  // Provided configuration identifier is invalid.\n  INVALID_CONFIG_ID: 'INVALID_PROVIDER_ID',\n  // ActionCodeSettings missing continue URL.\n  INVALID_CONTINUE_URI: 'INVALID_CONTINUE_URI',\n  // Dynamic link domain in provided ActionCodeSettings is not authorized.\n  INVALID_DYNAMIC_LINK_DOMAIN: 'INVALID_DYNAMIC_LINK_DOMAIN',\n  // uploadAccount provides an email that already exists.\n  DUPLICATE_EMAIL: 'EMAIL_ALREADY_EXISTS',\n  // uploadAccount provides a localId that already exists.\n  DUPLICATE_LOCAL_ID: 'UID_ALREADY_EXISTS',\n  // setAccountInfo email already exists.\n  EMAIL_EXISTS: 'EMAIL_ALREADY_EXISTS',\n  // Reserved claim name.\n  FORBIDDEN_CLAIM: 'FORBIDDEN_CLAIM',\n  // Invalid claims provided.\n  INVALID_CLAIMS: 'INVALID_CLAIMS',\n  // Invalid session cookie duration.\n  INVALID_DURATION: 'INVALID_SESSION_COOKIE_DURATION',\n  // Invalid email provided.\n  INVALID_EMAIL: 'INVALID_EMAIL',\n  // Invalid tenant display name. This can be thrown on CreateTenant and UpdateTenant.\n  INVALID_DISPLAY_NAME: 'INVALID_DISPLAY_NAME',\n  // Invalid ID token provided.\n  INVALID_ID_TOKEN: 'INVALID_ID_TOKEN',\n  // Invalid tenant/parent resource name.\n  INVALID_NAME: 'INVALID_NAME',\n  // OIDC configuration has an invalid OAuth client ID.\n  INVALID_OAUTH_CLIENT_ID: 'INVALID_OAUTH_CLIENT_ID',\n  // Invalid page token.\n  INVALID_PAGE_SELECTION: 'INVALID_PAGE_TOKEN',\n  // Invalid phone number.\n  INVALID_PHONE_NUMBER: 'INVALID_PHONE_NUMBER',\n  // Invalid agent project. Either agent project doesn't exist or didn't enable multi-tenancy.\n  INVALID_PROJECT_ID: 'INVALID_PROJECT_ID',\n  // Invalid provider ID.\n  INVALID_PROVIDER_ID: 'INVALID_PROVIDER_ID',\n  // Invalid service account.\n  INVALID_SERVICE_ACCOUNT: 'INVALID_SERVICE_ACCOUNT',\n  // Invalid tenant type.\n  INVALID_TENANT_TYPE: 'INVALID_TENANT_TYPE',\n  // Missing Android package name.\n  MISSING_ANDROID_PACKAGE_NAME: 'MISSING_ANDROID_PACKAGE_NAME',\n  // Missing configuration.\n  MISSING_CONFIG: 'MISSING_CONFIG',\n  // Missing configuration identifier.\n  MISSING_CONFIG_ID: 'MISSING_PROVIDER_ID',\n  // Missing tenant display name: This can be thrown on CreateTenant and UpdateTenant.\n  MISSING_DISPLAY_NAME: 'MISSING_DISPLAY_NAME',\n  // Missing iOS bundle ID.\n  MISSING_IOS_BUNDLE_ID: 'MISSING_IOS_BUNDLE_ID',\n  // Missing OIDC issuer.\n  MISSING_ISSUER: 'MISSING_ISSUER',\n  // No localId provided (deleteAccount missing localId).\n  MISSING_LOCAL_ID: 'MISSING_UID',\n  // OIDC configuration is missing an OAuth client ID.\n  MISSING_OAUTH_CLIENT_ID: 'MISSING_OAUTH_CLIENT_ID',\n  // Missing provider ID.\n  MISSING_PROVIDER_ID: 'MISSING_PROVIDER_ID',\n  // Missing SAML RP config.\n  MISSING_SAML_RELYING_PARTY_CONFIG: 'MISSING_SAML_RELYING_PARTY_CONFIG',\n  // Empty user list in uploadAccount.\n  MISSING_USER_ACCOUNT: 'MISSING_UID',\n  // Password auth disabled in console.\n  OPERATION_NOT_ALLOWED: 'OPERATION_NOT_ALLOWED',\n  // Provided credential has insufficient permissions.\n  PERMISSION_DENIED: 'INSUFFICIENT_PERMISSION',\n  // Phone number already exists.\n  PHONE_NUMBER_EXISTS: 'PHONE_NUMBER_ALREADY_EXISTS',\n  // Project not found.\n  PROJECT_NOT_FOUND: 'PROJECT_NOT_FOUND',\n  // In multi-tenancy context: project creation quota exceeded.\n  QUOTA_EXCEEDED: 'QUOTA_EXCEEDED',\n  // Tenant not found.\n  TENANT_NOT_FOUND: 'TENANT_NOT_FOUND',\n  // Tenant ID mismatch.\n  TENANT_ID_MISMATCH: 'MISMATCHING_TENANT_ID',\n  // Token expired error.\n  TOKEN_EXPIRED: 'ID_TOKEN_EXPIRED',\n  // Continue URL provided in ActionCodeSettings has a domain that is not whitelisted.\n  UNAUTHORIZED_DOMAIN: 'UNAUTHORIZED_DOMAIN',\n  // Operation is not supported in a multi-tenant context.\n  UNSUPPORTED_TENANT_OPERATION: 'UNSUPPORTED_TENANT_OPERATION',\n  // User on which action is to be performed is not found.\n  USER_NOT_FOUND: 'USER_NOT_FOUND',\n  // Password provided is too weak.\n  WEAK_PASSWORD: 'INVALID_PASSWORD'\n};\n/** @const {ServerToClientCode} Messaging server to client enum error codes. */\n\nvar MESSAGING_SERVER_TO_CLIENT_CODE = {\n  /* GENERIC ERRORS */\n  // Generic invalid message parameter provided.\n  InvalidParameters: 'INVALID_ARGUMENT',\n  // Mismatched sender ID.\n  MismatchSenderId: 'MISMATCHED_CREDENTIAL',\n  // FCM server unavailable.\n  Unavailable: 'SERVER_UNAVAILABLE',\n  // FCM server internal error.\n  InternalServerError: 'INTERNAL_ERROR',\n\n  /* SEND ERRORS */\n  // Invalid registration token format.\n  InvalidRegistration: 'INVALID_REGISTRATION_TOKEN',\n  // Registration token is not registered.\n  NotRegistered: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n  // Registration token does not match restricted package name.\n  InvalidPackageName: 'INVALID_PACKAGE_NAME',\n  // Message payload size limit exceeded.\n  MessageTooBig: 'PAYLOAD_SIZE_LIMIT_EXCEEDED',\n  // Invalid key in the data message payload.\n  InvalidDataKey: 'INVALID_DATA_PAYLOAD_KEY',\n  // Invalid time to live option.\n  InvalidTtl: 'INVALID_OPTIONS',\n  // Device message rate exceeded.\n  DeviceMessageRateExceeded: 'DEVICE_MESSAGE_RATE_EXCEEDED',\n  // Topics message rate exceeded.\n  TopicsMessageRateExceeded: 'TOPICS_MESSAGE_RATE_EXCEEDED',\n  // Invalid APNs credentials.\n  InvalidApnsCredential: 'THIRD_PARTY_AUTH_ERROR',\n\n  /* FCM v1 canonical error codes */\n  NOT_FOUND: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n  PERMISSION_DENIED: 'MISMATCHED_CREDENTIAL',\n  RESOURCE_EXHAUSTED: 'MESSAGE_RATE_EXCEEDED',\n  UNAUTHENTICATED: 'THIRD_PARTY_AUTH_ERROR',\n\n  /* FCM v1 new error codes */\n  APNS_AUTH_ERROR: 'THIRD_PARTY_AUTH_ERROR',\n  INTERNAL: 'INTERNAL_ERROR',\n  INVALID_ARGUMENT: 'INVALID_ARGUMENT',\n  QUOTA_EXCEEDED: 'MESSAGE_RATE_EXCEEDED',\n  SENDER_ID_MISMATCH: 'MISMATCHED_CREDENTIAL',\n  THIRD_PARTY_AUTH_ERROR: 'THIRD_PARTY_AUTH_ERROR',\n  UNAVAILABLE: 'SERVER_UNAVAILABLE',\n  UNREGISTERED: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n  UNSPECIFIED_ERROR: 'UNKNOWN_ERROR'\n};\n/** @const {ServerToClientCode} Topic management (IID) server to client enum error codes. */\n\nvar TOPIC_MGT_SERVER_TO_CLIENT_CODE = {\n  /* TOPIC SUBSCRIPTION MANAGEMENT ERRORS */\n  NOT_FOUND: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n  INVALID_ARGUMENT: 'INVALID_REGISTRATION_TOKEN',\n  TOO_MANY_TOPICS: 'TOO_MANY_TOPICS',\n  RESOURCE_EXHAUSTED: 'TOO_MANY_TOPICS',\n  PERMISSION_DENIED: 'AUTHENTICATION_ERROR',\n  DEADLINE_EXCEEDED: 'SERVER_UNAVAILABLE',\n  INTERNAL: 'INTERNAL_ERROR',\n  UNKNOWN: 'UNKNOWN_ERROR'\n};","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/firebase-admin/lib/utils/error.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","deep_copy_1","require","FirebaseError","_super","errorInfo","_this","call","message","get","code","enumerable","configurable","toJSON","Error","PrefixedFirebaseError","codePrefix","hasCode","FirebaseAppError","FirebaseAuthError","info","fromServerError","serverErrorCode","rawServerResponse","colonSeparator","indexOf","customMessage","substring","trim","clientCodeKey","AUTH_SERVER_TO_CLIENT_CODE","error","deepCopy","AuthClientErrorCode","JSON","stringify","e","FirebaseDatabaseError","FirebaseFirestoreError","FirebaseInstanceIdError","FirebaseMessagingError","MESSAGING_SERVER_TO_CLIENT_CODE","MessagingClientErrorCode","fromTopicManagementServerError","TOPIC_MGT_SERVER_TO_CLIENT_CODE","FirebaseProjectManagementError","AppErrorCodes","APP_DELETED","DUPLICATE_APP","INVALID_ARGUMENT","INTERNAL_ERROR","INVALID_APP_NAME","INVALID_APP_OPTIONS","INVALID_CREDENTIAL","NETWORK_ERROR","NETWORK_TIMEOUT","NO_APP","UNABLE_TO_PARSE_RESPONSE","BILLING_NOT_ENABLED","CLAIMS_TOO_LARGE","CONFIGURATION_EXISTS","CONFIGURATION_NOT_FOUND","ID_TOKEN_EXPIRED","INVALID_CONFIG","EMAIL_ALREADY_EXISTS","FORBIDDEN_CLAIM","INVALID_ID_TOKEN","ID_TOKEN_REVOKED","INVALID_CLAIMS","INVALID_CONTINUE_URI","INVALID_CREATION_TIME","INVALID_DISABLED_FIELD","INVALID_DISPLAY_NAME","INVALID_DYNAMIC_LINK_DOMAIN","INVALID_EMAIL_VERIFIED","INVALID_EMAIL","INVALID_HASH_ALGORITHM","INVALID_HASH_BLOCK_SIZE","INVALID_HASH_DERIVED_KEY_LENGTH","INVALID_HASH_KEY","INVALID_HASH_MEMORY_COST","INVALID_HASH_PARALLELIZATION","INVALID_HASH_ROUNDS","INVALID_HASH_SALT_SEPARATOR","INVALID_LAST_SIGN_IN_TIME","INVALID_NAME","INVALID_OAUTH_CLIENT_ID","INVALID_PAGE_TOKEN","INVALID_PASSWORD","INVALID_PASSWORD_HASH","INVALID_PASSWORD_SALT","INVALID_PHONE_NUMBER","INVALID_PHOTO_URL","INVALID_PROJECT_ID","INVALID_PROVIDER_DATA","INVALID_PROVIDER_ID","INVALID_SESSION_COOKIE_DURATION","INVALID_TENANT_ID","INVALID_TENANT_TYPE","INVALID_UID","INVALID_USER_IMPORT","INVALID_TOKENS_VALID_AFTER_TIME","MISMATCHING_TENANT_ID","MISSING_ANDROID_PACKAGE_NAME","MISSING_CONFIG","MISSING_CONTINUE_URI","MISSING_DISPLAY_NAME","MISSING_IOS_BUNDLE_ID","MISSING_ISSUER","MISSING_HASH_ALGORITHM","MISSING_OAUTH_CLIENT_ID","MISSING_PROVIDER_ID","MISSING_SAML_RELYING_PARTY_CONFIG","MAXIMUM_USER_COUNT_EXCEEDED","MISSING_UID","OPERATION_NOT_ALLOWED","PHONE_NUMBER_ALREADY_EXISTS","PROJECT_NOT_FOUND","INSUFFICIENT_PERMISSION","QUOTA_EXCEEDED","SESSION_COOKIE_EXPIRED","SESSION_COOKIE_REVOKED","TENANT_NOT_FOUND","UID_ALREADY_EXISTS","UNAUTHORIZED_DOMAIN","UNSUPPORTED_TENANT_OPERATION","USER_NOT_FOUND","NOT_FOUND","INVALID_RECIPIENT","INVALID_PAYLOAD","INVALID_DATA_PAYLOAD_KEY","PAYLOAD_SIZE_LIMIT_EXCEEDED","INVALID_OPTIONS","INVALID_REGISTRATION_TOKEN","REGISTRATION_TOKEN_NOT_REGISTERED","MISMATCHED_CREDENTIAL","INVALID_PACKAGE_NAME","DEVICE_MESSAGE_RATE_EXCEEDED","TOPICS_MESSAGE_RATE_EXCEEDED","MESSAGE_RATE_EXCEEDED","THIRD_PARTY_AUTH_ERROR","TOO_MANY_TOPICS","AUTHENTICATION_ERROR","SERVER_UNAVAILABLE","UNKNOWN_ERROR","InstanceIdClientErrorCode","INVALID_INSTANCE_ID","API_ERROR","INVALID_CONFIG_ID","DUPLICATE_EMAIL","DUPLICATE_LOCAL_ID","EMAIL_EXISTS","INVALID_DURATION","INVALID_PAGE_SELECTION","INVALID_SERVICE_ACCOUNT","MISSING_CONFIG_ID","MISSING_LOCAL_ID","MISSING_USER_ACCOUNT","PERMISSION_DENIED","PHONE_NUMBER_EXISTS","TENANT_ID_MISMATCH","TOKEN_EXPIRED","WEAK_PASSWORD","InvalidParameters","MismatchSenderId","Unavailable","InternalServerError","InvalidRegistration","NotRegistered","InvalidPackageName","MessageTooBig","InvalidDataKey","InvalidTtl","DeviceMessageRateExceeded","TopicsMessageRateExceeded","InvalidApnsCredential","RESOURCE_EXHAUSTED","UNAUTHENTICATED","APNS_AUTH_ERROR","INTERNAL","SENDER_ID_MISMATCH","UNAVAILABLE","UNREGISTERED","UNSPECIFIED_ERROR","DEADLINE_EXCEEDED","UNKNOWN"],"mappings":"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","sourcesContent":["/*! firebase-admin v8.9.2 */\n\"use strict\";\n/*!\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar deep_copy_1 = require(\"../utils/deep-copy\");\n/**\n * Firebase error code structure. This extends Error.\n *\n * @param {ErrorInfo} errorInfo The error information (code and message).\n * @constructor\n */\nvar FirebaseError = /** @class */ (function (_super) {\n    __extends(FirebaseError, _super);\n    function FirebaseError(errorInfo) {\n        var _this = _super.call(this, errorInfo.message) || this;\n        _this.errorInfo = errorInfo;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        _this.__proto__ = FirebaseError.prototype;\n        return _this;\n    }\n    Object.defineProperty(FirebaseError.prototype, \"code\", {\n        /** @return {string} The error code. */\n        get: function () {\n            return this.errorInfo.code;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseError.prototype, \"message\", {\n        /** @return {string} The error message. */\n        get: function () {\n            return this.errorInfo.message;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @return {object} The object representation of the error. */\n    FirebaseError.prototype.toJSON = function () {\n        return {\n            code: this.code,\n            message: this.message,\n        };\n    };\n    return FirebaseError;\n}(Error));\nexports.FirebaseError = FirebaseError;\n/**\n * A FirebaseError with a prefix in front of the error code.\n *\n * @param {string} codePrefix The prefix to apply to the error code.\n * @param {string} code The error code.\n * @param {string} message The error message.\n * @constructor\n */\nvar PrefixedFirebaseError = /** @class */ (function (_super) {\n    __extends(PrefixedFirebaseError, _super);\n    function PrefixedFirebaseError(codePrefix, code, message) {\n        var _this = _super.call(this, {\n            code: codePrefix + \"/\" + code,\n            message: message,\n        }) || this;\n        _this.codePrefix = codePrefix;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        _this.__proto__ = PrefixedFirebaseError.prototype;\n        return _this;\n    }\n    /**\n     * Allows the error type to be checked without needing to know implementation details\n     * of the code prefixing.\n     *\n     * @param {string} code The non-prefixed error code to test against.\n     * @return {boolean} True if the code matches, false otherwise.\n     */\n    PrefixedFirebaseError.prototype.hasCode = function (code) {\n        return this.codePrefix + \"/\" + code === this.code;\n    };\n    return PrefixedFirebaseError;\n}(FirebaseError));\nexports.PrefixedFirebaseError = PrefixedFirebaseError;\n/**\n * Firebase App error code structure. This extends PrefixedFirebaseError.\n *\n * @param {string} code The error code.\n * @param {string} message The error message.\n * @constructor\n */\nvar FirebaseAppError = /** @class */ (function (_super) {\n    __extends(FirebaseAppError, _super);\n    function FirebaseAppError(code, message) {\n        var _this = _super.call(this, 'app', code, message) || this;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        _this.__proto__ = FirebaseAppError.prototype;\n        return _this;\n    }\n    return FirebaseAppError;\n}(PrefixedFirebaseError));\nexports.FirebaseAppError = FirebaseAppError;\n/**\n * Firebase Auth error code structure. This extends PrefixedFirebaseError.\n *\n * @param {ErrorInfo} info The error code info.\n * @param {string} [message] The error message. This will override the default\n *     message if provided.\n * @constructor\n */\nvar FirebaseAuthError = /** @class */ (function (_super) {\n    __extends(FirebaseAuthError, _super);\n    function FirebaseAuthError(info, message) {\n        var _this = \n        // Override default message if custom message provided.\n        _super.call(this, 'auth', info.code, message || info.message) || this;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        _this.__proto__ = FirebaseAuthError.prototype;\n        return _this;\n    }\n    /**\n     * Creates the developer-facing error corresponding to the backend error code.\n     *\n     * @param {string} serverErrorCode The server error code.\n     * @param {string} [message] The error message. The default message is used\n     *     if not provided.\n     * @param {object} [rawServerResponse] The error's raw server response.\n     * @return {FirebaseAuthError} The corresponding developer-facing error.\n     */\n    FirebaseAuthError.fromServerError = function (serverErrorCode, message, rawServerResponse) {\n        // serverErrorCode could contain additional details:\n        // ERROR_CODE : Detailed message which can also contain colons\n        var colonSeparator = (serverErrorCode || '').indexOf(':');\n        var customMessage = null;\n        if (colonSeparator !== -1) {\n            customMessage = serverErrorCode.substring(colonSeparator + 1).trim();\n            serverErrorCode = serverErrorCode.substring(0, colonSeparator).trim();\n        }\n        // If not found, default to internal error.\n        var clientCodeKey = AUTH_SERVER_TO_CLIENT_CODE[serverErrorCode] || 'INTERNAL_ERROR';\n        var error = deep_copy_1.deepCopy(AuthClientErrorCode[clientCodeKey]);\n        // Server detailed message should have highest priority.\n        error.message = customMessage || message || error.message;\n        if (clientCodeKey === 'INTERNAL_ERROR' && typeof rawServerResponse !== 'undefined') {\n            try {\n                error.message += \" Raw server response: \\\"\" + JSON.stringify(rawServerResponse) + \"\\\"\";\n            }\n            catch (e) {\n                // Ignore JSON parsing error.\n            }\n        }\n        return new FirebaseAuthError(error);\n    };\n    return FirebaseAuthError;\n}(PrefixedFirebaseError));\nexports.FirebaseAuthError = FirebaseAuthError;\n/**\n * Firebase Database error code structure. This extends FirebaseError.\n *\n * @param {ErrorInfo} info The error code info.\n * @param {string} [message] The error message. This will override the default\n *     message if provided.\n * @constructor\n */\nvar FirebaseDatabaseError = /** @class */ (function (_super) {\n    __extends(FirebaseDatabaseError, _super);\n    function FirebaseDatabaseError(info, message) {\n        // Override default message if custom message provided.\n        return _super.call(this, { code: 'database/' + info.code, message: message || info.message }) || this;\n    }\n    return FirebaseDatabaseError;\n}(FirebaseError));\nexports.FirebaseDatabaseError = FirebaseDatabaseError;\n/**\n * Firebase Firestore error code structure. This extends FirebaseError.\n *\n * @param {ErrorInfo} info The error code info.\n * @param {string} [message] The error message. This will override the default\n *     message if provided.\n * @constructor\n */\nvar FirebaseFirestoreError = /** @class */ (function (_super) {\n    __extends(FirebaseFirestoreError, _super);\n    function FirebaseFirestoreError(info, message) {\n        // Override default message if custom message provided.\n        return _super.call(this, { code: 'firestore/' + info.code, message: message || info.message }) || this;\n    }\n    return FirebaseFirestoreError;\n}(FirebaseError));\nexports.FirebaseFirestoreError = FirebaseFirestoreError;\n/**\n * Firebase instance ID error code structure. This extends FirebaseError.\n *\n * @param {ErrorInfo} info The error code info.\n * @param {string} [message] The error message. This will override the default\n *     message if provided.\n * @constructor\n */\nvar FirebaseInstanceIdError = /** @class */ (function (_super) {\n    __extends(FirebaseInstanceIdError, _super);\n    function FirebaseInstanceIdError(info, message) {\n        // Override default message if custom message provided.\n        return _super.call(this, { code: 'instance-id/' + info.code, message: message || info.message }) || this;\n    }\n    return FirebaseInstanceIdError;\n}(FirebaseError));\nexports.FirebaseInstanceIdError = FirebaseInstanceIdError;\n/**\n * Firebase Messaging error code structure. This extends PrefixedFirebaseError.\n *\n * @param {ErrorInfo} info The error code info.\n * @param {string} [message] The error message. This will override the default message if provided.\n * @constructor\n */\nvar FirebaseMessagingError = /** @class */ (function (_super) {\n    __extends(FirebaseMessagingError, _super);\n    function FirebaseMessagingError(info, message) {\n        var _this = \n        // Override default message if custom message provided.\n        _super.call(this, 'messaging', info.code, message || info.message) || this;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        _this.__proto__ = FirebaseMessagingError.prototype;\n        return _this;\n    }\n    /**\n     * Creates the developer-facing error corresponding to the backend error code.\n     *\n     * @param {string} serverErrorCode The server error code.\n     * @param {string} [message] The error message. The default message is used\n     *     if not provided.\n     * @param {object} [rawServerResponse] The error's raw server response.\n     * @return {FirebaseMessagingError} The corresponding developer-facing error.\n     */\n    FirebaseMessagingError.fromServerError = function (serverErrorCode, message, rawServerResponse) {\n        // If not found, default to unknown error.\n        var clientCodeKey = 'UNKNOWN_ERROR';\n        if (serverErrorCode && serverErrorCode in MESSAGING_SERVER_TO_CLIENT_CODE) {\n            clientCodeKey = MESSAGING_SERVER_TO_CLIENT_CODE[serverErrorCode];\n        }\n        var error = deep_copy_1.deepCopy(MessagingClientErrorCode[clientCodeKey]);\n        error.message = message || error.message;\n        if (clientCodeKey === 'UNKNOWN_ERROR' && typeof rawServerResponse !== 'undefined') {\n            try {\n                error.message += \" Raw server response: \\\"\" + JSON.stringify(rawServerResponse) + \"\\\"\";\n            }\n            catch (e) {\n                // Ignore JSON parsing error.\n            }\n        }\n        return new FirebaseMessagingError(error);\n    };\n    FirebaseMessagingError.fromTopicManagementServerError = function (serverErrorCode, message, rawServerResponse) {\n        // If not found, default to unknown error.\n        var clientCodeKey = TOPIC_MGT_SERVER_TO_CLIENT_CODE[serverErrorCode] || 'UNKNOWN_ERROR';\n        var error = deep_copy_1.deepCopy(MessagingClientErrorCode[clientCodeKey]);\n        error.message = message || error.message;\n        if (clientCodeKey === 'UNKNOWN_ERROR' && typeof rawServerResponse !== 'undefined') {\n            try {\n                error.message += \" Raw server response: \\\"\" + JSON.stringify(rawServerResponse) + \"\\\"\";\n            }\n            catch (e) {\n                // Ignore JSON parsing error.\n            }\n        }\n        return new FirebaseMessagingError(error);\n    };\n    return FirebaseMessagingError;\n}(PrefixedFirebaseError));\nexports.FirebaseMessagingError = FirebaseMessagingError;\n/**\n * Firebase project management error code structure. This extends PrefixedFirebaseError.\n *\n * @param {ProjectManagementErrorCode} code The error code.\n * @param {string} message The error message.\n * @constructor\n */\nvar FirebaseProjectManagementError = /** @class */ (function (_super) {\n    __extends(FirebaseProjectManagementError, _super);\n    function FirebaseProjectManagementError(code, message) {\n        var _this = _super.call(this, 'project-management', code, message) || this;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        _this.__proto__ = FirebaseProjectManagementError.prototype;\n        return _this;\n    }\n    return FirebaseProjectManagementError;\n}(PrefixedFirebaseError));\nexports.FirebaseProjectManagementError = FirebaseProjectManagementError;\n/**\n * App client error codes and their default messages.\n */\nvar AppErrorCodes = /** @class */ (function () {\n    function AppErrorCodes() {\n    }\n    AppErrorCodes.APP_DELETED = 'app-deleted';\n    AppErrorCodes.DUPLICATE_APP = 'duplicate-app';\n    AppErrorCodes.INVALID_ARGUMENT = 'invalid-argument';\n    AppErrorCodes.INTERNAL_ERROR = 'internal-error';\n    AppErrorCodes.INVALID_APP_NAME = 'invalid-app-name';\n    AppErrorCodes.INVALID_APP_OPTIONS = 'invalid-app-options';\n    AppErrorCodes.INVALID_CREDENTIAL = 'invalid-credential';\n    AppErrorCodes.NETWORK_ERROR = 'network-error';\n    AppErrorCodes.NETWORK_TIMEOUT = 'network-timeout';\n    AppErrorCodes.NO_APP = 'no-app';\n    AppErrorCodes.UNABLE_TO_PARSE_RESPONSE = 'unable-to-parse-response';\n    return AppErrorCodes;\n}());\nexports.AppErrorCodes = AppErrorCodes;\n/**\n * Auth client error codes and their default messages.\n */\nvar AuthClientErrorCode = /** @class */ (function () {\n    function AuthClientErrorCode() {\n    }\n    AuthClientErrorCode.BILLING_NOT_ENABLED = {\n        code: 'billing-not-enabled',\n        message: 'Feature requires billing to be enabled.',\n    };\n    AuthClientErrorCode.CLAIMS_TOO_LARGE = {\n        code: 'claims-too-large',\n        message: 'Developer claims maximum payload size exceeded.',\n    };\n    AuthClientErrorCode.CONFIGURATION_EXISTS = {\n        code: 'configuration-exists',\n        message: 'A configuration already exists with the provided identifier.',\n    };\n    AuthClientErrorCode.CONFIGURATION_NOT_FOUND = {\n        code: 'configuration-not-found',\n        message: 'There is no configuration corresponding to the provided identifier.',\n    };\n    AuthClientErrorCode.ID_TOKEN_EXPIRED = {\n        code: 'id-token-expired',\n        message: 'The provided Firebase ID token is expired.',\n    };\n    AuthClientErrorCode.INVALID_ARGUMENT = {\n        code: 'argument-error',\n        message: 'Invalid argument provided.',\n    };\n    AuthClientErrorCode.INVALID_CONFIG = {\n        code: 'invalid-config',\n        message: 'The provided configuration is invalid.',\n    };\n    AuthClientErrorCode.EMAIL_ALREADY_EXISTS = {\n        code: 'email-already-exists',\n        message: 'The email address is already in use by another account.',\n    };\n    AuthClientErrorCode.FORBIDDEN_CLAIM = {\n        code: 'reserved-claim',\n        message: 'The specified developer claim is reserved and cannot be specified.',\n    };\n    AuthClientErrorCode.INVALID_ID_TOKEN = {\n        code: 'invalid-id-token',\n        message: 'The provided ID token is not a valid Firebase ID token.',\n    };\n    AuthClientErrorCode.ID_TOKEN_REVOKED = {\n        code: 'id-token-revoked',\n        message: 'The Firebase ID token has been revoked.',\n    };\n    AuthClientErrorCode.INTERNAL_ERROR = {\n        code: 'internal-error',\n        message: 'An internal error has occurred.',\n    };\n    AuthClientErrorCode.INVALID_CLAIMS = {\n        code: 'invalid-claims',\n        message: 'The provided custom claim attributes are invalid.',\n    };\n    AuthClientErrorCode.INVALID_CONTINUE_URI = {\n        code: 'invalid-continue-uri',\n        message: 'The continue URL must be a valid URL string.',\n    };\n    AuthClientErrorCode.INVALID_CREATION_TIME = {\n        code: 'invalid-creation-time',\n        message: 'The creation time must be a valid UTC date string.',\n    };\n    AuthClientErrorCode.INVALID_CREDENTIAL = {\n        code: 'invalid-credential',\n        message: 'Invalid credential object provided.',\n    };\n    AuthClientErrorCode.INVALID_DISABLED_FIELD = {\n        code: 'invalid-disabled-field',\n        message: 'The disabled field must be a boolean.',\n    };\n    AuthClientErrorCode.INVALID_DISPLAY_NAME = {\n        code: 'invalid-display-name',\n        message: 'The displayName field must be a valid string.',\n    };\n    AuthClientErrorCode.INVALID_DYNAMIC_LINK_DOMAIN = {\n        code: 'invalid-dynamic-link-domain',\n        message: 'The provided dynamic link domain is not configured or authorized ' +\n            'for the current project.',\n    };\n    AuthClientErrorCode.INVALID_EMAIL_VERIFIED = {\n        code: 'invalid-email-verified',\n        message: 'The emailVerified field must be a boolean.',\n    };\n    AuthClientErrorCode.INVALID_EMAIL = {\n        code: 'invalid-email',\n        message: 'The email address is improperly formatted.',\n    };\n    AuthClientErrorCode.INVALID_HASH_ALGORITHM = {\n        code: 'invalid-hash-algorithm',\n        message: 'The hash algorithm must match one of the strings in the list of ' +\n            'supported algorithms.',\n    };\n    AuthClientErrorCode.INVALID_HASH_BLOCK_SIZE = {\n        code: 'invalid-hash-block-size',\n        message: 'The hash block size must be a valid number.',\n    };\n    AuthClientErrorCode.INVALID_HASH_DERIVED_KEY_LENGTH = {\n        code: 'invalid-hash-derived-key-length',\n        message: 'The hash derived key length must be a valid number.',\n    };\n    AuthClientErrorCode.INVALID_HASH_KEY = {\n        code: 'invalid-hash-key',\n        message: 'The hash key must a valid byte buffer.',\n    };\n    AuthClientErrorCode.INVALID_HASH_MEMORY_COST = {\n        code: 'invalid-hash-memory-cost',\n        message: 'The hash memory cost must be a valid number.',\n    };\n    AuthClientErrorCode.INVALID_HASH_PARALLELIZATION = {\n        code: 'invalid-hash-parallelization',\n        message: 'The hash parallelization must be a valid number.',\n    };\n    AuthClientErrorCode.INVALID_HASH_ROUNDS = {\n        code: 'invalid-hash-rounds',\n        message: 'The hash rounds must be a valid number.',\n    };\n    AuthClientErrorCode.INVALID_HASH_SALT_SEPARATOR = {\n        code: 'invalid-hash-salt-separator',\n        message: 'The hashing algorithm salt separator field must be a valid byte buffer.',\n    };\n    AuthClientErrorCode.INVALID_LAST_SIGN_IN_TIME = {\n        code: 'invalid-last-sign-in-time',\n        message: 'The last sign-in time must be a valid UTC date string.',\n    };\n    AuthClientErrorCode.INVALID_NAME = {\n        code: 'invalid-name',\n        message: 'The resource name provided is invalid.',\n    };\n    AuthClientErrorCode.INVALID_OAUTH_CLIENT_ID = {\n        code: 'invalid-oauth-client-id',\n        message: 'The provided OAuth client ID is invalid.',\n    };\n    AuthClientErrorCode.INVALID_PAGE_TOKEN = {\n        code: 'invalid-page-token',\n        message: 'The page token must be a valid non-empty string.',\n    };\n    AuthClientErrorCode.INVALID_PASSWORD = {\n        code: 'invalid-password',\n        message: 'The password must be a string with at least 6 characters.',\n    };\n    AuthClientErrorCode.INVALID_PASSWORD_HASH = {\n        code: 'invalid-password-hash',\n        message: 'The password hash must be a valid byte buffer.',\n    };\n    AuthClientErrorCode.INVALID_PASSWORD_SALT = {\n        code: 'invalid-password-salt',\n        message: 'The password salt must be a valid byte buffer.',\n    };\n    AuthClientErrorCode.INVALID_PHONE_NUMBER = {\n        code: 'invalid-phone-number',\n        message: 'The phone number must be a non-empty E.164 standard compliant identifier ' +\n            'string.',\n    };\n    AuthClientErrorCode.INVALID_PHOTO_URL = {\n        code: 'invalid-photo-url',\n        message: 'The photoURL field must be a valid URL.',\n    };\n    AuthClientErrorCode.INVALID_PROJECT_ID = {\n        code: 'invalid-project-id',\n        message: 'Invalid parent project. Either parent project doesn\\'t exist or didn\\'t enable multi-tenancy.',\n    };\n    AuthClientErrorCode.INVALID_PROVIDER_DATA = {\n        code: 'invalid-provider-data',\n        message: 'The providerData must be a valid array of UserInfo objects.',\n    };\n    AuthClientErrorCode.INVALID_PROVIDER_ID = {\n        code: 'invalid-provider-id',\n        message: 'The providerId must be a valid supported provider identifier string.',\n    };\n    AuthClientErrorCode.INVALID_SESSION_COOKIE_DURATION = {\n        code: 'invalid-session-cookie-duration',\n        message: 'The session cookie duration must be a valid number in milliseconds ' +\n            'between 5 minutes and 2 weeks.',\n    };\n    AuthClientErrorCode.INVALID_TENANT_ID = {\n        code: 'invalid-tenant-id',\n        message: 'The tenant ID must be a valid non-empty string.',\n    };\n    AuthClientErrorCode.INVALID_TENANT_TYPE = {\n        code: 'invalid-tenant-type',\n        message: 'Tenant type must be either \"full_service\" or \"lightweight\".',\n    };\n    AuthClientErrorCode.INVALID_UID = {\n        code: 'invalid-uid',\n        message: 'The uid must be a non-empty string with at most 128 characters.',\n    };\n    AuthClientErrorCode.INVALID_USER_IMPORT = {\n        code: 'invalid-user-import',\n        message: 'The user record to import is invalid.',\n    };\n    AuthClientErrorCode.INVALID_TOKENS_VALID_AFTER_TIME = {\n        code: 'invalid-tokens-valid-after-time',\n        message: 'The tokensValidAfterTime must be a valid UTC number in seconds.',\n    };\n    AuthClientErrorCode.MISMATCHING_TENANT_ID = {\n        code: 'mismatching-tenant-id',\n        message: 'User tenant ID does not match with the current TenantAwareAuth tenant ID.',\n    };\n    AuthClientErrorCode.MISSING_ANDROID_PACKAGE_NAME = {\n        code: 'missing-android-pkg-name',\n        message: 'An Android Package Name must be provided if the Android App is ' +\n            'required to be installed.',\n    };\n    AuthClientErrorCode.MISSING_CONFIG = {\n        code: 'missing-config',\n        message: 'The provided configuration is missing required attributes.',\n    };\n    AuthClientErrorCode.MISSING_CONTINUE_URI = {\n        code: 'missing-continue-uri',\n        message: 'A valid continue URL must be provided in the request.',\n    };\n    AuthClientErrorCode.MISSING_DISPLAY_NAME = {\n        code: 'missing-display-name',\n        message: 'The resource being created or edited is missing a valid display name.',\n    };\n    AuthClientErrorCode.MISSING_IOS_BUNDLE_ID = {\n        code: 'missing-ios-bundle-id',\n        message: 'The request is missing an iOS Bundle ID.',\n    };\n    AuthClientErrorCode.MISSING_ISSUER = {\n        code: 'missing-issuer',\n        message: 'The OAuth/OIDC configuration issuer must not be empty.',\n    };\n    AuthClientErrorCode.MISSING_HASH_ALGORITHM = {\n        code: 'missing-hash-algorithm',\n        message: 'Importing users with password hashes requires that the hashing ' +\n            'algorithm and its parameters be provided.',\n    };\n    AuthClientErrorCode.MISSING_OAUTH_CLIENT_ID = {\n        code: 'missing-oauth-client-id',\n        message: 'The OAuth/OIDC configuration client ID must not be empty.',\n    };\n    AuthClientErrorCode.MISSING_PROVIDER_ID = {\n        code: 'missing-provider-id',\n        message: 'A valid provider ID must be provided in the request.',\n    };\n    AuthClientErrorCode.MISSING_SAML_RELYING_PARTY_CONFIG = {\n        code: 'missing-saml-relying-party-config',\n        message: 'The SAML configuration provided is missing a relying party configuration.',\n    };\n    AuthClientErrorCode.MAXIMUM_USER_COUNT_EXCEEDED = {\n        code: 'maximum-user-count-exceeded',\n        message: 'The maximum allowed number of users to import has been exceeded.',\n    };\n    AuthClientErrorCode.MISSING_UID = {\n        code: 'missing-uid',\n        message: 'A uid identifier is required for the current operation.',\n    };\n    AuthClientErrorCode.OPERATION_NOT_ALLOWED = {\n        code: 'operation-not-allowed',\n        message: 'The given sign-in provider is disabled for this Firebase project. ' +\n            'Enable it in the Firebase console, under the sign-in method tab of the ' +\n            'Auth section.',\n    };\n    AuthClientErrorCode.PHONE_NUMBER_ALREADY_EXISTS = {\n        code: 'phone-number-already-exists',\n        message: 'The user with the provided phone number already exists.',\n    };\n    AuthClientErrorCode.PROJECT_NOT_FOUND = {\n        code: 'project-not-found',\n        message: 'No Firebase project was found for the provided credential.',\n    };\n    AuthClientErrorCode.INSUFFICIENT_PERMISSION = {\n        code: 'insufficient-permission',\n        message: 'Credential implementation provided to initializeApp() via the \"credential\" property ' +\n            'has insufficient permission to access the requested resource. See ' +\n            'https://firebase.google.com/docs/admin/setup for details on how to authenticate this SDK ' +\n            'with appropriate permissions.',\n    };\n    AuthClientErrorCode.QUOTA_EXCEEDED = {\n        code: 'quota-exceeded',\n        message: 'The project quota for the specified operation has been exceeded.',\n    };\n    AuthClientErrorCode.SESSION_COOKIE_EXPIRED = {\n        code: 'session-cookie-expired',\n        message: 'The Firebase session cookie is expired.',\n    };\n    AuthClientErrorCode.SESSION_COOKIE_REVOKED = {\n        code: 'session-cookie-revoked',\n        message: 'The Firebase session cookie has been revoked.',\n    };\n    AuthClientErrorCode.TENANT_NOT_FOUND = {\n        code: 'tenant-not-found',\n        message: 'There is no tenant corresponding to the provided identifier.',\n    };\n    AuthClientErrorCode.UID_ALREADY_EXISTS = {\n        code: 'uid-already-exists',\n        message: 'The user with the provided uid already exists.',\n    };\n    AuthClientErrorCode.UNAUTHORIZED_DOMAIN = {\n        code: 'unauthorized-continue-uri',\n        message: 'The domain of the continue URL is not whitelisted. Whitelist the domain in the ' +\n            'Firebase console.',\n    };\n    AuthClientErrorCode.UNSUPPORTED_TENANT_OPERATION = {\n        code: 'unsupported-tenant-operation',\n        message: 'This operation is not supported in a multi-tenant context.',\n    };\n    AuthClientErrorCode.USER_NOT_FOUND = {\n        code: 'user-not-found',\n        message: 'There is no user record corresponding to the provided identifier.',\n    };\n    AuthClientErrorCode.NOT_FOUND = {\n        code: 'not-found',\n        message: 'The requested resource was not found.',\n    };\n    return AuthClientErrorCode;\n}());\nexports.AuthClientErrorCode = AuthClientErrorCode;\n/**\n * Messaging client error codes and their default messages.\n */\nvar MessagingClientErrorCode = /** @class */ (function () {\n    function MessagingClientErrorCode() {\n    }\n    MessagingClientErrorCode.INVALID_ARGUMENT = {\n        code: 'invalid-argument',\n        message: 'Invalid argument provided.',\n    };\n    MessagingClientErrorCode.INVALID_RECIPIENT = {\n        code: 'invalid-recipient',\n        message: 'Invalid message recipient provided.',\n    };\n    MessagingClientErrorCode.INVALID_PAYLOAD = {\n        code: 'invalid-payload',\n        message: 'Invalid message payload provided.',\n    };\n    MessagingClientErrorCode.INVALID_DATA_PAYLOAD_KEY = {\n        code: 'invalid-data-payload-key',\n        message: 'The data message payload contains an invalid key. See the reference documentation ' +\n            'for the DataMessagePayload type for restricted keys.',\n    };\n    MessagingClientErrorCode.PAYLOAD_SIZE_LIMIT_EXCEEDED = {\n        code: 'payload-size-limit-exceeded',\n        message: 'The provided message payload exceeds the FCM size limits. See the error documentation ' +\n            'for more details.',\n    };\n    MessagingClientErrorCode.INVALID_OPTIONS = {\n        code: 'invalid-options',\n        message: 'Invalid message options provided.',\n    };\n    MessagingClientErrorCode.INVALID_REGISTRATION_TOKEN = {\n        code: 'invalid-registration-token',\n        message: 'Invalid registration token provided. Make sure it matches the registration token ' +\n            'the client app receives from registering with FCM.',\n    };\n    MessagingClientErrorCode.REGISTRATION_TOKEN_NOT_REGISTERED = {\n        code: 'registration-token-not-registered',\n        message: 'The provided registration token is not registered. A previously valid registration ' +\n            'token can be unregistered for a variety of reasons. See the error documentation for more ' +\n            'details. Remove this registration token and stop using it to send messages.',\n    };\n    MessagingClientErrorCode.MISMATCHED_CREDENTIAL = {\n        code: 'mismatched-credential',\n        message: 'The credential used to authenticate this SDK does not have permission to send ' +\n            'messages to the device corresponding to the provided registration token. Make sure the ' +\n            'credential and registration token both belong to the same Firebase project.',\n    };\n    MessagingClientErrorCode.INVALID_PACKAGE_NAME = {\n        code: 'invalid-package-name',\n        message: 'The message was addressed to a registration token whose package name does not match ' +\n            'the provided \"restrictedPackageName\" option.',\n    };\n    MessagingClientErrorCode.DEVICE_MESSAGE_RATE_EXCEEDED = {\n        code: 'device-message-rate-exceeded',\n        message: 'The rate of messages to a particular device is too high. Reduce the number of ' +\n            'messages sent to this device and do not immediately retry sending to this device.',\n    };\n    MessagingClientErrorCode.TOPICS_MESSAGE_RATE_EXCEEDED = {\n        code: 'topics-message-rate-exceeded',\n        message: 'The rate of messages to subscribers to a particular topic is too high. Reduce the ' +\n            'number of messages sent for this topic, and do not immediately retry sending to this topic.',\n    };\n    MessagingClientErrorCode.MESSAGE_RATE_EXCEEDED = {\n        code: 'message-rate-exceeded',\n        message: 'Sending limit exceeded for the message target.',\n    };\n    MessagingClientErrorCode.THIRD_PARTY_AUTH_ERROR = {\n        code: 'third-party-auth-error',\n        message: 'A message targeted to an iOS device could not be sent because the required APNs ' +\n            'SSL certificate was not uploaded or has expired. Check the validity of your development ' +\n            'and production certificates.',\n    };\n    MessagingClientErrorCode.TOO_MANY_TOPICS = {\n        code: 'too-many-topics',\n        message: 'The maximum number of topics the provided registration token can be subscribed to ' +\n            'has been exceeded.',\n    };\n    MessagingClientErrorCode.AUTHENTICATION_ERROR = {\n        code: 'authentication-error',\n        message: 'An error occurred when trying to authenticate to the FCM servers. Make sure the ' +\n            'credential used to authenticate this SDK has the proper permissions. See ' +\n            'https://firebase.google.com/docs/admin/setup for setup instructions.',\n    };\n    MessagingClientErrorCode.SERVER_UNAVAILABLE = {\n        code: 'server-unavailable',\n        message: 'The FCM server could not process the request in time. See the error documentation ' +\n            'for more details.',\n    };\n    MessagingClientErrorCode.INTERNAL_ERROR = {\n        code: 'internal-error',\n        message: 'An internal error has occurred. Please retry the request.',\n    };\n    MessagingClientErrorCode.UNKNOWN_ERROR = {\n        code: 'unknown-error',\n        message: 'An unknown server error was returned.',\n    };\n    return MessagingClientErrorCode;\n}());\nexports.MessagingClientErrorCode = MessagingClientErrorCode;\nvar InstanceIdClientErrorCode = /** @class */ (function () {\n    function InstanceIdClientErrorCode() {\n    }\n    InstanceIdClientErrorCode.INVALID_ARGUMENT = {\n        code: 'invalid-argument',\n        message: 'Invalid argument provided.',\n    };\n    InstanceIdClientErrorCode.INVALID_PROJECT_ID = {\n        code: 'invalid-project-id',\n        message: 'Invalid project ID provided.',\n    };\n    InstanceIdClientErrorCode.INVALID_INSTANCE_ID = {\n        code: 'invalid-instance-id',\n        message: 'Invalid instance ID provided.',\n    };\n    InstanceIdClientErrorCode.API_ERROR = {\n        code: 'api-error',\n        message: 'Instance ID API call failed.',\n    };\n    return InstanceIdClientErrorCode;\n}());\nexports.InstanceIdClientErrorCode = InstanceIdClientErrorCode;\n/** @const {ServerToClientCode} Auth server to client enum error codes. */\nvar AUTH_SERVER_TO_CLIENT_CODE = {\n    // Feature being configured or used requires a billing account.\n    BILLING_NOT_ENABLED: 'BILLING_NOT_ENABLED',\n    // Claims payload is too large.\n    CLAIMS_TOO_LARGE: 'CLAIMS_TOO_LARGE',\n    // Configuration being added already exists.\n    CONFIGURATION_EXISTS: 'CONFIGURATION_EXISTS',\n    // Configuration not found.\n    CONFIGURATION_NOT_FOUND: 'CONFIGURATION_NOT_FOUND',\n    // Provided credential has insufficient permissions.\n    INSUFFICIENT_PERMISSION: 'INSUFFICIENT_PERMISSION',\n    // Provided configuration has invalid fields.\n    INVALID_CONFIG: 'INVALID_CONFIG',\n    // Provided configuration identifier is invalid.\n    INVALID_CONFIG_ID: 'INVALID_PROVIDER_ID',\n    // ActionCodeSettings missing continue URL.\n    INVALID_CONTINUE_URI: 'INVALID_CONTINUE_URI',\n    // Dynamic link domain in provided ActionCodeSettings is not authorized.\n    INVALID_DYNAMIC_LINK_DOMAIN: 'INVALID_DYNAMIC_LINK_DOMAIN',\n    // uploadAccount provides an email that already exists.\n    DUPLICATE_EMAIL: 'EMAIL_ALREADY_EXISTS',\n    // uploadAccount provides a localId that already exists.\n    DUPLICATE_LOCAL_ID: 'UID_ALREADY_EXISTS',\n    // setAccountInfo email already exists.\n    EMAIL_EXISTS: 'EMAIL_ALREADY_EXISTS',\n    // Reserved claim name.\n    FORBIDDEN_CLAIM: 'FORBIDDEN_CLAIM',\n    // Invalid claims provided.\n    INVALID_CLAIMS: 'INVALID_CLAIMS',\n    // Invalid session cookie duration.\n    INVALID_DURATION: 'INVALID_SESSION_COOKIE_DURATION',\n    // Invalid email provided.\n    INVALID_EMAIL: 'INVALID_EMAIL',\n    // Invalid tenant display name. This can be thrown on CreateTenant and UpdateTenant.\n    INVALID_DISPLAY_NAME: 'INVALID_DISPLAY_NAME',\n    // Invalid ID token provided.\n    INVALID_ID_TOKEN: 'INVALID_ID_TOKEN',\n    // Invalid tenant/parent resource name.\n    INVALID_NAME: 'INVALID_NAME',\n    // OIDC configuration has an invalid OAuth client ID.\n    INVALID_OAUTH_CLIENT_ID: 'INVALID_OAUTH_CLIENT_ID',\n    // Invalid page token.\n    INVALID_PAGE_SELECTION: 'INVALID_PAGE_TOKEN',\n    // Invalid phone number.\n    INVALID_PHONE_NUMBER: 'INVALID_PHONE_NUMBER',\n    // Invalid agent project. Either agent project doesn't exist or didn't enable multi-tenancy.\n    INVALID_PROJECT_ID: 'INVALID_PROJECT_ID',\n    // Invalid provider ID.\n    INVALID_PROVIDER_ID: 'INVALID_PROVIDER_ID',\n    // Invalid service account.\n    INVALID_SERVICE_ACCOUNT: 'INVALID_SERVICE_ACCOUNT',\n    // Invalid tenant type.\n    INVALID_TENANT_TYPE: 'INVALID_TENANT_TYPE',\n    // Missing Android package name.\n    MISSING_ANDROID_PACKAGE_NAME: 'MISSING_ANDROID_PACKAGE_NAME',\n    // Missing configuration.\n    MISSING_CONFIG: 'MISSING_CONFIG',\n    // Missing configuration identifier.\n    MISSING_CONFIG_ID: 'MISSING_PROVIDER_ID',\n    // Missing tenant display name: This can be thrown on CreateTenant and UpdateTenant.\n    MISSING_DISPLAY_NAME: 'MISSING_DISPLAY_NAME',\n    // Missing iOS bundle ID.\n    MISSING_IOS_BUNDLE_ID: 'MISSING_IOS_BUNDLE_ID',\n    // Missing OIDC issuer.\n    MISSING_ISSUER: 'MISSING_ISSUER',\n    // No localId provided (deleteAccount missing localId).\n    MISSING_LOCAL_ID: 'MISSING_UID',\n    // OIDC configuration is missing an OAuth client ID.\n    MISSING_OAUTH_CLIENT_ID: 'MISSING_OAUTH_CLIENT_ID',\n    // Missing provider ID.\n    MISSING_PROVIDER_ID: 'MISSING_PROVIDER_ID',\n    // Missing SAML RP config.\n    MISSING_SAML_RELYING_PARTY_CONFIG: 'MISSING_SAML_RELYING_PARTY_CONFIG',\n    // Empty user list in uploadAccount.\n    MISSING_USER_ACCOUNT: 'MISSING_UID',\n    // Password auth disabled in console.\n    OPERATION_NOT_ALLOWED: 'OPERATION_NOT_ALLOWED',\n    // Provided credential has insufficient permissions.\n    PERMISSION_DENIED: 'INSUFFICIENT_PERMISSION',\n    // Phone number already exists.\n    PHONE_NUMBER_EXISTS: 'PHONE_NUMBER_ALREADY_EXISTS',\n    // Project not found.\n    PROJECT_NOT_FOUND: 'PROJECT_NOT_FOUND',\n    // In multi-tenancy context: project creation quota exceeded.\n    QUOTA_EXCEEDED: 'QUOTA_EXCEEDED',\n    // Tenant not found.\n    TENANT_NOT_FOUND: 'TENANT_NOT_FOUND',\n    // Tenant ID mismatch.\n    TENANT_ID_MISMATCH: 'MISMATCHING_TENANT_ID',\n    // Token expired error.\n    TOKEN_EXPIRED: 'ID_TOKEN_EXPIRED',\n    // Continue URL provided in ActionCodeSettings has a domain that is not whitelisted.\n    UNAUTHORIZED_DOMAIN: 'UNAUTHORIZED_DOMAIN',\n    // Operation is not supported in a multi-tenant context.\n    UNSUPPORTED_TENANT_OPERATION: 'UNSUPPORTED_TENANT_OPERATION',\n    // User on which action is to be performed is not found.\n    USER_NOT_FOUND: 'USER_NOT_FOUND',\n    // Password provided is too weak.\n    WEAK_PASSWORD: 'INVALID_PASSWORD',\n};\n/** @const {ServerToClientCode} Messaging server to client enum error codes. */\nvar MESSAGING_SERVER_TO_CLIENT_CODE = {\n    /* GENERIC ERRORS */\n    // Generic invalid message parameter provided.\n    InvalidParameters: 'INVALID_ARGUMENT',\n    // Mismatched sender ID.\n    MismatchSenderId: 'MISMATCHED_CREDENTIAL',\n    // FCM server unavailable.\n    Unavailable: 'SERVER_UNAVAILABLE',\n    // FCM server internal error.\n    InternalServerError: 'INTERNAL_ERROR',\n    /* SEND ERRORS */\n    // Invalid registration token format.\n    InvalidRegistration: 'INVALID_REGISTRATION_TOKEN',\n    // Registration token is not registered.\n    NotRegistered: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n    // Registration token does not match restricted package name.\n    InvalidPackageName: 'INVALID_PACKAGE_NAME',\n    // Message payload size limit exceeded.\n    MessageTooBig: 'PAYLOAD_SIZE_LIMIT_EXCEEDED',\n    // Invalid key in the data message payload.\n    InvalidDataKey: 'INVALID_DATA_PAYLOAD_KEY',\n    // Invalid time to live option.\n    InvalidTtl: 'INVALID_OPTIONS',\n    // Device message rate exceeded.\n    DeviceMessageRateExceeded: 'DEVICE_MESSAGE_RATE_EXCEEDED',\n    // Topics message rate exceeded.\n    TopicsMessageRateExceeded: 'TOPICS_MESSAGE_RATE_EXCEEDED',\n    // Invalid APNs credentials.\n    InvalidApnsCredential: 'THIRD_PARTY_AUTH_ERROR',\n    /* FCM v1 canonical error codes */\n    NOT_FOUND: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n    PERMISSION_DENIED: 'MISMATCHED_CREDENTIAL',\n    RESOURCE_EXHAUSTED: 'MESSAGE_RATE_EXCEEDED',\n    UNAUTHENTICATED: 'THIRD_PARTY_AUTH_ERROR',\n    /* FCM v1 new error codes */\n    APNS_AUTH_ERROR: 'THIRD_PARTY_AUTH_ERROR',\n    INTERNAL: 'INTERNAL_ERROR',\n    INVALID_ARGUMENT: 'INVALID_ARGUMENT',\n    QUOTA_EXCEEDED: 'MESSAGE_RATE_EXCEEDED',\n    SENDER_ID_MISMATCH: 'MISMATCHED_CREDENTIAL',\n    THIRD_PARTY_AUTH_ERROR: 'THIRD_PARTY_AUTH_ERROR',\n    UNAVAILABLE: 'SERVER_UNAVAILABLE',\n    UNREGISTERED: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n    UNSPECIFIED_ERROR: 'UNKNOWN_ERROR',\n};\n/** @const {ServerToClientCode} Topic management (IID) server to client enum error codes. */\nvar TOPIC_MGT_SERVER_TO_CLIENT_CODE = {\n    /* TOPIC SUBSCRIPTION MANAGEMENT ERRORS */\n    NOT_FOUND: 'REGISTRATION_TOKEN_NOT_REGISTERED',\n    INVALID_ARGUMENT: 'INVALID_REGISTRATION_TOKEN',\n    TOO_MANY_TOPICS: 'TOO_MANY_TOPICS',\n    RESOURCE_EXHAUSTED: 'TOO_MANY_TOPICS',\n    PERMISSION_DENIED: 'AUTHENTICATION_ERROR',\n    DEADLINE_EXCEEDED: 'SERVER_UNAVAILABLE',\n    INTERNAL: 'INTERNAL_ERROR',\n    UNKNOWN: 'UNKNOWN_ERROR',\n};\n"]},"metadata":{},"sourceType":"script"}