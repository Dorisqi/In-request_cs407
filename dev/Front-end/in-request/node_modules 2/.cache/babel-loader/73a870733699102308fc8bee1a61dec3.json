{"ast":null,"code":"import { rgba } from 'polished';\nimport { css } from 'styled-components';\nimport { deepFreeze } from '../utils/object';\nimport { normalizeColor } from '../utils/colors';\nvar accentColors = ['#FD6FFF', '#60EB9F', '#60EBE1', '#FFCA58'];\nvar neutralColors = ['#EB6060', '#01C781', '#6095EB', '#FFB200'];\nvar statusColors = {\n  critical: '#FF3333',\n  error: '#FF3333',\n  warning: '#F7E464',\n  ok: '#7DD892',\n  unknown: '#a8a8a8',\n  disabled: '#a8a8a8'\n};\nvar backgroundColor = '#111111';\nvar colors = {\n  active: rgba(102, 102, 102, 0.5),\n  background: backgroundColor,\n  black: '#000000',\n  brand: '#FD6FFF',\n  control: {\n    dark: '#FFCA58',\n    light: '#403216'\n  },\n  focus: '#FFCA58',\n  icon: {\n    dark: '#f8f8f8',\n    light: '#666666'\n  },\n  placeholder: '#AAAAAA',\n  text: {\n    dark: '#eeeeee',\n    light: '#444444'\n  },\n  white: '#FFFFFF'\n};\n\nvar colorArray = function colorArray(array, prefix) {\n  return array.forEach(function (color, index) {\n    colors[prefix + \"-\" + (index + 1)] = color;\n  });\n};\n\ncolorArray(accentColors, 'accent');\ncolorArray(neutralColors, 'neutral');\nObject.keys(statusColors).forEach(function (color) {\n  colors[\"status-\" + color] = statusColors[color];\n});\nexport var dark = deepFreeze({\n  global: {\n    colors: colors,\n    drop: {\n      background: '#333333'\n    },\n    focus: {\n      border: {\n        color: css([\"\", \";\"], function (props) {\n          return normalizeColor('focus', props.theme);\n        }),\n        width: '2px'\n      }\n    },\n    font: {\n      family: 'Arial'\n    },\n    input: {\n      weight: 700\n    }\n  },\n  anchor: {\n    color: 'control'\n  },\n  layer: {\n    background: backgroundColor,\n    overlay: {\n      background: rgba(48, 48, 48, 0.5)\n    }\n  }\n});","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/grommet/es6/themes/dark.js"],"names":["rgba","css","deepFreeze","normalizeColor","accentColors","neutralColors","statusColors","critical","error","warning","ok","unknown","disabled","backgroundColor","colors","active","background","black","brand","control","dark","light","focus","icon","placeholder","text","white","colorArray","array","prefix","forEach","color","index","Object","keys","global","drop","border","props","theme","width","font","family","input","weight","anchor","layer","overlay"],"mappings":"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","sourcesContent":["import { rgba } from 'polished';\nimport { css } from 'styled-components';\nimport { deepFreeze } from '../utils/object';\nimport { normalizeColor } from '../utils/colors';\nvar accentColors = ['#FD6FFF', '#60EB9F', '#60EBE1', '#FFCA58'];\nvar neutralColors = ['#EB6060', '#01C781', '#6095EB', '#FFB200'];\nvar statusColors = {\n  critical: '#FF3333',\n  error: '#FF3333',\n  warning: '#F7E464',\n  ok: '#7DD892',\n  unknown: '#a8a8a8',\n  disabled: '#a8a8a8'\n};\nvar backgroundColor = '#111111';\nvar colors = {\n  active: rgba(102, 102, 102, 0.5),\n  background: backgroundColor,\n  black: '#000000',\n  brand: '#FD6FFF',\n  control: {\n    dark: '#FFCA58',\n    light: '#403216'\n  },\n  focus: '#FFCA58',\n  icon: {\n    dark: '#f8f8f8',\n    light: '#666666'\n  },\n  placeholder: '#AAAAAA',\n  text: {\n    dark: '#eeeeee',\n    light: '#444444'\n  },\n  white: '#FFFFFF'\n};\n\nvar colorArray = function colorArray(array, prefix) {\n  return array.forEach(function (color, index) {\n    colors[prefix + \"-\" + (index + 1)] = color;\n  });\n};\n\ncolorArray(accentColors, 'accent');\ncolorArray(neutralColors, 'neutral');\nObject.keys(statusColors).forEach(function (color) {\n  colors[\"status-\" + color] = statusColors[color];\n});\nexport var dark = deepFreeze({\n  global: {\n    colors: colors,\n    drop: {\n      background: '#333333'\n    },\n    focus: {\n      border: {\n        color: css([\"\", \";\"], function (props) {\n          return normalizeColor('focus', props.theme);\n        }),\n        width: '2px'\n      }\n    },\n    font: {\n      family: 'Arial'\n    },\n    input: {\n      weight: 700\n    }\n  },\n  anchor: {\n    color: 'control'\n  },\n  layer: {\n    background: backgroundColor,\n    overlay: {\n      background: rgba(48, 48, 48, 0.5)\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}