{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = descToTypescript;\n\nvar arrayFormat = function arrayFormat(array) {\n  return array.map(function (propType) {\n    return propTypeFormat(propType);\n  });\n};\n\nvar shapeFormat = function shapeFormat(shape) {\n  var props = Object.keys(shape).map(function (key) {\n    var value = shape[key];\n    var valueFormat = void 0;\n\n    if (value.type && (value.type === 'arrayOf' || value.type === 'oneOfType' || value.type === 'oneOf') && Array.isArray(value.args)) {\n      valueFormat = '' + propTypeFormat(value);\n    } else if (value.type === 'shape') {\n      valueFormat = '' + propTypeFormat(value);\n    } else {\n      valueFormat = propTypeFormat(value);\n    }\n\n    return '' + key + (value.reactDesc && value.reactDesc.required ? '' : '?') + ': ' + valueFormat;\n  });\n  return '{' + props.join(',') + '}';\n};\n\nvar propTypeFormat = function propTypeFormat(propType, joinWith) {\n  var result = void 0;\n\n  if (Array.isArray(propType)) {\n    result = arrayFormat(propType).join(joinWith);\n  } else if (typeof propType !== 'function' && propType.type) {\n    switch (propType.type) {\n      case 'array':\n        result = 'any[]';\n        break;\n\n      case 'arrayOf':\n        if (propType.args.type === 'oneOfType') {\n          result = '(' + propTypeFormat(propType.args, ' | ') + ')[]';\n        } else {\n          result = propTypeFormat(propType.args, '\\n') + '[]';\n        }\n\n        break;\n\n      case 'bool':\n        result = 'boolean';\n        break;\n\n      case 'func':\n        result = '((...args: any[]) => any)';\n        break;\n\n      case 'node':\n        result = 'React.ReactNode';\n        break;\n\n      case 'element':\n        result = 'JSX.Element';\n        break;\n\n      case 'instanceOf':\n        result = 'any';\n        break;\n\n      case 'symbol':\n        result = 'any';\n        break;\n\n      case 'objectOf':\n        result = '{ [key: string]: ' + propTypeFormat(propType.args) + ' }';\n        break;\n\n      case 'oneOf':\n        result = propType.args.map(function (a) {\n          return '\"' + a + '\"';\n        }).join(' | ');\n        break;\n\n      case 'oneOfType':\n        result = '' + propTypeFormat(propType.args, ' | ');\n        break;\n\n      case 'shape':\n        result = '' + shapeFormat(propType.args);\n        break;\n\n      default:\n        result = '' + propType.type;\n        break;\n    }\n  } else {\n    result = 'any';\n  }\n\n  return result;\n};\n\nvar propTypeAsTypescript = function propTypeAsTypescript(propType, propName) {\n  var documentation = _extends({}, propType.reactDesc, {\n    name: propName\n  });\n\n  documentation.format = propTypeFormat(propType);\n  return documentation;\n};\n\nfunction descToTypescript(component) {\n  var reactDesc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!component) {\n    throw new Error('react-desc: component is required');\n  }\n\n  var documentation = _extends({\n    name: component.displayName || component.name\n  }, reactDesc);\n\n  if (reactDesc) {\n    delete documentation.propTypes;\n\n    if (reactDesc.propTypes) {\n      var propTypes = [];\n      Object.keys(reactDesc.propTypes).forEach(function (propName) {\n        var propType = reactDesc.propTypes[propName];\n        propTypes.push(propTypeAsTypescript(propType, propName));\n      });\n\n      if (propTypes.length > 0) {\n        documentation.properties = propTypes;\n      }\n    }\n  }\n\n  return documentation;\n}","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/react-desc/lib/descToTypescript.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","descToTypescript","arrayFormat","array","map","propType","propTypeFormat","shapeFormat","shape","props","keys","valueFormat","type","Array","isArray","args","reactDesc","required","join","joinWith","result","a","propTypeAsTypescript","propName","documentation","name","format","component","undefined","Error","displayName","propTypes","forEach","push","properties"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGJ,MAAM,CAACK,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIV,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEAJ,OAAO,CAACa,OAAR,GAAkBC,gBAAlB;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC5C,SAAOA,KAAK,CAACC,GAAN,CAAU,UAAUC,QAAV,EAAoB;AACnC,WAAOC,cAAc,CAACD,QAAD,CAArB;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,IAAIE,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC5C,MAAIC,KAAK,GAAGxB,MAAM,CAACyB,IAAP,CAAYF,KAAZ,EAAmBJ,GAAnB,CAAuB,UAAUR,GAAV,EAAe;AAChD,QAAIR,KAAK,GAAGoB,KAAK,CAACZ,GAAD,CAAjB;AACA,QAAIe,WAAW,GAAG,KAAK,CAAvB;;AACA,QAAIvB,KAAK,CAACwB,IAAN,KAAexB,KAAK,CAACwB,IAAN,KAAe,SAAf,IAA4BxB,KAAK,CAACwB,IAAN,KAAe,WAA3C,IAA0DxB,KAAK,CAACwB,IAAN,KAAe,OAAxF,KAAoGC,KAAK,CAACC,OAAN,CAAc1B,KAAK,CAAC2B,IAApB,CAAxG,EAAmI;AACjIJ,MAAAA,WAAW,GAAG,KAAKL,cAAc,CAAClB,KAAD,CAAjC;AACD,KAFD,MAEO,IAAIA,KAAK,CAACwB,IAAN,KAAe,OAAnB,EAA4B;AACjCD,MAAAA,WAAW,GAAG,KAAKL,cAAc,CAAClB,KAAD,CAAjC;AACD,KAFM,MAEA;AACLuB,MAAAA,WAAW,GAAGL,cAAc,CAAClB,KAAD,CAA5B;AACD;;AACD,WAAO,KAAKQ,GAAL,IAAYR,KAAK,CAAC4B,SAAN,IAAmB5B,KAAK,CAAC4B,SAAN,CAAgBC,QAAnC,GAA8C,EAA9C,GAAmD,GAA/D,IAAsE,IAAtE,GAA6EN,WAApF;AACD,GAXW,CAAZ;AAYA,SAAO,MAAMF,KAAK,CAACS,IAAN,CAAW,GAAX,CAAN,GAAwB,GAA/B;AACD,CAdD;;AAgBA,IAAIZ,cAAc,GAAG,SAASA,cAAT,CAAwBD,QAAxB,EAAkCc,QAAlC,EAA4C;AAC/D,MAAIC,MAAM,GAAG,KAAK,CAAlB;;AACA,MAAIP,KAAK,CAACC,OAAN,CAAcT,QAAd,CAAJ,EAA6B;AAC3Be,IAAAA,MAAM,GAAGlB,WAAW,CAACG,QAAD,CAAX,CAAsBa,IAAtB,CAA2BC,QAA3B,CAAT;AACD,GAFD,MAEO,IAAI,OAAOd,QAAP,KAAoB,UAApB,IAAkCA,QAAQ,CAACO,IAA/C,EAAqD;AAC1D,YAAQP,QAAQ,CAACO,IAAjB;AACE,WAAK,OAAL;AACEQ,QAAAA,MAAM,GAAG,OAAT;AACA;;AACF,WAAK,SAAL;AACE,YAAIf,QAAQ,CAACU,IAAT,CAAcH,IAAd,KAAuB,WAA3B,EAAwC;AACtCQ,UAAAA,MAAM,GAAG,MAAMd,cAAc,CAACD,QAAQ,CAACU,IAAV,EAAgB,KAAhB,CAApB,GAA6C,KAAtD;AACD,SAFD,MAEO;AACLK,UAAAA,MAAM,GAAGd,cAAc,CAACD,QAAQ,CAACU,IAAV,EAAgB,IAAhB,CAAd,GAAsC,IAA/C;AACD;;AACD;;AACF,WAAK,MAAL;AACEK,QAAAA,MAAM,GAAG,SAAT;AACA;;AACF,WAAK,MAAL;AACEA,QAAAA,MAAM,GAAG,2BAAT;AACA;;AACF,WAAK,MAAL;AACEA,QAAAA,MAAM,GAAG,iBAAT;AACA;;AACF,WAAK,SAAL;AACEA,QAAAA,MAAM,GAAG,aAAT;AACA;;AACF,WAAK,YAAL;AACEA,QAAAA,MAAM,GAAG,KAAT;AACA;;AACF,WAAK,QAAL;AACEA,QAAAA,MAAM,GAAG,KAAT;AACA;;AACF,WAAK,UAAL;AACEA,QAAAA,MAAM,GAAG,sBAAsBd,cAAc,CAACD,QAAQ,CAACU,IAAV,CAApC,GAAsD,IAA/D;AACA;;AACF,WAAK,OAAL;AACEK,QAAAA,MAAM,GAAGf,QAAQ,CAACU,IAAT,CAAcX,GAAd,CAAkB,UAAUiB,CAAV,EAAa;AACtC,iBAAO,MAAMA,CAAN,GAAU,GAAjB;AACD,SAFQ,EAENH,IAFM,CAED,KAFC,CAAT;AAGA;;AACF,WAAK,WAAL;AACEE,QAAAA,MAAM,GAAG,KAAKd,cAAc,CAACD,QAAQ,CAACU,IAAV,EAAgB,KAAhB,CAA5B;AACA;;AACF,WAAK,OAAL;AACEK,QAAAA,MAAM,GAAG,KAAKb,WAAW,CAACF,QAAQ,CAACU,IAAV,CAAzB;AACA;;AACF;AACEK,QAAAA,MAAM,GAAG,KAAKf,QAAQ,CAACO,IAAvB;AACA;AA7CJ;AA+CD,GAhDM,MAgDA;AACLQ,IAAAA,MAAM,GAAG,KAAT;AACD;;AACD,SAAOA,MAAP;AACD,CAxDD;;AA0DA,IAAIE,oBAAoB,GAAG,SAASA,oBAAT,CAA8BjB,QAA9B,EAAwCkB,QAAxC,EAAkD;AAC3E,MAAIC,aAAa,GAAGnC,QAAQ,CAAC,EAAD,EAAKgB,QAAQ,CAACW,SAAd,EAAyB;AACnDS,IAAAA,IAAI,EAAEF;AAD6C,GAAzB,CAA5B;;AAIAC,EAAAA,aAAa,CAACE,MAAd,GAAuBpB,cAAc,CAACD,QAAD,CAArC;AAEA,SAAOmB,aAAP;AACD,CARD;;AAUA,SAASvB,gBAAT,CAA0B0B,SAA1B,EAAqC;AACnC,MAAIX,SAAS,GAAGvB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBmC,SAAzC,GAAqDnC,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAApF;;AAEA,MAAI,CAACkC,SAAL,EAAgB;AACd,UAAM,IAAIE,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAED,MAAIL,aAAa,GAAGnC,QAAQ,CAAC;AAC3BoC,IAAAA,IAAI,EAAEE,SAAS,CAACG,WAAV,IAAyBH,SAAS,CAACF;AADd,GAAD,EAEzBT,SAFyB,CAA5B;;AAGA,MAAIA,SAAJ,EAAe;AACb,WAAOQ,aAAa,CAACO,SAArB;;AAEA,QAAIf,SAAS,CAACe,SAAd,EAAyB;AACvB,UAAIA,SAAS,GAAG,EAAhB;AACA9C,MAAAA,MAAM,CAACyB,IAAP,CAAYM,SAAS,CAACe,SAAtB,EAAiCC,OAAjC,CAAyC,UAAUT,QAAV,EAAoB;AAC3D,YAAIlB,QAAQ,GAAGW,SAAS,CAACe,SAAV,CAAoBR,QAApB,CAAf;AACAQ,QAAAA,SAAS,CAACE,IAAV,CAAeX,oBAAoB,CAACjB,QAAD,EAAWkB,QAAX,CAAnC;AACD,OAHD;;AAIA,UAAIQ,SAAS,CAACrC,MAAV,GAAmB,CAAvB,EAA0B;AACxB8B,QAAAA,aAAa,CAACU,UAAd,GAA2BH,SAA3B;AACD;AACF;AACF;;AACD,SAAOP,aAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = descToTypescript;\n\nvar arrayFormat = function arrayFormat(array) {\n  return array.map(function (propType) {\n    return propTypeFormat(propType);\n  });\n};\n\nvar shapeFormat = function shapeFormat(shape) {\n  var props = Object.keys(shape).map(function (key) {\n    var value = shape[key];\n    var valueFormat = void 0;\n    if (value.type && (value.type === 'arrayOf' || value.type === 'oneOfType' || value.type === 'oneOf') && Array.isArray(value.args)) {\n      valueFormat = '' + propTypeFormat(value);\n    } else if (value.type === 'shape') {\n      valueFormat = '' + propTypeFormat(value);\n    } else {\n      valueFormat = propTypeFormat(value);\n    }\n    return '' + key + (value.reactDesc && value.reactDesc.required ? '' : '?') + ': ' + valueFormat;\n  });\n  return '{' + props.join(',') + '}';\n};\n\nvar propTypeFormat = function propTypeFormat(propType, joinWith) {\n  var result = void 0;\n  if (Array.isArray(propType)) {\n    result = arrayFormat(propType).join(joinWith);\n  } else if (typeof propType !== 'function' && propType.type) {\n    switch (propType.type) {\n      case 'array':\n        result = 'any[]';\n        break;\n      case 'arrayOf':\n        if (propType.args.type === 'oneOfType') {\n          result = '(' + propTypeFormat(propType.args, ' | ') + ')[]';\n        } else {\n          result = propTypeFormat(propType.args, '\\n') + '[]';\n        }\n        break;\n      case 'bool':\n        result = 'boolean';\n        break;\n      case 'func':\n        result = '((...args: any[]) => any)';\n        break;\n      case 'node':\n        result = 'React.ReactNode';\n        break;\n      case 'element':\n        result = 'JSX.Element';\n        break;\n      case 'instanceOf':\n        result = 'any';\n        break;\n      case 'symbol':\n        result = 'any';\n        break;\n      case 'objectOf':\n        result = '{ [key: string]: ' + propTypeFormat(propType.args) + ' }';\n        break;\n      case 'oneOf':\n        result = propType.args.map(function (a) {\n          return '\"' + a + '\"';\n        }).join(' | ');\n        break;\n      case 'oneOfType':\n        result = '' + propTypeFormat(propType.args, ' | ');\n        break;\n      case 'shape':\n        result = '' + shapeFormat(propType.args);\n        break;\n      default:\n        result = '' + propType.type;\n        break;\n    }\n  } else {\n    result = 'any';\n  }\n  return result;\n};\n\nvar propTypeAsTypescript = function propTypeAsTypescript(propType, propName) {\n  var documentation = _extends({}, propType.reactDesc, {\n    name: propName\n  });\n\n  documentation.format = propTypeFormat(propType);\n\n  return documentation;\n};\n\nfunction descToTypescript(component) {\n  var reactDesc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!component) {\n    throw new Error('react-desc: component is required');\n  }\n\n  var documentation = _extends({\n    name: component.displayName || component.name\n  }, reactDesc);\n  if (reactDesc) {\n    delete documentation.propTypes;\n\n    if (reactDesc.propTypes) {\n      var propTypes = [];\n      Object.keys(reactDesc.propTypes).forEach(function (propName) {\n        var propType = reactDesc.propTypes[propName];\n        propTypes.push(propTypeAsTypescript(propType, propName));\n      });\n      if (propTypes.length > 0) {\n        documentation.properties = propTypes;\n      }\n    }\n  }\n  return documentation;\n}"]},"metadata":{},"sourceType":"script"}