{"ast":null,"code":"import { describe, PropTypes } from 'react-desc';\nexport var doc = function doc(TableCell) {\n  var DocumentedTableCell = describe(TableCell).description('A cell of data in a table.').usage(\"import { TableCell } from 'grommet';\\n<TableCell />\").intrinsicElement('td');\n  DocumentedTableCell.propTypes = {\n    plain: PropTypes.bool.description('Whether default styling context should be removed.').defaultValue(false),\n    scope: PropTypes.oneOf(['col', 'row']).description(\"For header cells, what scope the header is for.\\n        Typically, the cells in a TableHeader have 'col' scope and\\n        the primary cell in each row in the TableBody has 'row' scope.\"),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge', '1/2', '1/3', '2/3', '1/4', '2/4', '3/4']), PropTypes.string]).description(\"What size the cell should be. Typically, this is not needed\\n      unless you are trying to align multiple tables.\"),\n    verticalAlign: PropTypes.oneOf(['top', 'middle', 'bottom']).description('How to align the contents vertically.')\n  };\n  return DocumentedTableCell;\n};\nexport var themeDoc = {\n  'table.body.align': {\n    description: 'How to align the body inside the Table.',\n    type: 'string',\n    defaultValue: 'start'\n  },\n  'table.body.border': {\n    description: 'The border side of the body.',\n    type: 'string',\n    defaultValue: undefined\n  },\n  'table.body.extend': {\n    description: 'Any additional style for Table body.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'table.body.pad': {\n    description: 'The padding of the body.',\n    type: 'string | object',\n    defaultValue: \"{ horizontal: 'small', vertical: 'xsmall' }\"\n  },\n  'table.footer.align': {\n    description: 'How to align the footer inside the Table.',\n    type: 'string',\n    defaultValue: 'start'\n  },\n  'table.footer.border': {\n    description: 'The border side of the footer.',\n    type: 'string',\n    defaultValue: 'top'\n  },\n  'table.footer.extend': {\n    description: 'Any additional style for Table footer.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'table.footer.fill': {\n    description: 'Whether the height should fill the footer.',\n    type: 'string',\n    defaultValue: 'vertical'\n  },\n  'table.footer.pad': {\n    description: 'The padding of the footer.',\n    type: 'string | object',\n    defaultValue: \"{ horizontal: 'small', vertical: 'xsmall' }\"\n  },\n  'table.footer.verticalAlign': {\n    description: 'How to align the content vertically.',\n    type: 'string',\n    defaultValue: 'top'\n  },\n  'table.header.align': {\n    description: 'How to align the header inside the Table.',\n    type: 'string',\n    defaultValue: 'start'\n  },\n  'table.header.background': {\n    description: 'The background color of the header.',\n    type: 'string | object',\n    defaultValue: undefined\n  },\n  'table.header.border': {\n    description: 'The border side of the header.',\n    type: 'string',\n    defaultValue: 'bottom'\n  },\n  'table.header.fill': {\n    description: 'Whether the height should fill the header.',\n    type: 'string',\n    defaultValue: 'vertical'\n  },\n  'table.header.extend': {\n    description: 'Any additional style for Table header.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'table.header.pad': {\n    description: 'The padding of the header.',\n    type: 'string | object',\n    defaultValue: \"{ horizontal: 'small', vertical: 'xsmall' }\"\n  },\n  'table.header.verticalAlign': {\n    description: 'How to align the content vertically.',\n    type: 'string',\n    defaultValue: 'bottom'\n  }\n};","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/grommet/es6/components/TableCell/doc.js"],"names":["describe","PropTypes","doc","TableCell","DocumentedTableCell","description","usage","intrinsicElement","propTypes","plain","bool","defaultValue","scope","oneOf","size","oneOfType","string","verticalAlign","themeDoc","type","undefined"],"mappings":"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","sourcesContent":["import { describe, PropTypes } from 'react-desc';\nexport var doc = function doc(TableCell) {\n  var DocumentedTableCell = describe(TableCell).description('A cell of data in a table.').usage(\"import { TableCell } from 'grommet';\\n<TableCell />\").intrinsicElement('td');\n  DocumentedTableCell.propTypes = {\n    plain: PropTypes.bool.description('Whether default styling context should be removed.').defaultValue(false),\n    scope: PropTypes.oneOf(['col', 'row']).description(\"For header cells, what scope the header is for.\\n        Typically, the cells in a TableHeader have 'col' scope and\\n        the primary cell in each row in the TableBody has 'row' scope.\"),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge', '1/2', '1/3', '2/3', '1/4', '2/4', '3/4']), PropTypes.string]).description(\"What size the cell should be. Typically, this is not needed\\n      unless you are trying to align multiple tables.\"),\n    verticalAlign: PropTypes.oneOf(['top', 'middle', 'bottom']).description('How to align the contents vertically.')\n  };\n  return DocumentedTableCell;\n};\nexport var themeDoc = {\n  'table.body.align': {\n    description: 'How to align the body inside the Table.',\n    type: 'string',\n    defaultValue: 'start'\n  },\n  'table.body.border': {\n    description: 'The border side of the body.',\n    type: 'string',\n    defaultValue: undefined\n  },\n  'table.body.extend': {\n    description: 'Any additional style for Table body.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'table.body.pad': {\n    description: 'The padding of the body.',\n    type: 'string | object',\n    defaultValue: \"{ horizontal: 'small', vertical: 'xsmall' }\"\n  },\n  'table.footer.align': {\n    description: 'How to align the footer inside the Table.',\n    type: 'string',\n    defaultValue: 'start'\n  },\n  'table.footer.border': {\n    description: 'The border side of the footer.',\n    type: 'string',\n    defaultValue: 'top'\n  },\n  'table.footer.extend': {\n    description: 'Any additional style for Table footer.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'table.footer.fill': {\n    description: 'Whether the height should fill the footer.',\n    type: 'string',\n    defaultValue: 'vertical'\n  },\n  'table.footer.pad': {\n    description: 'The padding of the footer.',\n    type: 'string | object',\n    defaultValue: \"{ horizontal: 'small', vertical: 'xsmall' }\"\n  },\n  'table.footer.verticalAlign': {\n    description: 'How to align the content vertically.',\n    type: 'string',\n    defaultValue: 'top'\n  },\n  'table.header.align': {\n    description: 'How to align the header inside the Table.',\n    type: 'string',\n    defaultValue: 'start'\n  },\n  'table.header.background': {\n    description: 'The background color of the header.',\n    type: 'string | object',\n    defaultValue: undefined\n  },\n  'table.header.border': {\n    description: 'The border side of the header.',\n    type: 'string',\n    defaultValue: 'bottom'\n  },\n  'table.header.fill': {\n    description: 'Whether the height should fill the header.',\n    type: 'string',\n    defaultValue: 'vertical'\n  },\n  'table.header.extend': {\n    description: 'Any additional style for Table header.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'table.header.pad': {\n    description: 'The padding of the header.',\n    type: 'string | object',\n    defaultValue: \"{ horizontal: 'small', vertical: 'xsmall' }\"\n  },\n  'table.header.verticalAlign': {\n    description: 'How to align the content vertically.',\n    type: 'string',\n    defaultValue: 'bottom'\n  }\n};"]},"metadata":{},"sourceType":"module"}