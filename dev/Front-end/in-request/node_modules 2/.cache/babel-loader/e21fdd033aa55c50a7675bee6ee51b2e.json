{"ast":null,"code":"\"use strict\"; // Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst messages = require(\"../messages\");\n\nclass IAMAuth {\n  /**\n   * IAM credentials.\n   *\n   * @param selector the iam authority selector\n   * @param token the token\n   * @constructor\n   */\n  constructor(selector, token) {\n    this.selector = selector;\n    this.token = token;\n    this.selector = selector;\n    this.token = token;\n  }\n  /**\n   * Indicates whether the credential requires scopes to be created by calling\n   * createdScoped before use.\n   * @deprecated\n   * @return always false\n   */\n\n\n  createScopedRequired() {\n    // IAM authorization does not use scopes.\n    messages.warn(messages.IAM_CREATE_SCOPED_DEPRECATED);\n    return false;\n  }\n  /**\n   * Pass the selector and token to the metadataFn callback.\n   * @deprecated\n   * @param unused_uri is required of the credentials interface\n   * @param metadataFn a callback invoked with object containing request\n   * metadata.\n   */\n\n\n  getRequestMetadata(unusedUri, metadataFn) {\n    messages.warn(messages.IAM_GET_REQUEST_METADATA_DEPRECATED);\n    metadataFn(null, this.getRequestHeaders());\n  }\n  /**\n   * Acquire the HTTP headers required to make an authenticated request.\n   */\n\n\n  getRequestHeaders() {\n    return {\n      'x-goog-iam-authority-selector': this.selector,\n      'x-goog-iam-authorization-token': this.token\n    };\n  }\n\n}\n\nexports.IAMAuth = IAMAuth;","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/google-auth-library/build/src/auth/iam.js"],"names":["Object","defineProperty","exports","value","messages","require","IAMAuth","constructor","selector","token","createScopedRequired","warn","IAM_CREATE_SCOPED_DEPRECATED","getRequestMetadata","unusedUri","metadataFn","IAM_GET_REQUEST_METADATA_DEPRECATED","getRequestHeaders"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAMC,OAAN,CAAc;AACV;;;;;;;AAOAC,EAAAA,WAAW,CAACC,QAAD,EAAWC,KAAX,EAAkB;AACzB,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;AACD;;;;;;;;AAMAC,EAAAA,oBAAoB,GAAG;AACnB;AACAN,IAAAA,QAAQ,CAACO,IAAT,CAAcP,QAAQ,CAACQ,4BAAvB;AACA,WAAO,KAAP;AACH;AACD;;;;;;;;;AAOAC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,UAAZ,EAAwB;AACtCX,IAAAA,QAAQ,CAACO,IAAT,CAAcP,QAAQ,CAACY,mCAAvB;AACAD,IAAAA,UAAU,CAAC,IAAD,EAAO,KAAKE,iBAAL,EAAP,CAAV;AACH;AACD;;;;;AAGAA,EAAAA,iBAAiB,GAAG;AAChB,WAAO;AACH,uCAAiC,KAAKT,QADnC;AAEH,wCAAkC,KAAKC;AAFpC,KAAP;AAIH;;AA5CS;;AA8CdP,OAAO,CAACI,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst messages = require(\"../messages\");\nclass IAMAuth {\n    /**\n     * IAM credentials.\n     *\n     * @param selector the iam authority selector\n     * @param token the token\n     * @constructor\n     */\n    constructor(selector, token) {\n        this.selector = selector;\n        this.token = token;\n        this.selector = selector;\n        this.token = token;\n    }\n    /**\n     * Indicates whether the credential requires scopes to be created by calling\n     * createdScoped before use.\n     * @deprecated\n     * @return always false\n     */\n    createScopedRequired() {\n        // IAM authorization does not use scopes.\n        messages.warn(messages.IAM_CREATE_SCOPED_DEPRECATED);\n        return false;\n    }\n    /**\n     * Pass the selector and token to the metadataFn callback.\n     * @deprecated\n     * @param unused_uri is required of the credentials interface\n     * @param metadataFn a callback invoked with object containing request\n     * metadata.\n     */\n    getRequestMetadata(unusedUri, metadataFn) {\n        messages.warn(messages.IAM_GET_REQUEST_METADATA_DEPRECATED);\n        metadataFn(null, this.getRequestHeaders());\n    }\n    /**\n     * Acquire the HTTP headers required to make an authenticated request.\n     */\n    getRequestHeaders() {\n        return {\n            'x-goog-iam-authority-selector': this.selector,\n            'x-goog-iam-authorization-token': this.token,\n        };\n    }\n}\nexports.IAMAuth = IAMAuth;\n//# sourceMappingURL=iam.js.map"]},"metadata":{},"sourceType":"script"}