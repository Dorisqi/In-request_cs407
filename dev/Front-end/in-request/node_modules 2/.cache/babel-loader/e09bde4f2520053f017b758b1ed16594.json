{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { describe, PropTypes } from 'react-desc';\nimport { genericProps, getAvailableAtBadge } from '../../utils';\nimport { themeDocUtils } from '../../utils/themeDocUtils';\nexport var doc = function doc(Table) {\n  var DocumentedTable = describe(Table).availableAt(getAvailableAtBadge('Table')).description('A table of data organized in cells.').usage( // eslint-disable-next-line max-len\n  \"import { Table, TableHeader, TableFooter, TableBody, TableRow } from 'grommet';\\n<Table />\").intrinsicElement('table');\n  DocumentedTable.propTypes = _extends({}, genericProps, {\n    caption: PropTypes.string.description('One line description.')\n  });\n  return DocumentedTable;\n};\nexport var themeDoc = _extends({}, themeDocUtils.responsiveBreakpoint('The actual breakpoint to trigger changes in Table.'), {\n  'global.size': {\n    description: 'The size that impacts max-width and width.',\n    defaultValue: \"{\\n      xxsmall: '48px',\\n      xsmall: '96px',\\n      small: '192px',\\n      medium: '384px',\\n      large: '768px',\\n      xlarge: '1152px',\\n      xxlarge: '1536px',\\n      full: '100%',\\n      }\"\n  },\n  'table.extend': {\n    description: 'Any additional style for Table.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  }\n});","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/grommet/es6/components/Table/doc.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","describe","PropTypes","genericProps","getAvailableAtBadge","themeDocUtils","doc","Table","DocumentedTable","availableAt","description","usage","intrinsicElement","propTypes","caption","string","themeDoc","responsiveBreakpoint","defaultValue","type","undefined"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,QAAT,EAAmBC,SAAnB,QAAoC,YAApC;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,aAAlD;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAO,IAAIC,GAAG,GAAG,SAASA,GAAT,CAAaC,KAAb,EAAoB;AACnC,MAAIC,eAAe,GAAGP,QAAQ,CAACM,KAAD,CAAR,CAAgBE,WAAhB,CAA4BL,mBAAmB,CAAC,OAAD,CAA/C,EAA0DM,WAA1D,CAAsE,qCAAtE,EAA6GC,KAA7G,EAAoH;AAC1I,8FADsB,EACwEC,gBADxE,CACyF,OADzF,CAAtB;AAEAJ,EAAAA,eAAe,CAACK,SAAhB,GAA4BzB,QAAQ,CAAC,EAAD,EAAKe,YAAL,EAAmB;AACrDW,IAAAA,OAAO,EAAEZ,SAAS,CAACa,MAAV,CAAiBL,WAAjB,CAA6B,uBAA7B;AAD4C,GAAnB,CAApC;AAGA,SAAOF,eAAP;AACD,CAPM;AAQP,OAAO,IAAIQ,QAAQ,GAAG5B,QAAQ,CAAC,EAAD,EAAKiB,aAAa,CAACY,oBAAd,CAAmC,oDAAnC,CAAL,EAA+F;AAC3H,iBAAe;AACbP,IAAAA,WAAW,EAAE,4CADA;AAEbQ,IAAAA,YAAY,EAAE;AAFD,GAD4G;AAK3H,kBAAgB;AACdR,IAAAA,WAAW,EAAE,iCADC;AAEdS,IAAAA,IAAI,EAAE,wBAFQ;AAGdD,IAAAA,YAAY,EAAEE;AAHA;AAL2G,CAA/F,CAAvB","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { describe, PropTypes } from 'react-desc';\nimport { genericProps, getAvailableAtBadge } from '../../utils';\nimport { themeDocUtils } from '../../utils/themeDocUtils';\nexport var doc = function doc(Table) {\n  var DocumentedTable = describe(Table).availableAt(getAvailableAtBadge('Table')).description('A table of data organized in cells.').usage( // eslint-disable-next-line max-len\n  \"import { Table, TableHeader, TableFooter, TableBody, TableRow } from 'grommet';\\n<Table />\").intrinsicElement('table');\n  DocumentedTable.propTypes = _extends({}, genericProps, {\n    caption: PropTypes.string.description('One line description.')\n  });\n  return DocumentedTable;\n};\nexport var themeDoc = _extends({}, themeDocUtils.responsiveBreakpoint('The actual breakpoint to trigger changes in Table.'), {\n  'global.size': {\n    description: 'The size that impacts max-width and width.',\n    defaultValue: \"{\\n      xxsmall: '48px',\\n      xsmall: '96px',\\n      small: '192px',\\n      medium: '384px',\\n      large: '768px',\\n      xlarge: '1152px',\\n      xxlarge: '1536px',\\n      full: '100%',\\n      }\"\n  },\n  'table.extend': {\n    description: 'Any additional style for Table.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  }\n});"]},"metadata":{},"sourceType":"module"}