{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * A builder for gRPC status objects.\n */\n\nclass StatusBuilder {\n  constructor() {\n    this.code = null;\n    this.details = null;\n    this.metadata = null;\n  }\n  /**\n   * Adds a status code to the builder.\n   */\n\n\n  withCode(code) {\n    this.code = code;\n    return this;\n  }\n  /**\n   * Adds details to the builder.\n   */\n\n\n  withDetails(details) {\n    this.details = details;\n    return this;\n  }\n  /**\n   * Adds metadata to the builder.\n   */\n\n\n  withMetadata(metadata) {\n    this.metadata = metadata;\n    return this;\n  }\n  /**\n   * Builds the status object.\n   */\n\n\n  build() {\n    const status = {};\n\n    if (this.code !== null) {\n      status.code = this.code;\n    }\n\n    if (this.details !== null) {\n      status.details = this.details;\n    }\n\n    if (this.metadata !== null) {\n      status.metadata = this.metadata;\n    }\n\n    return status;\n  }\n\n}\n\nexports.StatusBuilder = StatusBuilder;","map":{"version":3,"sources":["../../src/status-builder.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;AAqBA;;;;AAGA,MAAa,aAAb,CAA0B;AAKxB,EAAA,WAAA,GAAA;AACE,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,OAAL,GAAe,IAAf;AACA,SAAK,QAAL,GAAgB,IAAhB;AACD;AAED;;;;;AAGA,EAAA,QAAQ,CAAC,IAAD,EAAa;AACnB,SAAK,IAAL,GAAY,IAAZ;AACA,WAAO,IAAP;AACD;AAED;;;;;AAGA,EAAA,WAAW,CAAC,OAAD,EAAgB;AACzB,SAAK,OAAL,GAAe,OAAf;AACA,WAAO,IAAP;AACD;AAED;;;;;AAGA,EAAA,YAAY,CAAC,QAAD,EAAmB;AAC7B,SAAK,QAAL,GAAgB,QAAhB;AACA,WAAO,IAAP;AACD;AAED;;;;;AAGA,EAAA,KAAK,GAAA;AACH,UAAM,MAAM,GAA0B,EAAtC;;AAEA,QAAI,KAAK,IAAL,KAAc,IAAlB,EAAwB;AACtB,MAAA,MAAM,CAAC,IAAP,GAAc,KAAK,IAAnB;AACD;;AAED,QAAI,KAAK,OAAL,KAAiB,IAArB,EAA2B;AACzB,MAAA,MAAM,CAAC,OAAP,GAAiB,KAAK,OAAtB;AACD;;AAED,QAAI,KAAK,QAAL,KAAkB,IAAtB,EAA4B;AAC1B,MAAA,MAAM,CAAC,QAAP,GAAkB,KAAK,QAAvB;AACD;;AAED,WAAO,MAAP;AACD;;AAtDuB;;AAA1B,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A builder for gRPC status objects.\n */\nclass StatusBuilder {\n    constructor() {\n        this.code = null;\n        this.details = null;\n        this.metadata = null;\n    }\n    /**\n     * Adds a status code to the builder.\n     */\n    withCode(code) {\n        this.code = code;\n        return this;\n    }\n    /**\n     * Adds details to the builder.\n     */\n    withDetails(details) {\n        this.details = details;\n        return this;\n    }\n    /**\n     * Adds metadata to the builder.\n     */\n    withMetadata(metadata) {\n        this.metadata = metadata;\n        return this;\n    }\n    /**\n     * Builds the status object.\n     */\n    build() {\n        const status = {};\n        if (this.code !== null) {\n            status.code = this.code;\n        }\n        if (this.details !== null) {\n            status.details = this.details;\n        }\n        if (this.metadata !== null) {\n            status.metadata = this.metadata;\n        }\n        return status;\n    }\n}\nexports.StatusBuilder = StatusBuilder;\n//# sourceMappingURL=status-builder.js.map"]},"metadata":{},"sourceType":"script"}