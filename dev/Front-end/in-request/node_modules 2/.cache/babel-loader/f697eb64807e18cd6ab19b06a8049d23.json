{"ast":null,"code":"import { describe, PropTypes } from 'react-desc';\nimport { colorPropType, getAvailableAtBadge } from '../../utils';\nexport var doc = function doc(Diagram) {\n  var DocumentedDiagram = describe(Diagram).availableAt(getAvailableAtBadge('Diagram')).description(\"Graphical connection lines. Diagram is meant to be used with Stack.\\n      Boxes can be used in the `guidingChild` layer of Stack and then\\n      Diagram can be used to draw lines connecting the Boxes.\").usage(\"import { Diagram } from 'grommet';\\n<Diagram />\").intrinsicElement('svg');\n  DocumentedDiagram.propTypes = {\n    connections: PropTypes.arrayOf(PropTypes.shape({\n      anchor: PropTypes.oneOf(['center', 'vertical', 'horizontal']),\n      color: colorPropType,\n      fromTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      label: PropTypes.string,\n      // for accessibility\n      offset: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large']), PropTypes.string]),\n      thickness: PropTypes.oneOfType([PropTypes.oneOf(['hair', 'xxsmall', 'xsmall', 'small', 'medium', 'large']), PropTypes.string]),\n      toTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      type: PropTypes.oneOf(['direct', 'curved', 'rectilinear'])\n    })).description(\"Array of objects describing the connections.\\n      The 'fromTarget' and 'toTarget' may be either DOM element ids or\\n      React references.\\n      'offset' can be used to shift a bit to reduce the amount of overlap\\n      with other connection lines to make the lines easier to distinguish.\").isRequired\n  };\n  return DocumentedDiagram;\n};\nexport var themeDoc = {\n  'diagram.extend': {\n    description: 'Any additional style for Diagram.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'diagram.line.color': {\n    description: 'The color of the connection line.',\n    type: 'string | {dark: string, light: string}',\n    defaultValue: 'accent-1'\n  },\n  'global.colors': {\n    description: 'Color options.',\n    type: 'object',\n    defaultValue: \"{\\n      \\\"accent-1\\\": \\\"#6FFFB0\\\",\\n      \\\"graph-0\\\": \\\"accent-1\\\",\\n      \\\"graph-1\\\": \\\"neutral-1\\\",\\n      ...\\n    }\"\n  },\n  'global.edgeSize': {\n    description: 'The possible sizes for the connections thickness and offset.',\n    type: 'object',\n    defaultValue: \"{\\n        none: '0px',\\n        hair: '1px',\\n        xxsmall: '3px',\\n        xsmall: '6px',\\n        small: '12px',\\n        medium: '24px',\\n        large: '48px',\\n        xlarge: '96px',\\n        responsiveBreakpoint: 'small',\\n    }\"\n  }\n};","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/grommet/es6/components/Diagram/doc.js"],"names":["describe","PropTypes","colorPropType","getAvailableAtBadge","doc","Diagram","DocumentedDiagram","availableAt","description","usage","intrinsicElement","propTypes","connections","arrayOf","shape","anchor","oneOf","color","fromTarget","oneOfType","string","object","isRequired","label","offset","thickness","toTarget","type","themeDoc","defaultValue","undefined"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,YAApC;AACA,SAASC,aAAT,EAAwBC,mBAAxB,QAAmD,aAAnD;AACA,OAAO,IAAIC,GAAG,GAAG,SAASA,GAAT,CAAaC,OAAb,EAAsB;AACrC,MAAIC,iBAAiB,GAAGN,QAAQ,CAACK,OAAD,CAAR,CAAkBE,WAAlB,CAA8BJ,mBAAmB,CAAC,SAAD,CAAjD,EAA8DK,WAA9D,CAA0E,2MAA1E,EAAuRC,KAAvR,CAA6R,iDAA7R,EAAgVC,gBAAhV,CAAiW,KAAjW,CAAxB;AACAJ,EAAAA,iBAAiB,CAACK,SAAlB,GAA8B;AAC5BC,IAAAA,WAAW,EAAEX,SAAS,CAACY,OAAV,CAAkBZ,SAAS,CAACa,KAAV,CAAgB;AAC7CC,MAAAA,MAAM,EAAEd,SAAS,CAACe,KAAV,CAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,YAAvB,CAAhB,CADqC;AAE7CC,MAAAA,KAAK,EAAEf,aAFsC;AAG7CgB,MAAAA,UAAU,EAAEjB,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACmB,MAAX,EAAmBnB,SAAS,CAACoB,MAA7B,CAApB,EAA0DC,UAHzB;AAI7CC,MAAAA,KAAK,EAAEtB,SAAS,CAACmB,MAJ4B;AAK7C;AACAI,MAAAA,MAAM,EAAEvB,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACe,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,EAA8B,OAA9B,CAAhB,CAAD,EAA0Df,SAAS,CAACmB,MAApE,CAApB,CANqC;AAO7CK,MAAAA,SAAS,EAAExB,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACe,KAAV,CAAgB,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,QAAvC,EAAiD,OAAjD,CAAhB,CAAD,EAA6Ef,SAAS,CAACmB,MAAvF,CAApB,CAPkC;AAQ7CM,MAAAA,QAAQ,EAAEzB,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACmB,MAAX,EAAmBnB,SAAS,CAACoB,MAA7B,CAApB,EAA0DC,UARvB;AAS7CK,MAAAA,IAAI,EAAE1B,SAAS,CAACe,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,aAArB,CAAhB;AATuC,KAAhB,CAAlB,EAUTR,WAVS,CAUG,sSAVH,EAU2Sc;AAX5R,GAA9B;AAaA,SAAOhB,iBAAP;AACD,CAhBM;AAiBP,OAAO,IAAIsB,QAAQ,GAAG;AACpB,oBAAkB;AAChBpB,IAAAA,WAAW,EAAE,mCADG;AAEhBmB,IAAAA,IAAI,EAAE,wBAFU;AAGhBE,IAAAA,YAAY,EAAEC;AAHE,GADE;AAMpB,wBAAsB;AACpBtB,IAAAA,WAAW,EAAE,mCADO;AAEpBmB,IAAAA,IAAI,EAAE,wCAFc;AAGpBE,IAAAA,YAAY,EAAE;AAHM,GANF;AAWpB,mBAAiB;AACfrB,IAAAA,WAAW,EAAE,gBADE;AAEfmB,IAAAA,IAAI,EAAE,QAFS;AAGfE,IAAAA,YAAY,EAAE;AAHC,GAXG;AAgBpB,qBAAmB;AACjBrB,IAAAA,WAAW,EAAE,8DADI;AAEjBmB,IAAAA,IAAI,EAAE,QAFW;AAGjBE,IAAAA,YAAY,EAAE;AAHG;AAhBC,CAAf","sourcesContent":["import { describe, PropTypes } from 'react-desc';\nimport { colorPropType, getAvailableAtBadge } from '../../utils';\nexport var doc = function doc(Diagram) {\n  var DocumentedDiagram = describe(Diagram).availableAt(getAvailableAtBadge('Diagram')).description(\"Graphical connection lines. Diagram is meant to be used with Stack.\\n      Boxes can be used in the `guidingChild` layer of Stack and then\\n      Diagram can be used to draw lines connecting the Boxes.\").usage(\"import { Diagram } from 'grommet';\\n<Diagram />\").intrinsicElement('svg');\n  DocumentedDiagram.propTypes = {\n    connections: PropTypes.arrayOf(PropTypes.shape({\n      anchor: PropTypes.oneOf(['center', 'vertical', 'horizontal']),\n      color: colorPropType,\n      fromTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      label: PropTypes.string,\n      // for accessibility\n      offset: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large']), PropTypes.string]),\n      thickness: PropTypes.oneOfType([PropTypes.oneOf(['hair', 'xxsmall', 'xsmall', 'small', 'medium', 'large']), PropTypes.string]),\n      toTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      type: PropTypes.oneOf(['direct', 'curved', 'rectilinear'])\n    })).description(\"Array of objects describing the connections.\\n      The 'fromTarget' and 'toTarget' may be either DOM element ids or\\n      React references.\\n      'offset' can be used to shift a bit to reduce the amount of overlap\\n      with other connection lines to make the lines easier to distinguish.\").isRequired\n  };\n  return DocumentedDiagram;\n};\nexport var themeDoc = {\n  'diagram.extend': {\n    description: 'Any additional style for Diagram.',\n    type: 'string | (props) => {}',\n    defaultValue: undefined\n  },\n  'diagram.line.color': {\n    description: 'The color of the connection line.',\n    type: 'string | {dark: string, light: string}',\n    defaultValue: 'accent-1'\n  },\n  'global.colors': {\n    description: 'Color options.',\n    type: 'object',\n    defaultValue: \"{\\n      \\\"accent-1\\\": \\\"#6FFFB0\\\",\\n      \\\"graph-0\\\": \\\"accent-1\\\",\\n      \\\"graph-1\\\": \\\"neutral-1\\\",\\n      ...\\n    }\"\n  },\n  'global.edgeSize': {\n    description: 'The possible sizes for the connections thickness and offset.',\n    type: 'object',\n    defaultValue: \"{\\n        none: '0px',\\n        hair: '1px',\\n        xxsmall: '3px',\\n        xsmall: '6px',\\n        small: '12px',\\n        medium: '24px',\\n        large: '48px',\\n        xlarge: '96px',\\n        responsiveBreakpoint: 'small',\\n    }\"\n  }\n};"]},"metadata":{},"sourceType":"module"}