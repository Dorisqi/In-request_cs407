{"ast":null,"code":"var _jsxFileName = \"/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/src/Components/Shared/SideBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\nimport Profile from '../Home/profile';\nimport Posts from '../Home/Posts.js';\nimport NewRequest from '../Home/NewRequest';\nimport Upload from '../Home/uploadimg';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { auth } from \"../../firebase\";\nimport { fdb } from \"../../firebase\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nclass SideBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Logout = () => {\n      auth.signOut().then(function () {\n        // log-out successful.\n        console.log(auth.currentUser);\n        const ref = fdb.collection('users').doc(this.props.location.state.Email);\n        ref.update({\n          LoginState: false\n        }).then(() => {\n          console.log('logout successful');\n          this.props.history.push(\"/login\");\n        });\n      }).catch(err => {\n        // An error happened.\n        console.log('Error logging out', err);\n      });\n    };\n\n    this.state = {\n      Email: \"\",\n      Password: \"\",\n      Nickname: \"\",\n      auth: this.auth,\n      fdb: this.fdb,\n      name: \"\"\n    };\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);\n    this.Logout = this.Logout.bind(this);\n  } // handleDrawerToggle = () => {\n  //   const value = this.state.\n  //   this.setState({\n  //     mobileOpen:\n  //   })\n  //   setMobileOpen(!this.mobileOpen);\n  // }\n\n\n  render() {\n    //const { container,location } = props;\n    const classes = useStyles();\n    const theme = useTheme;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"icon-button-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"primary\",\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(Upload, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, ['Posts', 'New Request', 'Active Transaction', 'Archived'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      component: Link,\n      to: \"/\" + text.replace(/\\s/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }) : React.createElement(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, ['Profile', 'Log Out'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      onClick: this.Logout,\n      key: text,\n      component: Link,\n      to: \"/\" + text.replace(/\\s/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }) : React.createElement(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })))));\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: classes.drawer,\n      \"aria-label\": \"mailbox folders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"// \", React.createElement(Hidden, {\n      xsDown: true,\n      implementation: \"css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      classes: {\n        paper: classes.drawerPaper\n      },\n      variant: \"permanent\",\n      open: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, drawer))), \"// \", React.createElement(\"main\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Posts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Profile, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/NewRequest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(NewRequest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))))));\n  }\n\n} ////\n// function SideBar(props) {\n//   const { container,location } = props;\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [mobileOpen, setMobileOpen] = React.useState(false);\n//\n//   const handleDrawerToggle = () => {\n//     setMobileOpen(!mobileOpen);\n//   };\n//   const Logout=()=>{\n//     auth.signOut().then(function() {\n//   // log-out successful.\n//       console.log(auth.currentUser)\n//       const ref = fdb.collection('users').doc(props.location.state.Email);\n//       ref.update({\n//         LoginState: false\n//       }).then(() => {\n//         console.log('logout successful');\n//         this.props.history.push(\"/login\");\n//       });\n//     }).catch(err => {\n//       // An error happened.\n//       console.log('Error logging out', err);\n//     });\n//   }\n//\n//   const drawer = (\n//     <div>\n//       <div className={classes.toolbar} />\n//       <Grid container justify = \"center\">\n//\n//         {/* --- TODO: clickable IconButton --- */}\n//         <label htmlFor=\"icon-button-file\">\n//           <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n//             {/* --- TODO: display user's profile picture -- */}\n//           </IconButton>\n//         </label>\n//\n//         {/* --- TODO: clickable image --- */}\n//\n//         {/* --- TODO: display user's rating -- */}\n//         <Upload/>\n//       </Grid>\n//       <br />\n//       <br />\n//       <Divider />\n//       <List>\n//         {['Posts', 'New Request', 'Active Transaction', 'Archived'].map((text, index) => (\n//           <ListItem button key={text} component={Link} to={\"/\" + text.replace(/\\s/g,'')}>\n//             <ListItemIcon>\n//               {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n//             </ListItemIcon>\n//             <ListItemText primary={text} />\n//           </ListItem>\n//         ))}\n//       </List>\n//       <Divider />\n//       <List>\n//         {['Profile', 'Log Out'].map((text, index) => (\n//           <ListItem button onClick={Logout} key={text} component={Link} to={\"/\" + text.replace(/\\s/g,'')}>\n//             <ListItemIcon>\n//               {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n//             </ListItemIcon>\n//             <ListItemText primary={text} />\n//           </ListItem>\n//         ))}\n//       </List>\n//     </div>\n//   );\n//\n//   return (\n//     <div className={classes.root}>\n//       <CssBaseline />\n//       <BrowserRouter>\n//         <nav className={classes.drawer} aria-label=\"mailbox folders\">\n//           {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n//           <Hidden xsDown implementation=\"css\">\n//             <Drawer\n//               classes={{\n//                 paper: classes.drawerPaper,\n//               }}\n//               variant=\"permanent\"\n//               open\n//             >\n//               {drawer}\n//             </Drawer>\n//           </Hidden>\n//         </nav>\n//         {/*--- Add remaing components to each Route  ---*/}\n//         <main className={classes.content}>\n//           <div className={classes.toolbar} />\n//           <Switch>\n//             <Route exact path=\"/posts\">\n//               <Posts />\n//             </Route>\n//             <Route path=\"/profile\">\n//               <Profile />\n//             </Route>\n//             <Route path=\"/NewRequest\">\n//               <NewRequest />\n//             </Route>\n//           </Switch>\n//         </main>\n//       </BrowserRouter>\n//     </div>\n//   );\n// }\n//\n// SideBar.propTypes = {\n//   /**\n//    * Injected by the documentation to work in an iframe.\n//    * You won't need it on your project.\n//    */\n//    container: PropTypes.instanceOf(\n//      typeof Element === \"undefined\" ? Object : Element\n//  ),\n//  Email:PropTypes.string\n// };\n\n\nexport default SideBar;","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/src/Components/Shared/SideBar.js"],"names":["React","PropTypes","AppBar","CssBaseline","Divider","Drawer","Hidden","IconButton","InboxIcon","List","ListItem","ListItemIcon","ListItemText","MailIcon","MenuIcon","Toolbar","Typography","Grid","Avatar","Switch","Route","Link","BrowserRouter","Profile","Posts","NewRequest","Upload","Button","makeStyles","useTheme","auth","fdb","drawerWidth","useStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","SideBar","Component","constructor","props","Logout","signOut","then","console","log","currentUser","ref","collection","doc","location","state","Email","update","LoginState","history","push","catch","err","Password","Nickname","name","handleDrawerToggle","bind","render","classes","map","text","index","replace","paper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar'\nimport { Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\nimport Profile from '../Home/profile';\nimport Posts from '../Home/Posts.js';\nimport NewRequest from '../Home/NewRequest';\nimport Upload from '../Home/uploadimg';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {auth} from \"../../firebase\";\nimport {fdb} from \"../../firebase\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\nclass SideBar extends React.Component {\n  constructor(props){\n    super(props)\n    this.state ={\n      Email:\"\",\n      Password:\"\",\n      Nickname:\"\",\n      auth: this.auth,\n      fdb: this.fdb,\n      name:\"\",\n\n\n\n\n    }\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this)\n    this.Logout= this.Logout.bind(this)\n  }\n  // handleDrawerToggle = () => {\n  //   const value = this.state.\n  //   this.setState({\n  //     mobileOpen:\n  //   })\n  //   setMobileOpen(!this.mobileOpen);\n  // }\n\n  Logout=()=>{\n    auth.signOut().then(function() {\n  // log-out successful.\n      console.log(auth.currentUser)\n      const ref = fdb.collection('users').doc(this.props.location.state.Email);\n      ref.update({\n        LoginState: false\n      }).then(() => {\n        console.log('logout successful');\n        this.props.history.push(\"/login\");\n      });\n    }).catch(err => {\n      // An error happened.\n      console.log('Error logging out', err);\n    });\n  }\n  render(){\n    //const { container,location } = props;\n    const classes = useStyles();\n    const theme = useTheme;\n    return(\n      <div>\n        <div className={classes.toolbar} />\n        <Grid container justify = \"center\">\n\n          <label htmlFor=\"icon-button-file\">\n            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n            </IconButton>\n          </label>\n\n\n          <Upload/>\n        </Grid>\n        <br />\n        <br />\n        <Divider />\n        <List>\n          {['Posts', 'New Request', 'Active Transaction', 'Archived'].map((text, index) => (\n            <ListItem button key={text} component={Link} to={\"/\" + text.replace(/\\s/g,'')}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['Profile', 'Log Out'].map((text, index) => (\n            <ListItem button onClick={this.Logout} key={text} component={Link} to={\"/\" + text.replace(/\\s/g,'')}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <BrowserRouter>\n          <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            // {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden xsDown implementation=\"css\">\n              <Drawer\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n          </nav>\n          // {/*--- Add remaing components to each Route  ---*/}\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Switch>\n              <Route exact path=\"/posts\">\n                <Posts />\n              </Route>\n              <Route path=\"/profile\">\n                <Profile />\n              </Route>\n              <Route path=\"/NewRequest\">\n                <NewRequest />\n              </Route>\n            </Switch>\n          </main>\n        </BrowserRouter>\n      </div>\n    );\n  }\n\n\n}\n////\n// function SideBar(props) {\n//   const { container,location } = props;\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [mobileOpen, setMobileOpen] = React.useState(false);\n//\n//   const handleDrawerToggle = () => {\n//     setMobileOpen(!mobileOpen);\n//   };\n//   const Logout=()=>{\n//     auth.signOut().then(function() {\n//   // log-out successful.\n//       console.log(auth.currentUser)\n//       const ref = fdb.collection('users').doc(props.location.state.Email);\n//       ref.update({\n//         LoginState: false\n//       }).then(() => {\n//         console.log('logout successful');\n//         this.props.history.push(\"/login\");\n//       });\n//     }).catch(err => {\n//       // An error happened.\n//       console.log('Error logging out', err);\n//     });\n//   }\n//\n//   const drawer = (\n//     <div>\n//       <div className={classes.toolbar} />\n//       <Grid container justify = \"center\">\n//\n//         {/* --- TODO: clickable IconButton --- */}\n//         <label htmlFor=\"icon-button-file\">\n//           <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n//             {/* --- TODO: display user's profile picture -- */}\n//           </IconButton>\n//         </label>\n//\n//         {/* --- TODO: clickable image --- */}\n//\n//         {/* --- TODO: display user's rating -- */}\n//         <Upload/>\n//       </Grid>\n//       <br />\n//       <br />\n//       <Divider />\n//       <List>\n//         {['Posts', 'New Request', 'Active Transaction', 'Archived'].map((text, index) => (\n//           <ListItem button key={text} component={Link} to={\"/\" + text.replace(/\\s/g,'')}>\n//             <ListItemIcon>\n//               {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n//             </ListItemIcon>\n//             <ListItemText primary={text} />\n//           </ListItem>\n//         ))}\n//       </List>\n//       <Divider />\n//       <List>\n//         {['Profile', 'Log Out'].map((text, index) => (\n//           <ListItem button onClick={Logout} key={text} component={Link} to={\"/\" + text.replace(/\\s/g,'')}>\n//             <ListItemIcon>\n//               {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n//             </ListItemIcon>\n//             <ListItemText primary={text} />\n//           </ListItem>\n//         ))}\n//       </List>\n//     </div>\n//   );\n//\n//   return (\n//     <div className={classes.root}>\n//       <CssBaseline />\n//       <BrowserRouter>\n//         <nav className={classes.drawer} aria-label=\"mailbox folders\">\n//           {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n//           <Hidden xsDown implementation=\"css\">\n//             <Drawer\n//               classes={{\n//                 paper: classes.drawerPaper,\n//               }}\n//               variant=\"permanent\"\n//               open\n//             >\n//               {drawer}\n//             </Drawer>\n//           </Hidden>\n//         </nav>\n//         {/*--- Add remaing components to each Route  ---*/}\n//         <main className={classes.content}>\n//           <div className={classes.toolbar} />\n//           <Switch>\n//             <Route exact path=\"/posts\">\n//               <Posts />\n//             </Route>\n//             <Route path=\"/profile\">\n//               <Profile />\n//             </Route>\n//             <Route path=\"/NewRequest\">\n//               <NewRequest />\n//             </Route>\n//           </Switch>\n//         </main>\n//       </BrowserRouter>\n//     </div>\n//   );\n// }\n//\n// SideBar.propTypes = {\n//   /**\n//    * Injected by the documentation to work in an iframe.\n//    * You won't need it on your project.\n//    */\n//    container: PropTypes.instanceOf(\n//      typeof Element === \"undefined\" ? Object : Element\n//  ),\n//  Email:PropTypes.string\n// };\n\nexport default SideBar;\n"]},"metadata":{},"sourceType":"module"}