{"ast":null,"code":"var _jsxFileName = \"/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/src/Components/Login_Related/tryBox.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport { storiesOf } from \"@storybook/react\";\nimport { CircleInformation, Currency } from \"grommet-icons\";\nimport { Box, Form, CheckBox, RangeInput, Select, FormField, TextArea, Button, MaskedInput, RadioButtonGroup, Grommet, Grid, Stack, Tab, Tabs, Text, TextInput } from \"grommet\";\nimport { grommet } from \"grommet/themes\";\nimport { Attraction, Car, TreeOption } from \"grommet-icons\";\nimport TextField from '@material-ui/core/TextField';\nimport { deepMerge } from \"grommet/utils\";\nimport { Log_in_Box } from \"./Log_in_Box.js\";\nimport { Sign_up_Box } from \"./Sign_up_Box.js\";\nimport { css } from \"styled-components\";\nimport { FormFieldLabel } from \"./FormFieldLabel.js\";\nconst customFormFieldTheme = {\n  global: {\n    font: {\n      size: \"16px\"\n    },\n    input: {\n      weight: 400\n    }\n  },\n  formField: {\n    label: {\n      color: \"dark-3\",\n      size: \"large\",\n      margin: \"xsmall\",\n      weight: 600\n    },\n    border: {\n      position: \"outer\",\n      side: \"all\"\n    },\n    disabled: {\n      background: {\n        color: \"light-3\",\n        opacity: true\n      }\n    },\n    content: {\n      pad: \"small\"\n    },\n    error: {\n      background: {\n        color: \"status-critical\",\n        opacity: \"weak\"\n      }\n    },\n    margin: 30\n  },\n  tab: {\n    active: {\n      background: \"dark-1\",\n      color: \"accent-1\"\n    },\n    border: undefined,\n    color: \"white\",\n    hover: {\n      background: \"dark-1\"\n    },\n    margin: undefined,\n    pad: {\n      bottom: undefined,\n      horizontal: \"small\"\n    },\n    extend: ({\n      theme\n    }) => css`\n      border-radius: ${theme.global.control.border.radius};\n      box-shadow: ${theme.global.elevation.light.small};\n    `\n  }\n}; // const FormFieldLabel = props => {\n//   const { required, label,on_Change, ...rest } = props;\n//   return (\n//     <FormField\n//       label={\n//         required ? (\n//           <Box direction=\"row\">\n//             <Text>{label}</Text>\n//             <Text color=\"status-critical\">*</Text>\n//           </Box>\n//         ) : (\n//           label\n//         )\n//       }\n//       onChange={on_Change}\n//       required={required}\n//       {...rest}\n//     />\n//   );\n// };\n\nclass tryBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Email: \"\",\n      Pw: \"\",\n      Nickname: \"\",\n      index: \"0\",\n      setIndex: \"1\" //onActive:nextIndex => setIndex(nextIndex);\n\n    };\n  } // on_Change_email\n  //\n  // on_Change_pw\n  //\n\n\n  on_Change_email(value) {\n    //const value=event.target.value\n    this.setState({\n      Email: value\n    });\n  }\n\n  on_Change_pw(value) {\n    //const value=event.target.value\n    this.setState({\n      Pw: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"sdfs\");\n  }\n\n} // const ControlledTabs = (on_Change_email,on_Change_pw) => {\n//   const [index, setIndex] = React.useState();\n//\n//   const onActive = nextIndex => setIndex(nextIndex);\n//\n//   // on_Change_email(value){\n//   //   //const value=event.target.value\n//   //   this.props.P_update_Email(value)\n//   // }\n//   // on_Change_pw = event=>{\n//   //   const value=event.target.value\n//   //   this.props.P_update_Pw(value)\n//   // }\n//\n//   return (\n//     <Grommet theme={deepMerge(grommet, customFormFieldTheme)}>\n//       <Tabs color=\"#d1bec3\" activeIndex={index} onActive={onActive}>\n//       <Tab\n//         title={\n//           <Box direction=\"row\" align=\"center\" gap=\"xsmall\" margin=\"xsmall\">\n//             <Text size=\"small\">\n//               <strong>\"LOG IN\"</strong>\n//             </Text>\n//           </Box>\n//         }\n//       >\n//         <Box fullWidth fill align=\"center\" pad=\"large\" width=\"large\" background=\"#f0dde2\">\n//           <Form>\n//             <FormFieldLabel name=\"Email\" label=\"E-mail\" P_update_value={this.on_Change_email} required />\n//             <FormFieldLabel name=\"Password\" label=\"Password\" P_update_value={this.on_Change_pw} required />\n//\n//             <Grommet>\n//               <Button left type=\"submit\" color=\"#f5edef\" label=\"Submit\" primary onClick={this.on_Submit}/>\n//               <Button plain size=\"xsmall\" color=\"#8a6e79\" label=\"forget password?\" hoverIndicator=\"true\"/>\n//             </Grommet>\n//             <Text margin={{ left: \"small\" }} size=\"small\" color=\"status-critical\">\n//               * Required Field\n//             </Text>\n//           </Form>\n//         </Box>\n//       </Tab>\n//       <Tab\n//         title={\n//           <Box direction=\"row\" align=\"center\" gap=\"xsmall\" margin=\"xsmall\">\n//             <Text size=\"small\">\n//               <strong>\"SIGN UP\"</strong>\n//             </Text>\n//           </Box>\n//         }\n//       >\n//         <Box fullWidth fill align=\"center\" pad=\"large\" width=\"large\" background=\"#f0dde2\">\n//           <Form>\n//             <FormFieldLabel name=\"email\" label=\"E-mail\" required />\n//             <FormFieldLabel name=\"Nickname\" label=\"Nickname\" required />\n//             <FormFieldLabel name=\"password\" label=\"Password\" required />\n//             <Button type=\"submit\" color=\"#f5edef\" label=\"Submit\" primary />\n//             <Text margin={{ left: \"small\" }} size=\"small\" color=\"status-critical\">\n//               * Required Field\n//             </Text>\n//           </Form>\n//         </Box>\n//       </Tab>\n//       </Tabs>\n//     </Grommet>\n//   );\n// };\n//\n// storiesOf(\"Tabs\", module).add(\"Controlled\", () => <RichTabTitle />);\n// RichTabTitle.propTypes = {\n//   icon: PropTypes.node.isRequired,\n//   label: PropTypes.string.isRequired\n// };\n\n\nstoriesOf(\"Form\", module).add(\"Required Label\", () => React.createElement(\"tryBox\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 217\n  },\n  __self: this\n}));\nexport default tryBox;","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/src/Components/Login_Related/tryBox.js"],"names":["React","makeStyles","PropTypes","storiesOf","CircleInformation","Currency","Box","Form","CheckBox","RangeInput","Select","FormField","TextArea","Button","MaskedInput","RadioButtonGroup","Grommet","Grid","Stack","Tab","Tabs","Text","TextInput","grommet","Attraction","Car","TreeOption","TextField","deepMerge","Log_in_Box","Sign_up_Box","css","FormFieldLabel","customFormFieldTheme","global","font","size","input","weight","formField","label","color","margin","border","position","side","disabled","background","opacity","content","pad","error","tab","active","undefined","hover","bottom","horizontal","extend","theme","control","radius","elevation","light","small","tryBox","Component","constructor","props","state","Email","Pw","Nickname","index","setIndex","on_Change_email","value","setState","on_Change_pw","render","module","add"],"mappings":"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,EAAAA,YAAY,CAACF,KAAD,EAAO;AAChB;AACA,SAAKC,QAAL,CACE;AAACN,MAAAA,EAAE,EAACK;AAAJ,KADF;AAGD;;AAEHG,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAID;;AAvCkC,C,CA4CrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AACA5E,SAAS,CAAC,MAAD,EAAS6E,MAAT,CAAT,CAA0BC,GAA1B,CAA8B,gBAA9B,EAAgD,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAtD;AACA,eAAehB,MAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from \"prop-types\";\nimport { storiesOf } from \"@storybook/react\";\nimport { CircleInformation, Currency } from \"grommet-icons\";\nimport { Box,Form,CheckBox,RangeInput,Select,FormField,\n  TextArea,Button,MaskedInput,RadioButtonGroup, Grommet,Grid,Stack, Tab, Tabs, Text, TextInput } from \"grommet\";\nimport { grommet } from \"grommet/themes\";\nimport { Attraction, Car, TreeOption } from \"grommet-icons\";\nimport TextField from '@material-ui/core/TextField';\nimport { deepMerge } from \"grommet/utils\";\nimport {Log_in_Box} from \"./Log_in_Box.js\"\nimport {Sign_up_Box} from \"./Sign_up_Box.js\"\nimport { css } from \"styled-components\";\nimport {FormFieldLabel} from \"./FormFieldLabel.js\"\n\n\nconst customFormFieldTheme = {\n  global: {\n    font: {\n      size: \"16px\"\n    },\n    input: {\n      weight: 400\n    }\n  },\n  formField: {\n    label: {\n      color: \"dark-3\",\n      size: \"large\",\n      margin: \"xsmall\",\n      weight: 600\n    },\n    border: {\n      position: \"outer\",\n      side: \"all\"\n    },\n    disabled: {\n      background: {\n        color: \"light-3\",\n        opacity: true\n      }\n    },\n\n    content: {\n      pad: \"small\"\n    },\n    error: {\n      background: {\n        color: \"status-critical\",\n        opacity: \"weak\"\n      }\n    },\n    margin: 30\n  },\n  tab: {\n    active: {\n      background: \"dark-1\",\n      color: \"accent-1\"\n    },\n\n    border: undefined,\n    color: \"white\",\n    hover: {\n      background: \"dark-1\"\n    },\n    margin: undefined,\n    pad: {\n      bottom: undefined,\n      horizontal: \"small\"\n    },\n    extend: ({ theme }) => css`\n      border-radius: ${theme.global.control.border.radius};\n      box-shadow: ${theme.global.elevation.light.small};\n    `\n  }\n};\n\n// const FormFieldLabel = props => {\n//   const { required, label,on_Change, ...rest } = props;\n//   return (\n//     <FormField\n//       label={\n//         required ? (\n//           <Box direction=\"row\">\n//             <Text>{label}</Text>\n//             <Text color=\"status-critical\">*</Text>\n//           </Box>\n//         ) : (\n//           label\n//         )\n//       }\n//       onChange={on_Change}\n//       required={required}\n//       {...rest}\n//     />\n//   );\n// };\n\nclass tryBox extends React.Component {\n  constructor(props){\n    super(props)\n    this.state ={\n      Email:\"\",\n      Pw:\"\",\n      Nickname:\"\",\n      index:\"0\",\n      setIndex:\"1\",\n      //onActive:nextIndex => setIndex(nextIndex);\n\n\n    }\n\n\n  }\n  // on_Change_email\n  //\n  // on_Change_pw\n  //\n  on_Change_email(value){\n     //const value=event.target.value\n     this.setState(\n       {Email:value}\n     )\n   }\n\n   on_Change_pw(value){\n      //const value=event.target.value\n      this.setState(\n        {Pw:value}\n      )\n    }\n\n  render(){\n    return (\n      <p>sdfs</p>\n    );\n\n  }\n\n\n}\n\n// const ControlledTabs = (on_Change_email,on_Change_pw) => {\n//   const [index, setIndex] = React.useState();\n//\n//   const onActive = nextIndex => setIndex(nextIndex);\n//\n//   // on_Change_email(value){\n//   //   //const value=event.target.value\n//   //   this.props.P_update_Email(value)\n//   // }\n//   // on_Change_pw = event=>{\n//   //   const value=event.target.value\n//   //   this.props.P_update_Pw(value)\n//   // }\n//\n//   return (\n//     <Grommet theme={deepMerge(grommet, customFormFieldTheme)}>\n//       <Tabs color=\"#d1bec3\" activeIndex={index} onActive={onActive}>\n//       <Tab\n//         title={\n//           <Box direction=\"row\" align=\"center\" gap=\"xsmall\" margin=\"xsmall\">\n//             <Text size=\"small\">\n//               <strong>\"LOG IN\"</strong>\n//             </Text>\n//           </Box>\n//         }\n//       >\n//         <Box fullWidth fill align=\"center\" pad=\"large\" width=\"large\" background=\"#f0dde2\">\n//           <Form>\n//             <FormFieldLabel name=\"Email\" label=\"E-mail\" P_update_value={this.on_Change_email} required />\n//             <FormFieldLabel name=\"Password\" label=\"Password\" P_update_value={this.on_Change_pw} required />\n//\n//             <Grommet>\n//               <Button left type=\"submit\" color=\"#f5edef\" label=\"Submit\" primary onClick={this.on_Submit}/>\n//               <Button plain size=\"xsmall\" color=\"#8a6e79\" label=\"forget password?\" hoverIndicator=\"true\"/>\n//             </Grommet>\n//             <Text margin={{ left: \"small\" }} size=\"small\" color=\"status-critical\">\n//               * Required Field\n//             </Text>\n//           </Form>\n//         </Box>\n//       </Tab>\n//       <Tab\n//         title={\n//           <Box direction=\"row\" align=\"center\" gap=\"xsmall\" margin=\"xsmall\">\n//             <Text size=\"small\">\n//               <strong>\"SIGN UP\"</strong>\n//             </Text>\n//           </Box>\n//         }\n//       >\n//         <Box fullWidth fill align=\"center\" pad=\"large\" width=\"large\" background=\"#f0dde2\">\n//           <Form>\n//             <FormFieldLabel name=\"email\" label=\"E-mail\" required />\n//             <FormFieldLabel name=\"Nickname\" label=\"Nickname\" required />\n//             <FormFieldLabel name=\"password\" label=\"Password\" required />\n//             <Button type=\"submit\" color=\"#f5edef\" label=\"Submit\" primary />\n//             <Text margin={{ left: \"small\" }} size=\"small\" color=\"status-critical\">\n//               * Required Field\n//             </Text>\n//           </Form>\n//         </Box>\n//       </Tab>\n//       </Tabs>\n//     </Grommet>\n//   );\n// };\n//\n\n// storiesOf(\"Tabs\", module).add(\"Controlled\", () => <RichTabTitle />);\n// RichTabTitle.propTypes = {\n//   icon: PropTypes.node.isRequired,\n//   label: PropTypes.string.isRequired\n// };\nstoriesOf(\"Form\", module).add(\"Required Label\", () => <tryBox />);\nexport default tryBox;\n"]},"metadata":{},"sourceType":"module"}