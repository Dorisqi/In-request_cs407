{"ast":null,"code":"var _jsxFileName = \"/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/src/Components/Shared/SideBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\nimport Profile from '../Home/profile';\nimport Posts from '../Home/Posts.js';\nimport NewRequest from '../Home/NewRequest';\nimport Upload from '../Home/uploadimg';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, useTheme } from '@material-ui/core/styles';\nimport { auth } from \"../../firebase\";\nimport { fdb } from \"../../firebase\";\nimport { useLocation } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport ActiveTransaction from \"../Home/ActiveTransaction\";\nimport Archived from \"../Home/Archived\";\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  listItemText: {\n    fontSize: '1.8em'\n  }\n});\n\nclass SideBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Logout = event => {\n      //const loc = useLocation();\n      //console.log(this.props.location.state.Email)\n      // console.log(prevProps.Email)\n      const email = this.props.location.state.Email;\n      const history = this.props.history;\n      auth.signOut().then(function () {\n        // log-out successful.\n        //const email = this.props.location.state.Email\n        const ref = fdb.collection('users').doc(email);\n        ref.update({\n          LoginState: false\n        }).then(() => {\n          console.log('logout successful');\n          history.push(\"/login\");\n        });\n      }).catch(err => {\n        // An error happened.\n        console.log('Error logging out', err);\n      });\n    };\n\n    this.state = {\n      Email: \"\",\n      Password: \"\",\n      Nickname: \"\",\n      auth: this.auth,\n      fdb: this.fdb,\n      name: \"\"\n    }; // this.handleDrawerToggle = this.handleDrawerToggle.bind(this)\n\n    this.Logout = this.Logout.bind(this);\n    var user = auth.currentUser;\n\n    if (user) {\n      let que = fdb.collection(\"requests\").where(\"borrower\", \"==\", user.email);\n      que.get().then(function (qss) {\n        qss.forEach(function (doc) {\n          var curtime = Date.now() / 1000;\n          var duetime = doc.data().estReturn.seconds;\n          var diff = duetime - curtime;\n\n          if (diff < 0 && doc.data().status == \"active\") {\n            alert(\"Your post <\" + doc.data().title + \"> is not active anymore\");\n            var upd = fdb.collection(\"requests\").doc(doc.id);\n            upd.update({\n              status: \"archived\",\n              msfinished: true\n            });\n          }\n        });\n      }); //**************************************************************this part is for checking if past due**********************************\n\n      setInterval(function () {\n        let que = fdb.collection(\"requests\").where(\"borrower\", \"==\", user.email);\n        que.get().then(function (qss) {\n          qss.forEach(function (doc) {\n            var curtime = Date.now() / 1000;\n            var duetime = doc.data().estReturn.seconds;\n            var diff = duetime - curtime;\n\n            if (diff < 0 && doc.data().status == \"active\") {\n              alert(\"Your post <\" + doc.data().title + \"> is not active anymore\");\n              var upd = fdb.collection(\"requests\").doc(doc.id);\n              upd.update({\n                status: \"archived\",\n                msfinished: true\n              });\n            }\n          });\n        });\n      }, 60000); //60000 == 1min\n      //**************************************************************this part is for checking if past due**********************************\n      //**************************************************************this part is for alerting borrower about lender************************\n\n      let query = fdb.collection(\"requests\").where(\"borrower\", \"==\", user.email).where(\"msnone\", \"==\", true);\n      let liste = query.onSnapshot(docSnapshot => {\n        docSnapshot.docChanges().forEach(function (change) {\n          if (change.doc.data().msoffered == true && change.doc.data().msaccepted == false && change.doc.data().status != \"archived\") {\n            alert(\"someone decided to lend you an item on title <\" + change.doc.data().title + \">\");\n          }\n        });\n      }); //**************************************************************this part is for alerting borrower about lender************************\n      //***************************************************************this part is for alerting the borrower about lender's declineness******\n\n      let queuery = fdb.collection(\"requests\").where(\"borrower\", \"==\", user.email).where(\"msaccepted\", \"==\", false);\n      var checker = true;\n      let liste3 = queuery.onSnapshot(docSnapshot => {\n        docSnapshot.docChanges().forEach(function (change) {\n          if (change.doc.data().lender != \"\" && change.doc.data().msaccepted == false) {\n            checker = false;\n            alert(\"The lender declined your invitation, please choose another lender.\");\n            var upd = fdb.collection(\"requests\").doc(change.doc.id);\n            upd.update({\n              //msaccepted: false,\n              lender: ''\n            });\n          }\n        });\n      }); //***************************************************************this part is for alerting the borrower about lender's declineness*******\n      //**************************************************************this part is for let lender confirm status ****************************\n\n      let query2 = fdb.collection(\"requests\").where(\"lender\", \"==\", user.email).where(\"msoffered\", \"==\", true);\n      let liste2 = query2.onSnapshot(docSnapshot => {\n        docSnapshot.docChanges().forEach(function (change2) {\n          if (change2.doc.data().lender == user.email && change2.doc.data().msaccepted == true && change2.doc.data().msstarted == false) {\n            var action = window.confirm(change2.doc.data().borrower + \" decided to borrow your item,\\n\" + change2.doc.data().lender + \" now is the lender,\" + \"\\ntitle is <\" + change2.doc.data().title + \">\");\n\n            if (action == true) {\n              alert(\"you decided to lend your stuff\");\n              var upd = fdb.collection(\"requests\").doc(change2.doc.id);\n              upd.update({\n                msaccepted: true\n              }); //in here, should change the msaccepted as true, as well as noticing other lenders that they dont need to worry about the post.\n            } else {\n              alert(\"you decided not to lend your stuff\");\n              var upd = fdb.collection(\"requests\").doc(change2.doc.id);\n              upd.update({\n                msaccepted: false //lender: '',\n\n              });\n            }\n          }\n\n          ;\n        });\n      });\n    } else {}\n  }\n\n  componentWillUnmount() {\n    const email = this.props.location.state.Email;\n    const history = this.props.history;\n    auth.signOut().then(function () {\n      // log-out successful.\n      //const email = this.props.location.state.Email\n      const ref = fdb.collection('users').doc(email);\n      ref.update({\n        LoginState: false\n      }).then(() => {\n        console.log('logout successful');\n        history.push(\"/login\");\n      });\n    }).catch(err => {\n      // An error happened.\n      console.log('Error logging out', err);\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const theme = useTheme;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: classes.drawer,\n      \"aria-label\": \"mailbox folders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Hidden, {\n      xsDown: true,\n      implementation: \"css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      classes: {\n        paper: styles.drawerPaper\n      },\n      variant: \"permanent\",\n      open: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"icon-button-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"primary\",\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    })), React.createElement(Upload, {\n      url: this.props.location.state.url,\n      Email: this.props.location.state.Email,\n      Nickname: this.props.location.state.Nickname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, ['Posts', 'New Request', 'Active Transaction', 'Archived'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      key: text,\n      component: Link,\n      to: \"/\" + text.replace(/\\s/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }) : React.createElement(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: {\n        primary: classes.listItemText\n      },\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    })))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, ['Profile', 'Log Out'].map((text, index) => React.createElement(ListItem, {\n      button: true,\n      onClick: this.Logout,\n      key: text,\n      component: Link,\n      to: \"/\" + text.replace(/\\s/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }) : React.createElement(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      classes: {\n        primary: classes.listItemText\n      },\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    })))))))), React.createElement(\"main\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Posts, {\n      Email: this.props.location.state.Email,\n      Nickname: this.props.location.state.Nickname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/NewRequest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(NewRequest, {\n      hasPhoto: this.props.location.state.hasPhoto,\n      Email: this.props.location.state.Email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/ActiveTransaction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(ActiveTransaction, {\n      curUser: this.props.location.state.Email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/Archived\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Archived, {\n      curUser: this.props.location.state.Email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }))))));\n  }\n\n} //\n// function SideBar(props) {\n//   const { container,location } = props;\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [mobileOpen, setMobileOpen] = React.useState(false);\n//\n//   const handleDrawerToggle = () => {\n//     setMobileOpen(!mobileOpen);\n//   };\n//   const Logout=()=>{\n//     auth.signOut().then(function() {\n//   // log-out successful.\n//       console.log(auth.currentUser)\n//       const ref = fdb.collection('users').doc(props.location.state.Email);\n//       ref.update({\n//         LoginState: false\n//       }).then(() => {\n//         console.log('logout successful');\n//         this.props.history.push(\"/login\");\n//       });\n//     }).catch(err => {\n//       // An error happened.\n//       console.log('Error logging out', err);\n//     });\n//   }\n//\n//   const drawer = (\n//     <div>\n//       <div className={classes.toolbar} />\n//       <Grid container justify = \"center\">\n//\n//         {/* --- TODO: clickable IconButton --- */}\n//         <label htmlFor=\"icon-button-file\">\n//           <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n//             {/* --- TODO: display user's profile picture -- */}\n//           </IconButton>\n//         </label>\n//\n//         {/* --- TODO: clickable image --- */}\n//\n//         {/* --- TODO: display user's rating -- */}\n//         <Upload/>\n//       </Grid>\n//       <br />\n//       <br />\n//       <Divider />\n//       <List>\n//         {['Posts', 'New Request', 'Active Transaction', 'Archived'].map((text, index) => (\n//           <ListItem button key={text} component={Link} to={\"/\" + text.replace(/\\s/g,'')}>\n//             <ListItemIcon>\n//               {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n//             </ListItemIcon>\n//             <ListItemText primary={text} />\n//           </ListItem>\n//         ))}\n//       </List>\n//       <Divider />\n//       <List>\n//         {['Profile', 'Log Out'].map((text, index) => (\n//           <ListItem button onClick={Logout} key={text} component={Link} to={\"/\" + text.replace(/\\s/g,'')}>\n//             <ListItemIcon>\n//               {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n//             </ListItemIcon>\n//             <ListItemText primary={text} />\n//           </ListItem>\n//         ))}\n//       </List>\n//     </div>\n//   );\n//\n//   return (\n//     <div className={classes.root}>\n//       <CssBaseline />\n//       <BrowserRouter>\n//         <nav className={classes.drawer} aria-label=\"mailbox folders\">\n//           {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n//           <Hidden xsDown implementation=\"css\">\n//             <Drawer\n//               classes={{\n//                 paper: classes.drawerPaper,\n//               }}\n//               variant=\"permanent\"\n//               open\n//             >\n//               {drawer}\n//             </Drawer>\n//           </Hidden>\n//         </nav>\n//         {/*--- Add remaing components to each Route  ---*/}\n//         <main className={classes.content}>\n//           <div className={classes.toolbar} />\n//           <Switch>\n//             <Route exact path=\"/posts\">\n//               <Posts />\n//             </Route>\n//             <Route path=\"/profile\">\n//               <Profile />\n//             </Route>\n//             <Route path=\"/NewRequest\">\n//               <NewRequest />\n//             </Route>\n//           </Switch>\n//         </main>\n//       </BrowserRouter>\n//     </div>\n//   );\n// }\n//\n\n\nSideBar.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  container: PropTypes.instanceOf(typeof Element === \"undefined\" ? Object : Element),\n  Email: PropTypes.string // auth:PropTypes.object\n\n};\nexport default withRouter(withStyles(styles, {\n  withTheme: true\n})(SideBar));","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/src/Components/Shared/SideBar.js"],"names":["React","PropTypes","AppBar","CssBaseline","Divider","Drawer","Hidden","IconButton","InboxIcon","List","ListItem","ListItemIcon","ListItemText","MailIcon","MenuIcon","Toolbar","Typography","Grid","Avatar","Switch","Route","Link","BrowserRouter","Profile","Posts","NewRequest","Upload","Button","withStyles","useTheme","auth","fdb","useLocation","withRouter","ActiveTransaction","Archived","drawerWidth","styles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","listItemText","fontSize","SideBar","Component","constructor","props","Logout","event","email","location","state","Email","history","signOut","then","ref","collection","doc","update","LoginState","console","log","push","catch","err","Password","Nickname","name","bind","user","currentUser","que","where","get","qss","forEach","curtime","Date","now","duetime","data","estReturn","seconds","diff","status","alert","title","upd","id","msfinished","setInterval","query","liste","onSnapshot","docSnapshot","docChanges","change","msoffered","msaccepted","queuery","checker","liste3","lender","query2","liste2","change2","msstarted","action","window","confirm","borrower","componentWillUnmount","render","classes","paper","url","map","text","index","replace","primary","hasPhoto","propTypes","container","instanceOf","Element","Object","string","withTheme"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar'\nimport { Switch, Route, Link, BrowserRouter } from \"react-router-dom\";\nimport Profile from '../Home/profile';\nimport Posts from '../Home/Posts.js';\nimport NewRequest from '../Home/NewRequest';\nimport Upload from '../Home/uploadimg';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, useTheme } from '@material-ui/core/styles';\nimport {auth} from \"../../firebase\";\nimport {fdb} from \"../../firebase\";\nimport { useLocation } from \"react-router-dom\";\nimport {withRouter } from \"react-router-dom\";\nimport ActiveTransaction from \"../Home/ActiveTransaction\"\nimport Archived from \"../Home/Archived\"\n\nconst drawerWidth = 240;\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  listItemText:{\n    fontSize:'1.8em',\n  }\n});\nclass SideBar extends React.Component {\n  constructor(props){\n    super(props)\n    this.state ={\n      Email:\"\",\n      Password:\"\",\n      Nickname:\"\",\n      auth: this.auth,\n      fdb: this.fdb,\n      name:\"\",\n\n\n\n\n    }\n    // this.handleDrawerToggle = this.handleDrawerToggle.bind(this)\n    this.Logout= this.Logout.bind(this)\n    var user = auth.currentUser;\n    if(user){\n        let que = fdb.collection(\"requests\").where(\"borrower\", \"==\", user.email);\n        que.get().then(function(qss){\n            qss.forEach(function(doc){\n                var curtime = Date.now()/1000;\n                var duetime = doc.data().estReturn.seconds;\n                var diff = duetime - curtime;\n                if(diff < 0 && doc.data().status == \"active\"){\n                    alert(\"Your post <\" + doc.data().title + \"> is not active anymore\");\n                    var upd = fdb.collection(\"requests\").doc(doc.id);\n                    upd.update({\n                        status:\"archived\",\n                        msfinished: true,\n                    })\n                }\n            });\n        });\n    //**************************************************************this part is for checking if past due**********************************\n        setInterval(function(){\n            let que = fdb.collection(\"requests\").where(\"borrower\", \"==\", user.email);\n            que.get().then(function(qss){\n                qss.forEach(function(doc){\n                    var curtime = Date.now()/1000;\n                    var duetime = doc.data().estReturn.seconds;\n                    var diff = duetime - curtime;\n                    if(diff < 0 && doc.data().status == \"active\"){\n                        alert(\"Your post <\" + doc.data().title + \"> is not active anymore\");\n                        var upd = fdb.collection(\"requests\").doc(doc.id);\n                        upd.update({\n                            status:\"archived\",\n                            msfinished: true,\n                        })\n                    }\n                });\n            });\n        },60000);//60000 == 1min\n  //**************************************************************this part is for checking if past due**********************************\n\n//**************************************************************this part is for alerting borrower about lender************************\n    let query = fdb.collection(\"requests\").where(\"borrower\", \"==\", user.email).where(\"msnone\", \"==\", true);\n    let liste = query.onSnapshot(docSnapshot => {\n        docSnapshot.docChanges().forEach(function(change){\n            if(change.doc.data().msoffered == true && change.doc.data().msaccepted == false && change.doc.data().status != \"archived\"){\n                alert(\"someone decided to lend you an item on title <\" + change.doc.data().title + \">\");\n            }\n        });\n    });\n\n//**************************************************************this part is for alerting borrower about lender************************\n\n\n//***************************************************************this part is for alerting the borrower about lender's declineness******\n    let queuery = fdb.collection(\"requests\").where(\"borrower\", \"==\", user.email).where(\"msaccepted\", \"==\", false);\n    var checker = true;\n    let liste3 = queuery.onSnapshot(docSnapshot => {\n        docSnapshot.docChanges().forEach(function(change){\n            if(change.doc.data().lender != \"\" && change.doc.data().msaccepted == false){\n                checker = false;\n                alert(\"The lender declined your invitation, please choose another lender.\");\n                var upd = fdb.collection(\"requests\").doc(change.doc.id);\n                upd.update({\n                    //msaccepted: false,\n                    lender: '',\n\n                })\n            }\n        });\n    });\n\n\n//***************************************************************this part is for alerting the borrower about lender's declineness*******\n\n\n//**************************************************************this part is for let lender confirm status ****************************\n\n    let query2 = fdb.collection(\"requests\").where(\"lender\", \"==\", user.email).where(\"msoffered\", \"==\", true);\n    let liste2 = query2.onSnapshot(docSnapshot => {\n        docSnapshot.docChanges().forEach(function(change2){\n            if(change2.doc.data().lender == user.email && change2.doc.data().msaccepted == true && change2.doc.data().msstarted == false){\n                var action = window.confirm(change2.doc.data().borrower + \" decided to borrow your item,\\n\" + change2.doc.data().lender + \" now is the lender,\" + \"\\ntitle is <\" + change2.doc.data().title + \">\");\n                if(action == true){\n                    alert(\"you decided to lend your stuff\")\n                    var upd = fdb.collection(\"requests\").doc(change2.doc.id);\n                    upd.update({\n                        msaccepted: true,\n                    })\n                    //in here, should change the msaccepted as true, as well as noticing other lenders that they dont need to worry about the post.\n                }\n                else{\n                    alert(\"you decided not to lend your stuff\")\n                    var upd = fdb.collection(\"requests\").doc(change2.doc.id);\n                    upd.update({\n                        msaccepted: false,\n                        //lender: '',\n                    })\n                }\n            };\n\n        });\n    });\n\n}else{}\n\n  }\n\n\n  Logout=event=>{\n    //const loc = useLocation();\n    //console.log(this.props.location.state.Email)\n    // console.log(prevProps.Email)\n    const email = this.props.location.state.Email\n    const history = this.props.history\n    auth.signOut().then(function() {\n  // log-out successful.\n      //const email = this.props.location.state.Email\n      const ref = fdb.collection('users').doc(email);\n      ref.update({\n        LoginState: false\n      }).then(() => {\n        console.log('logout successful');\n        history.push(\"/login\");\n      });\n    }).catch(err => {\n      // An error happened.\n      console.log('Error logging out', err);\n    });\n  }\n\n  componentWillUnmount(){\n    const email = this.props.location.state.Email\n    const history = this.props.history\n    auth.signOut().then(function() {\n  // log-out successful.\n      //const email = this.props.location.state.Email\n      const ref = fdb.collection('users').doc(email);\n      ref.update({\n        LoginState: false\n      }).then(() => {\n        console.log('logout successful');\n        history.push(\"/login\");\n      });\n    }).catch(err => {\n      // An error happened.\n      console.log('Error logging out', err);\n    });\n  }\n  render(){\n    const {classes} = this.props;\n    const theme = useTheme;\n    return(\n\n        <div className={classes.root}>\n        <CssBaseline />\n        <BrowserRouter>\n          <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            <Hidden xsDown implementation=\"css\">\n              <Drawer\n                classes={{\n                  paper: styles.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n              >\n              <div>\n                <div className={classes.toolbar} />\n                <Grid container justify = \"center\">\n\n                  <label htmlFor=\"icon-button-file\">\n                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                    </IconButton>\n                  </label>\n\n                  <Upload url={this.props.location.state.url} Email={this.props.location.state.Email} Nickname={this.props.location.state.Nickname}/>\n                </Grid>\n                <br />\n                <br />\n                <Divider />\n                <List>\n                  {['Posts', 'New Request', 'Active Transaction', 'Archived'].map((text, index) => (\n                    <ListItem button key={text} component={Link} to={\"/\" + text.replace(/\\s/g,'')}>\n                      <ListItemIcon>\n                        {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                      </ListItemIcon>\n                      <ListItemText classes={{primary:classes.listItemText}} primary={text} />\n                    </ListItem>\n                  ))}\n                </List>\n                <Divider />\n                <List>\n                  {['Profile', 'Log Out'].map((text, index) => (\n                    <ListItem button onClick={this.Logout} key={text} component={Link} to={\"/\" + text.replace(/\\s/g,'')}>\n                      <ListItemIcon>\n                        {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                      </ListItemIcon>\n                      <ListItemText classes={{primary:classes.listItemText}} primary={text} />\n                    </ListItem>\n                  ))}\n                </List>\n                </div>\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Switch>\n              <Route exact path=\"/posts\">\n                <Posts Email={this.props.location.state.Email} Nickname={this.props.location.state.Nickname}/>\n              </Route>\n              <Route path=\"/profile\">\n\n              </Route>\n              <Route path=\"/NewRequest\">\n                <NewRequest hasPhoto={this.props.location.state.hasPhoto} Email={this.props.location.state.Email}/>\n              </Route>\n              <Route path=\"/ActiveTransaction\">\n                <ActiveTransaction curUser = {this.props.location.state.Email}/>\n              </Route>\n              <Route path=\"/Archived\">\n                <Archived curUser = {this.props.location.state.Email} />\n              </Route>\n            </Switch>\n          </main>\n        </BrowserRouter>\n      </div>\n    );\n  }\n\n\n}\n//\n// function SideBar(props) {\n//   const { container,location } = props;\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   const [mobileOpen, setMobileOpen] = React.useState(false);\n//\n//   const handleDrawerToggle = () => {\n//     setMobileOpen(!mobileOpen);\n//   };\n//   const Logout=()=>{\n//     auth.signOut().then(function() {\n//   // log-out successful.\n//       console.log(auth.currentUser)\n//       const ref = fdb.collection('users').doc(props.location.state.Email);\n//       ref.update({\n//         LoginState: false\n//       }).then(() => {\n//         console.log('logout successful');\n//         this.props.history.push(\"/login\");\n//       });\n//     }).catch(err => {\n//       // An error happened.\n//       console.log('Error logging out', err);\n//     });\n//   }\n//\n//   const drawer = (\n//     <div>\n//       <div className={classes.toolbar} />\n//       <Grid container justify = \"center\">\n//\n//         {/* --- TODO: clickable IconButton --- */}\n//         <label htmlFor=\"icon-button-file\">\n//           <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n//             {/* --- TODO: display user's profile picture -- */}\n//           </IconButton>\n//         </label>\n//\n//         {/* --- TODO: clickable image --- */}\n//\n//         {/* --- TODO: display user's rating -- */}\n//         <Upload/>\n//       </Grid>\n//       <br />\n//       <br />\n//       <Divider />\n//       <List>\n//         {['Posts', 'New Request', 'Active Transaction', 'Archived'].map((text, index) => (\n//           <ListItem button key={text} component={Link} to={\"/\" + text.replace(/\\s/g,'')}>\n//             <ListItemIcon>\n//               {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n//             </ListItemIcon>\n//             <ListItemText primary={text} />\n//           </ListItem>\n//         ))}\n//       </List>\n//       <Divider />\n//       <List>\n//         {['Profile', 'Log Out'].map((text, index) => (\n//           <ListItem button onClick={Logout} key={text} component={Link} to={\"/\" + text.replace(/\\s/g,'')}>\n//             <ListItemIcon>\n//               {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n//             </ListItemIcon>\n//             <ListItemText primary={text} />\n//           </ListItem>\n//         ))}\n//       </List>\n//     </div>\n//   );\n//\n//   return (\n//     <div className={classes.root}>\n//       <CssBaseline />\n//       <BrowserRouter>\n//         <nav className={classes.drawer} aria-label=\"mailbox folders\">\n//           {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n//           <Hidden xsDown implementation=\"css\">\n//             <Drawer\n//               classes={{\n//                 paper: classes.drawerPaper,\n//               }}\n//               variant=\"permanent\"\n//               open\n//             >\n//               {drawer}\n//             </Drawer>\n//           </Hidden>\n//         </nav>\n//         {/*--- Add remaing components to each Route  ---*/}\n//         <main className={classes.content}>\n//           <div className={classes.toolbar} />\n//           <Switch>\n//             <Route exact path=\"/posts\">\n//               <Posts />\n//             </Route>\n//             <Route path=\"/profile\">\n//               <Profile />\n//             </Route>\n//             <Route path=\"/NewRequest\">\n//               <NewRequest />\n//             </Route>\n//           </Switch>\n//         </main>\n//       </BrowserRouter>\n//     </div>\n//   );\n// }\n//\nSideBar.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n   container: PropTypes.instanceOf(\n     typeof Element === \"undefined\" ? Object : Element\n ),\n    Email:PropTypes.string,\n    // auth:PropTypes.object\n};\n\nexport default withRouter(withStyles(styles, {withTheme: true})(SideBar));\n"]},"metadata":{},"sourceType":"module"}