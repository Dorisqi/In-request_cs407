{"ast":null,"code":"\"use strict\";\n\nmodule.exports = BufferReader; // extends Reader\n\nvar Reader = require(\"./reader\");\n\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\n\n\nfunction BufferReader(buffer) {\n  Reader.call(this, buffer);\n  /**\r\n   * Read buffer.\r\n   * @name BufferReader#buf\r\n   * @type {Buffer}\r\n   */\n}\n/* istanbul ignore else */\n\n\nif (util.Buffer) BufferReader.prototype._slice = util.Buffer.prototype.slice;\n/**\r\n * @override\r\n */\n\nBufferReader.prototype.string = function read_string_buffer() {\n  var len = this.uint32(); // modifies pos\n\n  return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/protobufjs/src/reader_buffer.js"],"names":["module","exports","BufferReader","Reader","require","prototype","Object","create","constructor","util","buffer","call","Buffer","_slice","slice","string","read_string_buffer","len","uint32","buf","utf8Slice","pos","Math","min"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,YAAjB,C,CAEA;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,CAACF,YAAY,CAACG,SAAb,GAAyBC,MAAM,CAACC,MAAP,CAAcJ,MAAM,CAACE,SAArB,CAA1B,EAA2DG,WAA3D,GAAyEN,YAAzE;;AAEA,IAAIO,IAAI,GAAGL,OAAO,CAAC,gBAAD,CAAlB;AAEA;;;;;;;;;AAOA,SAASF,YAAT,CAAsBQ,MAAtB,EAA8B;AAC1BP,EAAAA,MAAM,CAACQ,IAAP,CAAY,IAAZ,EAAkBD,MAAlB;AAEA;;;;;AAKH;AAED;;;AACA,IAAID,IAAI,CAACG,MAAT,EACIV,YAAY,CAACG,SAAb,CAAuBQ,MAAvB,GAAgCJ,IAAI,CAACG,MAAL,CAAYP,SAAZ,CAAsBS,KAAtD;AAEJ;;;;AAGAZ,YAAY,CAACG,SAAb,CAAuBU,MAAvB,GAAgC,SAASC,kBAAT,GAA8B;AAC1D,MAAIC,GAAG,GAAG,KAAKC,MAAL,EAAV,CAD0D,CACjC;;AACzB,SAAO,KAAKC,GAAL,CAASC,SAAT,CAAmB,KAAKC,GAAxB,EAA6B,KAAKA,GAAL,GAAWC,IAAI,CAACC,GAAL,CAAS,KAAKF,GAAL,GAAWJ,GAApB,EAAyB,KAAKA,GAA9B,CAAxC,CAAP;AACH,CAHD;AAKA","sourcesContent":["\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n"]},"metadata":{},"sourceType":"script"}