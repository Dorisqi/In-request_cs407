{"ast":null,"code":"/**\n * @preserve date-and-time.js (c) KNOWLEDGECODE | MIT\n */\n(function (global) {\n  'use strict';\n\n  var date = {},\n      locales = {},\n      plugins = {},\n      lang = 'en',\n      _res = {\n    MMMM: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    MMM: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    dddd: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    ddd: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    dd: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    A: ['AM', 'PM']\n  },\n      _formatter = {\n    YYYY: function (d\n    /*, formatString*/\n    ) {\n      return ('000' + d.getFullYear()).slice(-4);\n    },\n    YY: function (d\n    /*, formatString*/\n    ) {\n      return ('0' + d.getFullYear()).slice(-2);\n    },\n    Y: function (d\n    /*, formatString*/\n    ) {\n      return '' + d.getFullYear();\n    },\n    MMMM: function (d\n    /*, formatString*/\n    ) {\n      return this.res.MMMM[d.getMonth()];\n    },\n    MMM: function (d\n    /*, formatString*/\n    ) {\n      return this.res.MMM[d.getMonth()];\n    },\n    MM: function (d\n    /*, formatString*/\n    ) {\n      return ('0' + (d.getMonth() + 1)).slice(-2);\n    },\n    M: function (d\n    /*, formatString*/\n    ) {\n      return '' + (d.getMonth() + 1);\n    },\n    DD: function (d\n    /*, formatString*/\n    ) {\n      return ('0' + d.getDate()).slice(-2);\n    },\n    D: function (d\n    /*, formatString*/\n    ) {\n      return '' + d.getDate();\n    },\n    HH: function (d\n    /*, formatString*/\n    ) {\n      return ('0' + d.getHours()).slice(-2);\n    },\n    H: function (d\n    /*, formatString*/\n    ) {\n      return '' + d.getHours();\n    },\n    A: function (d\n    /*, formatString*/\n    ) {\n      return this.res.A[d.getHours() > 11 | 0];\n    },\n    hh: function (d\n    /*, formatString*/\n    ) {\n      return ('0' + (d.getHours() % 12 || 12)).slice(-2);\n    },\n    h: function (d\n    /*, formatString*/\n    ) {\n      return '' + (d.getHours() % 12 || 12);\n    },\n    mm: function (d\n    /*, formatString*/\n    ) {\n      return ('0' + d.getMinutes()).slice(-2);\n    },\n    m: function (d\n    /*, formatString*/\n    ) {\n      return '' + d.getMinutes();\n    },\n    ss: function (d\n    /*, formatString*/\n    ) {\n      return ('0' + d.getSeconds()).slice(-2);\n    },\n    s: function (d\n    /*, formatString*/\n    ) {\n      return '' + d.getSeconds();\n    },\n    SSS: function (d\n    /*, formatString*/\n    ) {\n      return ('00' + d.getMilliseconds()).slice(-3);\n    },\n    SS: function (d\n    /*, formatString*/\n    ) {\n      return ('0' + (d.getMilliseconds() / 10 | 0)).slice(-2);\n    },\n    S: function (d\n    /*, formatString*/\n    ) {\n      return '' + (d.getMilliseconds() / 100 | 0);\n    },\n    dddd: function (d\n    /*, formatString*/\n    ) {\n      return this.res.dddd[d.getDay()];\n    },\n    ddd: function (d\n    /*, formatString*/\n    ) {\n      return this.res.ddd[d.getDay()];\n    },\n    dd: function (d\n    /*, formatString*/\n    ) {\n      return this.res.dd[d.getDay()];\n    },\n    Z: function (d\n    /*, formatString*/\n    ) {\n      return d.utc ? '+0000' : /[\\+-]\\d{4}/.exec(d.toTimeString())[0];\n    },\n    post: function (str) {\n      return str;\n    }\n  },\n      _parser = {\n    YYYY: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d{4}/, str);\n    },\n    Y: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d{1,4}/, str);\n    },\n    MMMM: function (str\n    /*, formatString */\n    ) {\n      var result = this.find(this.res.MMMM, str);\n      result.value++;\n      return result;\n    },\n    MMM: function (str\n    /*, formatString */\n    ) {\n      var result = this.find(this.res.MMM, str);\n      result.value++;\n      return result;\n    },\n    MM: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d\\d/, str);\n    },\n    M: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d\\d?/, str);\n    },\n    DD: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d\\d/, str);\n    },\n    D: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d\\d?/, str);\n    },\n    HH: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d\\d/, str);\n    },\n    H: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d\\d?/, str);\n    },\n    A: function (str\n    /*, formatString */\n    ) {\n      return this.find(this.res.A, str);\n    },\n    hh: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d\\d/, str);\n    },\n    h: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d\\d?/, str);\n    },\n    mm: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d\\d/, str);\n    },\n    m: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d\\d?/, str);\n    },\n    ss: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d\\d/, str);\n    },\n    s: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d\\d?/, str);\n    },\n    SSS: function (str\n    /*, formatString */\n    ) {\n      return this.exec(/^\\d{1,3}/, str);\n    },\n    SS: function (str\n    /*, formatString */\n    ) {\n      var result = this.exec(/^\\d\\d?/, str);\n      result.value *= 10;\n      return result;\n    },\n    S: function (str\n    /*, formatString */\n    ) {\n      var result = this.exec(/^\\d/, str);\n      result.value *= 100;\n      return result;\n    },\n    Z: function (str\n    /*, formatString */\n    ) {\n      var result = this.exec(/^[\\+-]\\d{2}[0-5]\\d/, str);\n      result.value = (result.value / 100 | 0) * -60 - result.value % 100;\n      return result;\n    },\n    h12: function (h, a) {\n      return (h === 12 ? 0 : h) + a * 12;\n    },\n    exec: function (re, str) {\n      var result = (re.exec(str) || [''])[0];\n      return {\n        value: result | 0,\n        length: result.length\n      };\n    },\n    find: function (array, str) {\n      var index = -1,\n          length = 0;\n\n      for (var i = 0, len = array.length, item; i < len; i++) {\n        item = array[i];\n\n        if (!str.indexOf(item) && item.length > length) {\n          index = i;\n          length = item.length;\n        }\n      }\n\n      return {\n        value: index,\n        length: length\n      };\n    },\n    pre: function (str) {\n      return str;\n    }\n  },\n      customize = function (code, base, locale) {\n    var extend = function (proto, props, res) {\n      var Locale = function (r) {\n        if (r) {\n          this.res = r;\n        }\n      };\n\n      Locale.prototype = proto;\n      Locale.prototype.constructor = Locale;\n      var newLocale = new Locale(res),\n          value;\n\n      for (var key in props || {}) {\n        if (props.hasOwnProperty(key)) {\n          value = props[key];\n          newLocale[key] = value.slice ? value.slice() : value;\n        }\n      }\n\n      return newLocale;\n    },\n        loc = {\n      res: extend(base.res, locale.res)\n    };\n\n    loc.formatter = extend(base.formatter, locale.formatter, loc.res);\n    loc.parser = extend(base.parser, locale.parser, loc.res);\n    locales[code] = loc;\n  };\n  /**\n   * formatting a date\n   * @param {Date} dateObj - a Date object\n   * @param {string} formatString - a format string\n   * @param {boolean} [utc] - output as UTC\n   * @returns {string} a formatted string\n   */\n\n\n  date.format = function (dateObj, formatString, utc) {\n    var d = date.addMinutes(dateObj, utc ? dateObj.getTimezoneOffset() : 0),\n        formatter = locales[lang].formatter;\n    d.utc = utc;\n    return formatString.replace(/\\[[^\\[\\]]*]|\\[.*\\][^\\[]*\\]|([A-Za-z])\\1*|./g, function (token) {\n      return formatter[token] ? formatter.post(formatter[token](d, formatString)) : token.replace(/\\[(.*)]/, '$1');\n    });\n  };\n  /**\n   * compiling a format string for the parser\n   * @param {string} formatString - a format string\n   * @returns {Array.<string>} a compiled object\n   */\n\n\n  date.compile = function (formatString) {\n    var re = /([A-Za-z])\\1*|./g,\n        keys,\n        pattern = [formatString];\n    formatString = formatString.replace(/\\[[^\\[\\]]*]|\\[.*\\][^\\[]*\\]/g, function (str) {\n      return str.replace(/./g, ' ').slice(2);\n    });\n\n    while (keys = re.exec(formatString)) {\n      pattern[pattern.length] = keys[0];\n    }\n\n    return pattern;\n  };\n  /**\n   * pre-parsing a date string\n   * @param {string} dateString - a date string\n   * @param {string|Array.<string>} arg - a format string or a compiled object\n   * @returns {Object} a date structure\n   */\n\n\n  date.preparse = function (dateString, arg) {\n    var parser = locales[lang].parser,\n        token,\n        result,\n        offset = 0,\n        pattern = typeof arg === 'string' ? date.compile(arg) : arg,\n        formatString = pattern[0],\n        dt = {\n      Y: 1970,\n      M: 1,\n      D: 1,\n      H: 0,\n      A: 0,\n      h: 0,\n      m: 0,\n      s: 0,\n      S: 0,\n      Z: 0,\n      _index: 0,\n      _length: 0,\n      _match: 0\n    };\n    dateString = parser.pre(dateString);\n\n    for (var i = 1, len = pattern.length; i < len; i++) {\n      token = pattern[i];\n\n      if (parser[token]) {\n        result = parser[token](dateString.slice(offset), formatString);\n\n        if (!result.length) {\n          break;\n        }\n\n        offset += result.length;\n        dt[token.charAt(0)] = result.value;\n        dt._match++;\n      } else if (token === dateString.charAt(offset) || token === ' ') {\n        offset++;\n      } else {\n        break;\n      }\n    }\n\n    dt.H = dt.H || parser.h12(dt.h, dt.A);\n    dt._index = offset;\n    dt._length = dateString.length;\n    return dt;\n  };\n  /**\n   * validation\n   * @param {Object|string} arg1 - a date structure or a date string\n   * @param {string|Array.<string>} [arg2] - a format string or a compiled object\n   * @returns {boolean} whether the date string is a valid date\n   */\n\n\n  date.isValid = function (arg1, arg2) {\n    var dt = typeof arg1 === 'string' ? date.preparse(arg1, arg2) : arg1,\n        last = [31, 28 + date.isLeapYear(dt.Y) | 0, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][dt.M - 1];\n    return !(dt._index < 1 || dt._length < 1 || dt._index - dt._length || dt._match < 1 || dt.Y < 1 || dt.Y > 9999 || dt.M < 1 || dt.M > 12 || dt.D < 1 || dt.D > last || dt.H < 0 || dt.H > 23 || dt.m < 0 || dt.m > 59 || dt.s < 0 || dt.s > 59 || dt.S < 0 || dt.S > 999 || dt.Z < -720 || dt.Z > 840);\n  };\n  /**\n   * parsing a date string\n   * @param {string} dateString - a date string\n   * @param {string|Array.<string>} arg - a format string or a compiled object\n   * @param {boolean} [utc] - input as UTC\n   * @returns {Date} a constructed date\n   */\n\n\n  date.parse = function (dateString, arg, utc) {\n    var dt = date.preparse(dateString, arg);\n\n    if (date.isValid(dt)) {\n      dt.M -= dt.Y < 100 ? 22801 : 1; // 22801 = 1900 * 12 + 1\n\n      if (utc || dt.Z) {\n        return new Date(Date.UTC(dt.Y, dt.M, dt.D, dt.H, dt.m + dt.Z, dt.s, dt.S));\n      }\n\n      return new Date(dt.Y, dt.M, dt.D, dt.H, dt.m, dt.s, dt.S);\n    }\n\n    return new Date(NaN);\n  };\n  /**\n   * adding years\n   * @param {Date} dateObj - a date object\n   * @param {number} years - number of years to add\n   * @returns {Date} a date after adding the value\n   */\n\n\n  date.addYears = function (dateObj, years) {\n    return date.addMonths(dateObj, years * 12);\n  };\n  /**\n   * adding months\n   * @param {Date} dateObj - a date object\n   * @param {number} months - number of months to add\n   * @returns {Date} a date after adding the value\n   */\n\n\n  date.addMonths = function (dateObj, months) {\n    var d = new Date(dateObj.getTime());\n    d.setMonth(d.getMonth() + months);\n    return d;\n  };\n  /**\n   * adding days\n   * @param {Date} dateObj - a date object\n   * @param {number} days - number of days to add\n   * @returns {Date} a date after adding the value\n   */\n\n\n  date.addDays = function (dateObj, days) {\n    var d = new Date(dateObj.getTime());\n    d.setDate(d.getDate() + days);\n    return d;\n  };\n  /**\n   * adding hours\n   * @param {Date} dateObj - a date object\n   * @param {number} hours - number of hours to add\n   * @returns {Date} a date after adding the value\n   */\n\n\n  date.addHours = function (dateObj, hours) {\n    return date.addMilliseconds(dateObj, hours * 3600000);\n  };\n  /**\n   * adding minutes\n   * @param {Date} dateObj - a date object\n   * @param {number} minutes - number of minutes to add\n   * @returns {Date} a date after adding the value\n   */\n\n\n  date.addMinutes = function (dateObj, minutes) {\n    return date.addMilliseconds(dateObj, minutes * 60000);\n  };\n  /**\n   * adding seconds\n   * @param {Date} dateObj - a date object\n   * @param {number} seconds - number of seconds to add\n   * @returns {Date} a date after adding the value\n   */\n\n\n  date.addSeconds = function (dateObj, seconds) {\n    return date.addMilliseconds(dateObj, seconds * 1000);\n  };\n  /**\n   * adding milliseconds\n   * @param {Date} dateObj - a date object\n   * @param {number} milliseconds - number of milliseconds to add\n   * @returns {Date} a date after adding the value\n   */\n\n\n  date.addMilliseconds = function (dateObj, milliseconds) {\n    return new Date(dateObj.getTime() + milliseconds);\n  };\n  /**\n   * subtracting\n   * @param {Date} date1 - a Date object\n   * @param {Date} date2 - a Date object\n   * @returns {Object} a result object subtracting date2 from date1\n   */\n\n\n  date.subtract = function (date1, date2) {\n    var delta = date1.getTime() - date2.getTime();\n    return {\n      toMilliseconds: function () {\n        return delta;\n      },\n      toSeconds: function () {\n        return delta / 1000 | 0;\n      },\n      toMinutes: function () {\n        return delta / 60000 | 0;\n      },\n      toHours: function () {\n        return delta / 3600000 | 0;\n      },\n      toDays: function () {\n        return delta / 86400000 | 0;\n      }\n    };\n  };\n  /**\n   * leap year\n   * @param {number} y - year\n   * @returns {boolean} whether the year is a leap year\n   */\n\n\n  date.isLeapYear = function (y) {\n    return !(y % 4) && !!(y % 100) || !(y % 400);\n  };\n  /**\n   * comparison of two dates\n   * @param {Date} date1 - a Date object\n   * @param {Date} date2 - a Date object\n   * @returns {boolean} whether the dates are the same day (times are ignored)\n   */\n\n\n  date.isSameDay = function (date1, date2) {\n    return date1.toDateString() === date2.toDateString();\n  };\n  /**\n   * change locale or setting a new locale definition\n   * @param {string} [code] - language code\n   * @param {Object} [locale] - locale definition\n   * @returns {string} current language code\n   */\n\n\n  date.locale = function (code, locale) {\n    if (locale) {\n      customize(code, {\n        res: _res,\n        formatter: _formatter,\n        parser: _parser\n      }, locale);\n    } else if (code) {\n      lang = code;\n    }\n\n    return lang;\n  };\n  /**\n   * locale extension\n   * @param {Object} extension - locale extension\n   * @returns {void}\n   */\n\n\n  date.extend = function (extension) {\n    customize(lang, locales[lang], extension);\n  };\n  /**\n   * plugin import or definition\n   * @param {string} name - plugin name\n   * @param {Object} [extension] - locale extension\n   * @returns {void}\n   */\n\n\n  date.plugin = function (name, extension) {\n    plugins[name] = plugins[name] || extension;\n\n    if (!extension && plugins[name]) {\n      date.extend(plugins[name]);\n    }\n  }; // Create default locale (English)\n\n\n  date.locale(lang, {});\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = date;\n  } else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return date;\n    });\n  } else {\n    global.date = date;\n  }\n})(this);","map":{"version":3,"sources":["/Users/qier/Documents/cs407/In-request_cs407/dev/Front-end/in-request/node_modules/date-and-time/date-and-time.js"],"names":["global","date","locales","plugins","lang","_res","MMMM","MMM","dddd","ddd","dd","A","_formatter","YYYY","d","getFullYear","slice","YY","Y","res","getMonth","MM","M","DD","getDate","D","HH","getHours","H","hh","h","mm","getMinutes","m","ss","getSeconds","s","SSS","getMilliseconds","SS","S","getDay","Z","utc","exec","toTimeString","post","str","_parser","result","find","value","h12","a","re","length","array","index","i","len","item","indexOf","pre","customize","code","base","locale","extend","proto","props","Locale","r","prototype","constructor","newLocale","key","hasOwnProperty","loc","formatter","parser","format","dateObj","formatString","addMinutes","getTimezoneOffset","replace","token","compile","keys","pattern","preparse","dateString","arg","offset","dt","_index","_length","_match","charAt","isValid","arg1","arg2","last","isLeapYear","parse","Date","UTC","NaN","addYears","years","addMonths","months","getTime","setMonth","addDays","days","setDate","addHours","hours","addMilliseconds","minutes","addSeconds","seconds","milliseconds","subtract","date1","date2","delta","toMilliseconds","toSeconds","toMinutes","toHours","toDays","y","isSameDay","toDateString","extension","plugin","name","module","exports","define","amd"],"mappings":"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","sourcesContent":["/**\n * @preserve date-and-time.js (c) KNOWLEDGECODE | MIT\n */\n(function (global) {\n    'use strict';\n\n    var date = {},\n        locales = {},\n        plugins = {},\n        lang = 'en',\n        _res = {\n            MMMM: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n            MMM: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            dddd: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ddd: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            dd: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n            A: ['AM', 'PM']\n        },\n        _formatter = {\n            YYYY: function (d/*, formatString*/) { return ('000' + d.getFullYear()).slice(-4); },\n            YY: function (d/*, formatString*/) { return ('0' + d.getFullYear()).slice(-2); },\n            Y: function (d/*, formatString*/) { return '' + d.getFullYear(); },\n            MMMM: function (d/*, formatString*/) { return this.res.MMMM[d.getMonth()]; },\n            MMM: function (d/*, formatString*/) { return this.res.MMM[d.getMonth()]; },\n            MM: function (d/*, formatString*/) { return ('0' + (d.getMonth() + 1)).slice(-2); },\n            M: function (d/*, formatString*/) { return '' + (d.getMonth() + 1); },\n            DD: function (d/*, formatString*/) { return ('0' + d.getDate()).slice(-2); },\n            D: function (d/*, formatString*/) { return '' + d.getDate(); },\n            HH: function (d/*, formatString*/) { return ('0' + d.getHours()).slice(-2); },\n            H: function (d/*, formatString*/) { return '' + d.getHours(); },\n            A: function (d/*, formatString*/) { return this.res.A[d.getHours() > 11 | 0]; },\n            hh: function (d/*, formatString*/) { return ('0' + (d.getHours() % 12 || 12)).slice(-2); },\n            h: function (d/*, formatString*/) { return '' + (d.getHours() % 12 || 12); },\n            mm: function (d/*, formatString*/) { return ('0' + d.getMinutes()).slice(-2); },\n            m: function (d/*, formatString*/) { return '' + d.getMinutes(); },\n            ss: function (d/*, formatString*/) { return ('0' + d.getSeconds()).slice(-2); },\n            s: function (d/*, formatString*/) { return '' + d.getSeconds(); },\n            SSS: function (d/*, formatString*/) { return ('00' + d.getMilliseconds()).slice(-3); },\n            SS: function (d/*, formatString*/) { return ('0' + (d.getMilliseconds() / 10 | 0)).slice(-2); },\n            S: function (d/*, formatString*/) { return '' + (d.getMilliseconds() / 100 | 0); },\n            dddd: function (d/*, formatString*/) { return this.res.dddd[d.getDay()]; },\n            ddd: function (d/*, formatString*/) { return this.res.ddd[d.getDay()]; },\n            dd: function (d/*, formatString*/) { return this.res.dd[d.getDay()]; },\n            Z: function (d/*, formatString*/) { return d.utc ? '+0000' : /[\\+-]\\d{4}/.exec(d.toTimeString())[0]; },\n            post: function (str) { return str; }\n        },\n        _parser = {\n            YYYY: function (str/*, formatString */) { return this.exec(/^\\d{4}/, str); },\n            Y: function (str/*, formatString */) { return this.exec(/^\\d{1,4}/, str); },\n            MMMM: function (str/*, formatString */) {\n                var result = this.find(this.res.MMMM, str);\n                result.value++;\n                return result;\n            },\n            MMM: function (str/*, formatString */) {\n                var result = this.find(this.res.MMM, str);\n                result.value++;\n                return result;\n            },\n            MM: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n            M: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n            DD: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n            D: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n            HH: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n            H: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n            A: function (str/*, formatString */) { return this.find(this.res.A, str); },\n            hh: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n            h: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n            mm: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n            m: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n            ss: function (str/*, formatString */) { return this.exec(/^\\d\\d/, str); },\n            s: function (str/*, formatString */) { return this.exec(/^\\d\\d?/, str); },\n            SSS: function (str/*, formatString */) { return this.exec(/^\\d{1,3}/, str); },\n            SS: function (str/*, formatString */) {\n                var result = this.exec(/^\\d\\d?/, str);\n                result.value *= 10;\n                return result;\n            },\n            S: function (str/*, formatString */) {\n                var result = this.exec(/^\\d/, str);\n                result.value *= 100;\n                return result;\n            },\n            Z: function (str/*, formatString */) {\n                var result = this.exec(/^[\\+-]\\d{2}[0-5]\\d/, str);\n                result.value = (result.value / 100 | 0) * -60 - result.value % 100;\n                return result;\n            },\n            h12: function (h, a) { return (h === 12 ? 0 : h) + a * 12; },\n            exec: function (re, str) {\n                var result = (re.exec(str) || [''])[0];\n                return { value: result | 0, length: result.length };\n            },\n            find: function (array, str) {\n                var index = -1, length = 0;\n\n                for (var i = 0, len = array.length, item; i < len; i++) {\n                    item = array[i];\n                    if (!str.indexOf(item) && item.length > length) {\n                        index = i;\n                        length = item.length;\n                    }\n                }\n                return { value: index, length: length };\n            },\n            pre: function (str) { return str; }\n        },\n        customize = function (code, base, locale) {\n            var extend = function (proto, props, res) {\n                    var Locale = function (r) {\n                        if (r) { this.res = r; }\n                    };\n\n                    Locale.prototype = proto;\n                    Locale.prototype.constructor = Locale;\n\n                    var newLocale = new Locale(res),\n                        value;\n\n                    for (var key in props || {}) {\n                        if (props.hasOwnProperty(key)) {\n                            value = props[key];\n                            newLocale[key] = value.slice ? value.slice() : value;\n                        }\n                    }\n                    return newLocale;\n                },\n                loc = { res: extend(base.res, locale.res) };\n\n            loc.formatter = extend(base.formatter, locale.formatter, loc.res);\n            loc.parser = extend(base.parser, locale.parser, loc.res);\n            locales[code] = loc;\n        };\n\n    /**\n     * formatting a date\n     * @param {Date} dateObj - a Date object\n     * @param {string} formatString - a format string\n     * @param {boolean} [utc] - output as UTC\n     * @returns {string} a formatted string\n     */\n    date.format = function (dateObj, formatString, utc) {\n        var d = date.addMinutes(dateObj, utc ? dateObj.getTimezoneOffset() : 0),\n            formatter = locales[lang].formatter;\n\n        d.utc = utc;\n        return formatString.replace(/\\[[^\\[\\]]*]|\\[.*\\][^\\[]*\\]|([A-Za-z])\\1*|./g, function (token) {\n            return formatter[token] ? formatter.post(formatter[token](d, formatString)) : token.replace(/\\[(.*)]/, '$1');\n        });\n    };\n\n    /**\n     * compiling a format string for the parser\n     * @param {string} formatString - a format string\n     * @returns {Array.<string>} a compiled object\n     */\n    date.compile = function (formatString) {\n        var re = /([A-Za-z])\\1*|./g, keys, pattern = [formatString];\n\n        formatString = formatString.replace(/\\[[^\\[\\]]*]|\\[.*\\][^\\[]*\\]/g, function (str) {\n            return str.replace(/./g, ' ').slice(2);\n        });\n        while ((keys = re.exec(formatString))) {\n            pattern[pattern.length] = keys[0];\n        }\n        return pattern;\n    };\n\n    /**\n     * pre-parsing a date string\n     * @param {string} dateString - a date string\n     * @param {string|Array.<string>} arg - a format string or a compiled object\n     * @returns {Object} a date structure\n     */\n    date.preparse = function (dateString, arg) {\n        var parser = locales[lang].parser, token, result, offset = 0,\n            pattern = typeof arg === 'string' ? date.compile(arg) : arg, formatString = pattern[0],\n            dt = { Y: 1970, M: 1, D: 1, H: 0, A: 0, h: 0, m: 0, s: 0, S: 0, Z: 0, _index: 0, _length: 0, _match: 0 };\n\n        dateString = parser.pre(dateString);\n        for (var i = 1, len = pattern.length; i < len; i++) {\n            token = pattern[i];\n            if (parser[token]) {\n                result = parser[token](dateString.slice(offset), formatString);\n                if (!result.length) {\n                    break;\n                }\n                offset += result.length;\n                dt[token.charAt(0)] = result.value;\n                dt._match++;\n            } else if (token === dateString.charAt(offset) || token === ' ') {\n                offset++;\n            } else {\n                break;\n            }\n        }\n        dt.H = dt.H || parser.h12(dt.h, dt.A);\n        dt._index = offset;\n        dt._length = dateString.length;\n        return dt;\n    };\n\n    /**\n     * validation\n     * @param {Object|string} arg1 - a date structure or a date string\n     * @param {string|Array.<string>} [arg2] - a format string or a compiled object\n     * @returns {boolean} whether the date string is a valid date\n     */\n    date.isValid = function (arg1, arg2) {\n        var dt = typeof arg1 === 'string' ? date.preparse(arg1, arg2) : arg1,\n            last = [31, 28 + date.isLeapYear(dt.Y) | 0, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][dt.M - 1];\n\n        return !(\n            dt._index < 1 || dt._length < 1 || dt._index - dt._length || dt._match < 1 ||\n            dt.Y < 1 || dt.Y > 9999 || dt.M < 1 || dt.M > 12 || dt.D < 1 || dt.D > last ||\n            dt.H < 0 || dt.H > 23 || dt.m < 0 || dt.m > 59 || dt.s < 0 || dt.s > 59 || dt.S < 0 || dt.S > 999 ||\n            dt.Z < -720 || dt.Z > 840\n        );\n    };\n\n    /**\n     * parsing a date string\n     * @param {string} dateString - a date string\n     * @param {string|Array.<string>} arg - a format string or a compiled object\n     * @param {boolean} [utc] - input as UTC\n     * @returns {Date} a constructed date\n     */\n    date.parse = function (dateString, arg, utc) {\n        var dt = date.preparse(dateString, arg);\n\n        if (date.isValid(dt)) {\n            dt.M -= dt.Y < 100 ? 22801 : 1; // 22801 = 1900 * 12 + 1\n            if (utc || dt.Z) {\n                return new Date(Date.UTC(dt.Y, dt.M, dt.D, dt.H, dt.m + dt.Z, dt.s, dt.S));\n            }\n            return new Date(dt.Y, dt.M, dt.D, dt.H, dt.m, dt.s, dt.S);\n        }\n        return new Date(NaN);\n    };\n\n    /**\n     * adding years\n     * @param {Date} dateObj - a date object\n     * @param {number} years - number of years to add\n     * @returns {Date} a date after adding the value\n     */\n    date.addYears = function (dateObj, years) {\n        return date.addMonths(dateObj, years * 12);\n    };\n\n    /**\n     * adding months\n     * @param {Date} dateObj - a date object\n     * @param {number} months - number of months to add\n     * @returns {Date} a date after adding the value\n     */\n    date.addMonths = function (dateObj, months) {\n        var d = new Date(dateObj.getTime());\n\n        d.setMonth(d.getMonth() + months);\n        return d;\n    };\n\n    /**\n     * adding days\n     * @param {Date} dateObj - a date object\n     * @param {number} days - number of days to add\n     * @returns {Date} a date after adding the value\n     */\n    date.addDays = function (dateObj, days) {\n        var d = new Date(dateObj.getTime());\n\n        d.setDate(d.getDate() + days);\n        return d;\n    };\n\n    /**\n     * adding hours\n     * @param {Date} dateObj - a date object\n     * @param {number} hours - number of hours to add\n     * @returns {Date} a date after adding the value\n     */\n    date.addHours = function (dateObj, hours) {\n        return date.addMilliseconds(dateObj, hours * 3600000);\n    };\n\n    /**\n     * adding minutes\n     * @param {Date} dateObj - a date object\n     * @param {number} minutes - number of minutes to add\n     * @returns {Date} a date after adding the value\n     */\n    date.addMinutes = function (dateObj, minutes) {\n        return date.addMilliseconds(dateObj, minutes * 60000);\n    };\n\n    /**\n     * adding seconds\n     * @param {Date} dateObj - a date object\n     * @param {number} seconds - number of seconds to add\n     * @returns {Date} a date after adding the value\n     */\n    date.addSeconds = function (dateObj, seconds) {\n        return date.addMilliseconds(dateObj, seconds * 1000);\n    };\n\n    /**\n     * adding milliseconds\n     * @param {Date} dateObj - a date object\n     * @param {number} milliseconds - number of milliseconds to add\n     * @returns {Date} a date after adding the value\n     */\n    date.addMilliseconds = function (dateObj, milliseconds) {\n        return new Date(dateObj.getTime() + milliseconds);\n    };\n\n    /**\n     * subtracting\n     * @param {Date} date1 - a Date object\n     * @param {Date} date2 - a Date object\n     * @returns {Object} a result object subtracting date2 from date1\n     */\n    date.subtract = function (date1, date2) {\n        var delta = date1.getTime() - date2.getTime();\n\n        return {\n            toMilliseconds: function () {\n                return delta;\n            },\n            toSeconds: function () {\n                return delta / 1000 | 0;\n            },\n            toMinutes: function () {\n                return delta / 60000 | 0;\n            },\n            toHours: function () {\n                return delta / 3600000 | 0;\n            },\n            toDays: function () {\n                return delta / 86400000 | 0;\n            }\n        };\n    };\n\n    /**\n     * leap year\n     * @param {number} y - year\n     * @returns {boolean} whether the year is a leap year\n     */\n    date.isLeapYear = function (y) {\n        return (!(y % 4) && !!(y % 100)) || !(y % 400);\n    };\n\n    /**\n     * comparison of two dates\n     * @param {Date} date1 - a Date object\n     * @param {Date} date2 - a Date object\n     * @returns {boolean} whether the dates are the same day (times are ignored)\n     */\n    date.isSameDay = function (date1, date2) {\n        return date1.toDateString() === date2.toDateString();\n    };\n\n    /**\n     * change locale or setting a new locale definition\n     * @param {string} [code] - language code\n     * @param {Object} [locale] - locale definition\n     * @returns {string} current language code\n     */\n    date.locale = function (code, locale) {\n        if (locale) {\n            customize(code, { res: _res, formatter: _formatter, parser: _parser }, locale);\n        } else if (code) {\n            lang = code;\n        }\n        return lang;\n    };\n\n    /**\n     * locale extension\n     * @param {Object} extension - locale extension\n     * @returns {void}\n     */\n    date.extend = function (extension) {\n        customize(lang, locales[lang], extension);\n    };\n\n    /**\n     * plugin import or definition\n     * @param {string} name - plugin name\n     * @param {Object} [extension] - locale extension\n     * @returns {void}\n     */\n    date.plugin = function (name, extension) {\n        plugins[name] = plugins[name] || extension;\n        if (!extension && plugins[name]) {\n            date.extend(plugins[name]);\n        }\n    };\n\n    // Create default locale (English)\n    date.locale(lang, {});\n\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = date;\n    } else if (typeof define === 'function' && define.amd) {\n        define([], function () {\n            return date;\n        });\n    } else {\n        global.date = date;\n    }\n\n}(this));\n"]},"metadata":{},"sourceType":"script"}